{
	"id": "10f750515605783c102e898c4ada6fc5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"MNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract MalluCrypto is ERC721, ERC721URIStorage, Ownable {\r\n    constructor(address initialOwner)\r\n        ERC721(\"MalluCrypto\", \"MNFT\")\r\n        Ownable(initialOwner)\r\n    {}\r\n\r\n    function safeMint(address to, uint256 tokenId, string memory uri)\r\n        public\r\n        onlyOwner\r\n    {\r\n        _safeMint(to, tokenId);\r\n        _setTokenURI(tokenId, uri);\r\n    }\r\n\r\n    // The following functions are overrides required by Solidity.\r\n\r\n    function tokenURI(uint256 tokenId)\r\n        public\r\n        view\r\n        override(ERC721, ERC721URIStorage)\r\n        returns (string memory)\r\n    {\r\n        return super.tokenURI(tokenId);\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceId)\r\n        public\r\n        view\r\n        override(ERC721, ERC721URIStorage)\r\n        returns (bool)\r\n    {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.0;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xde13f6ab310a659b9732f7f7ea3eed7c4d9925cc72e77e6554b2126563a143f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2176f1c5e871613bd6502558cc98d268e92167dcd546d15941587a670a48d4eb\",\"dweb:/ipfs/QmboYR7jbENha8ahFbWeHu2pHr5jjA9PuDzRDJHLvGDCBh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x32f1faf405d9d68f67d407d817ef8f4262be6e21223c04fa371b8c7a63762890\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e15ded8a8dfeaf5d5f6ab45c2520910f2f98381bc3136d64fc76894e0db49d1\",\"dweb:/ipfs/QmTYQqvbNnAjTB4hfQHMgnj3u9kNqkykfdCBY5TkXe6zp1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0660592b105270f9166bbb80f18a3fd6506cfc4ab08a55909d374f4b584010d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbff0f7bd26d2a81e10bdac898eb6e887140103c87c1771b62ba1d4c8598896e\",\"dweb:/ipfs/QmSPznUTUWUD54WAbZFi84E4X8iVSNQTBJzYVBk9Ais7u5\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x79c59ccbed8a827ff823b63ffbf20d71b75e7710d01156f5632b94c4d963d26a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf5ad5707327ba21cb3629644525e4cbc2c0dfabc58131bf109c5d04dde9c4e\",\"dweb:/ipfs/Qmf99yZjMv7195AeoajfK57iPU2hyDWJbkwiXJYTmYnqfg\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0x8f3785d1308dee180265e23c7501c570ff1d83435788effbef6fa0ad9be97aae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d90f91cd654d621d6ca8e72ed2cd30e3b4004aac74f4229d500dfac695a98cc4\",\"dweb:/ipfs/QmdhuoZMkj2KY8AKfKSKWgL2bGHfv5Rui6oYb8U6tV2ePo\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x55017a91345ea407d28848575fec7577a10d4025f3e5f206d78e52074534c617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dc01ad2a60e330da1e8b61bf73ede01c65ff8e1077bf4b79367363583761946\",\"dweb:/ipfs/QmdA8SvocYva7PU6aUTygUfvHFQfEKvnVjJWQcLnqEdY1G\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xbc6690e09b5c0729776d3af9161cebf6e92fd7e7e1396ce9d542f69c8f04282c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d0ba319335c98b76bf697a19c59134284cc48c7e2b2d95bd958352b5955b566\",\"dweb:/ipfs/QmXxCoGxsEN4oAVjNtoD6LosFMSJGifVcSzVH5pKV6ushD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbb8e61c91d4c2998ab2728541b5b0648f1c2887adc40320d05f2e59dfcd7b26f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17e87f4d08a4d91ed894c5dfd908c6940c2676456e1ca5f273e3bb2626b3949f\",\"dweb:/ipfs/QmbxfRXFKBGKEqQZjKX3MbKgQHjZBftUASUiAgBcak4W6p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbb8e61c91d4c2998ab2728541b5b0648f1c2887adc40320d05f2e59dfcd7b26f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17e87f4d08a4d91ed894c5dfd908c6940c2676456e1ca5f273e3bb2626b3949f\",\"dweb:/ipfs/QmbxfRXFKBGKEqQZjKX3MbKgQHjZBftUASUiAgBcak4W6p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbb8e61c91d4c2998ab2728541b5b0648f1c2887adc40320d05f2e59dfcd7b26f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17e87f4d08a4d91ed894c5dfd908c6940c2676456e1ca5f273e3bb2626b3949f\",\"dweb:/ipfs/QmbxfRXFKBGKEqQZjKX3MbKgQHjZBftUASUiAgBcak4W6p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbb8e61c91d4c2998ab2728541b5b0648f1c2887adc40320d05f2e59dfcd7b26f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17e87f4d08a4d91ed894c5dfd908c6940c2676456e1ca5f273e3bb2626b3949f\",\"dweb:/ipfs/QmbxfRXFKBGKEqQZjKX3MbKgQHjZBftUASUiAgBcak4W6p\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xcca838cc7c9ece1bf590cb2ddbfec56171605fa1763a4f23e8c8f8521a777220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64f2ffdf9a7f245af33220e7f6162c3013f429536057037418fb0f3e21d1aaab\",\"dweb:/ipfs/QmWDqgsUBSJDejsac8NwgdzqGbGhweFCigWz1UcKnGVqez\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x55017a91345ea407d28848575fec7577a10d4025f3e5f206d78e52074534c617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dc01ad2a60e330da1e8b61bf73ede01c65ff8e1077bf4b79367363583761946\",\"dweb:/ipfs/QmdA8SvocYva7PU6aUTygUfvHFQfEKvnVjJWQcLnqEdY1G\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa277a1f3d75b36598450617aaf1202affc99cadf7f162c90080875cf98f92930\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8eb967d37ca4b5103583257804478c1506c9a27ff339af2ed0f80481f0f4a354\",\"dweb:/ipfs/QmT95ws5ZxHtrEsqHUK6brBA4eRGtae6ggYf6vyMVX49JM\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x8097ab0621db02404597f6a74654b835035a3df43392c7c1de12fe3702d3b613\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d554004601f2cba955ed5c9c1537dab564a9c98258403d8b78d8ad4b3d2d245\",\"dweb:/ipfs/QmU5V1CFikeVzqaKBDc18bHPnroDhAh1Z5gHWgwo17gwFf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x32f1faf405d9d68f67d407d817ef8f4262be6e21223c04fa371b8c7a63762890\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e15ded8a8dfeaf5d5f6ab45c2520910f2f98381bc3136d64fc76894e0db49d1\",\"dweb:/ipfs/QmTYQqvbNnAjTB4hfQHMgnj3u9kNqkykfdCBY5TkXe6zp1\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x503f7cbbead49954851aa35f94e210b3b9adb4e003bc0cb4f838854802770dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfc2a1e5c6e329b0a83422342ea02773eb5ef1891c9c1caeab1bbfa4d5b26d52\",\"dweb:/ipfs/QmQaNcoCBijM5rQpHi53q5S9u5wnwsy8XwMeeEWbHgBoBq\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xce4e0bf91fc3bc1fb74403096ed7b80777df28e03154c9f64b049a862cef6557\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d8897ef365caecb89711a78a510a283a0faa56980e3048234c70ea8e43993ab\",\"dweb:/ipfs/QmZqX4RzBFMyJGYSTpDB5b2Fi2qzyicKTRNL2ozYi212Hb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xbc6690e09b5c0729776d3af9161cebf6e92fd7e7e1396ce9d542f69c8f04282c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d0ba319335c98b76bf697a19c59134284cc48c7e2b2d95bd958352b5955b566\",\"dweb:/ipfs/QmXxCoGxsEN4oAVjNtoD6LosFMSJGifVcSzVH5pKV6ushD\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x9c9194a1f6fbb7b8a837dc16686626b2093a9c6e46c812e14b0b09c8497b0213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542cb8cbe77cbb740d42beef23fe7a496711879c5ec843b89a8738e200a38e0b\",\"dweb:/ipfs/QmVpxj9wyTThYJWpoTc9mLWieiWj453h6b8mkLn8w2MdPG\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x95262f508a95ba186f276d838bfa43a58d27f479e016366e2115b8c075c907c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b060659a09a7e2a8f0c5cc4ce73c8d92e94a0a9ec54ea8860087137960b8ddb8\",\"dweb:/ipfs/QmSkoQ72fHYECah3MKDpqFu3CNgWGnGYiHYtXZDwDhzRM5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x55017a91345ea407d28848575fec7577a10d4025f3e5f206d78e52074534c617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dc01ad2a60e330da1e8b61bf73ede01c65ff8e1077bf4b79367363583761946\",\"dweb:/ipfs/QmdA8SvocYva7PU6aUTygUfvHFQfEKvnVjJWQcLnqEdY1G\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xbc6690e09b5c0729776d3af9161cebf6e92fd7e7e1396ce9d542f69c8f04282c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d0ba319335c98b76bf697a19c59134284cc48c7e2b2d95bd958352b5955b566\",\"dweb:/ipfs/QmXxCoGxsEN4oAVjNtoD6LosFMSJGifVcSzVH5pKV6ushD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa277a1f3d75b36598450617aaf1202affc99cadf7f162c90080875cf98f92930\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8eb967d37ca4b5103583257804478c1506c9a27ff339af2ed0f80481f0f4a354\",\"dweb:/ipfs/QmT95ws5ZxHtrEsqHUK6brBA4eRGtae6ggYf6vyMVX49JM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0660592b105270f9166bbb80f18a3fd6506cfc4ab08a55909d374f4b584010d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbff0f7bd26d2a81e10bdac898eb6e887140103c87c1771b62ba1d4c8598896e\",\"dweb:/ipfs/QmSPznUTUWUD54WAbZFi84E4X8iVSNQTBJzYVBk9Ais7u5\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x79c59ccbed8a827ff823b63ffbf20d71b75e7710d01156f5632b94c4d963d26a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf5ad5707327ba21cb3629644525e4cbc2c0dfabc58131bf109c5d04dde9c4e\",\"dweb:/ipfs/Qmf99yZjMv7195AeoajfK57iPU2hyDWJbkwiXJYTmYnqfg\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0x8f3785d1308dee180265e23c7501c570ff1d83435788effbef6fa0ad9be97aae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d90f91cd654d621d6ca8e72ed2cd30e3b4004aac74f4229d500dfac695a98cc4\",\"dweb:/ipfs/QmdhuoZMkj2KY8AKfKSKWgL2bGHfv5Rui6oYb8U6tV2ePo\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbb8e61c91d4c2998ab2728541b5b0648f1c2887adc40320d05f2e59dfcd7b26f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17e87f4d08a4d91ed894c5dfd908c6940c2676456e1ca5f273e3bb2626b3949f\",\"dweb:/ipfs/QmbxfRXFKBGKEqQZjKX3MbKgQHjZBftUASUiAgBcak4W6p\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xcca838cc7c9ece1bf590cb2ddbfec56171605fa1763a4f23e8c8f8521a777220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64f2ffdf9a7f245af33220e7f6162c3013f429536057037418fb0f3e21d1aaab\",\"dweb:/ipfs/QmWDqgsUBSJDejsac8NwgdzqGbGhweFCigWz1UcKnGVqez\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x55017a91345ea407d28848575fec7577a10d4025f3e5f206d78e52074534c617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dc01ad2a60e330da1e8b61bf73ede01c65ff8e1077bf4b79367363583761946\",\"dweb:/ipfs/QmdA8SvocYva7PU6aUTygUfvHFQfEKvnVjJWQcLnqEdY1G\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa277a1f3d75b36598450617aaf1202affc99cadf7f162c90080875cf98f92930\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8eb967d37ca4b5103583257804478c1506c9a27ff339af2ed0f80481f0f4a354\",\"dweb:/ipfs/QmT95ws5ZxHtrEsqHUK6brBA4eRGtae6ggYf6vyMVX49JM\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xff8cc11100e2d530082b23fbf0bf74e4b182df8f2d33d31f13d9a33d060c0a6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d451b2e9b617f3ac651ce78bcb37bc32368621a7e98b92c69e2073e74cc7247b\",\"dweb:/ipfs/QmYnWcbAPkwg2w5cxN8D4UnTwgsrAxAG92QGXnwjVH8VGW\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x8097ab0621db02404597f6a74654b835035a3df43392c7c1de12fe3702d3b613\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d554004601f2cba955ed5c9c1537dab564a9c98258403d8b78d8ad4b3d2d245\",\"dweb:/ipfs/QmU5V1CFikeVzqaKBDc18bHPnroDhAh1Z5gHWgwo17gwFf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x32f1faf405d9d68f67d407d817ef8f4262be6e21223c04fa371b8c7a63762890\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e15ded8a8dfeaf5d5f6ab45c2520910f2f98381bc3136d64fc76894e0db49d1\",\"dweb:/ipfs/QmTYQqvbNnAjTB4hfQHMgnj3u9kNqkykfdCBY5TkXe6zp1\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x503f7cbbead49954851aa35f94e210b3b9adb4e003bc0cb4f838854802770dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfc2a1e5c6e329b0a83422342ea02773eb5ef1891c9c1caeab1bbfa4d5b26d52\",\"dweb:/ipfs/QmQaNcoCBijM5rQpHi53q5S9u5wnwsy8XwMeeEWbHgBoBq\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xce4e0bf91fc3bc1fb74403096ed7b80777df28e03154c9f64b049a862cef6557\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d8897ef365caecb89711a78a510a283a0faa56980e3048234c70ea8e43993ab\",\"dweb:/ipfs/QmZqX4RzBFMyJGYSTpDB5b2Fi2qzyicKTRNL2ozYi212Hb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xbc6690e09b5c0729776d3af9161cebf6e92fd7e7e1396ce9d542f69c8f04282c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d0ba319335c98b76bf697a19c59134284cc48c7e2b2d95bd958352b5955b566\",\"dweb:/ipfs/QmXxCoGxsEN4oAVjNtoD6LosFMSJGifVcSzVH5pKV6ushD\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x9c9194a1f6fbb7b8a837dc16686626b2093a9c6e46c812e14b0b09c8497b0213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542cb8cbe77cbb740d42beef23fe7a496711879c5ec843b89a8738e200a38e0b\",\"dweb:/ipfs/QmVpxj9wyTThYJWpoTc9mLWieiWj453h6b8mkLn8w2MdPG\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x95262f508a95ba186f276d838bfa43a58d27f479e016366e2115b8c075c907c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b060659a09a7e2a8f0c5cc4ce73c8d92e94a0a9ec54ea8860087137960b8ddb8\",\"dweb:/ipfs/QmSkoQ72fHYECah3MKDpqFu3CNgWGnGYiHYtXZDwDhzRM5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1488,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x55017a91345ea407d28848575fec7577a10d4025f3e5f206d78e52074534c617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dc01ad2a60e330da1e8b61bf73ede01c65ff8e1077bf4b79367363583761946\",\"dweb:/ipfs/QmdA8SvocYva7PU6aUTygUfvHFQfEKvnVjJWQcLnqEdY1G\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x8097ab0621db02404597f6a74654b835035a3df43392c7c1de12fe3702d3b613\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d554004601f2cba955ed5c9c1537dab564a9c98258403d8b78d8ad4b3d2d245\",\"dweb:/ipfs/QmU5V1CFikeVzqaKBDc18bHPnroDhAh1Z5gHWgwo17gwFf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xbc6690e09b5c0729776d3af9161cebf6e92fd7e7e1396ce9d542f69c8f04282c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d0ba319335c98b76bf697a19c59134284cc48c7e2b2d95bd958352b5955b566\",\"dweb:/ipfs/QmXxCoGxsEN4oAVjNtoD6LosFMSJGifVcSzVH5pKV6ushD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x32f1faf405d9d68f67d407d817ef8f4262be6e21223c04fa371b8c7a63762890\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e15ded8a8dfeaf5d5f6ab45c2520910f2f98381bc3136d64fc76894e0db49d1\",\"dweb:/ipfs/QmTYQqvbNnAjTB4hfQHMgnj3u9kNqkykfdCBY5TkXe6zp1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":250:3097  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":250:3097  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fbfdb009a0206645905deefc94317147918bfaad7d60323d8fda675c4d7c88ac64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fbfdb009a0206645905deefc94317147918bfaad7d60323d8fda675c4d7c88ac64736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB REVERT 0xB0 MULMOD LOG0 KECCAK256 PUSH7 0x45905DEEFC9431 PUSH18 0x47918BFAAD7D60323D8FDA675C4D7C88AC64 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "250:2847:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fbfdb009a0206645905deefc94317147918bfaad7d60323d8fda675c4d7c88ac64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB REVERT 0xB0 MULMOD LOG0 KECCAK256 PUSH7 0x45905DEEFC9431 PUSH18 0x47918BFAAD7D60323D8FDA675C4D7C88AC64 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "250:2847:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 250,
									"end": 3097,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 250,
									"end": 3097,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fbfdb009a0206645905deefc94317147918bfaad7d60323d8fda675c4d7c88ac64736f6c63430008130033",
									".code": [
										{
											"begin": 250,
											"end": 3097,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 250,
											"end": 3097,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 250,
											"end": 3097,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 250,
											"end": 3097,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 250,
											"end": 3097,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 250,
											"end": 3097,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 250,
											"end": 3097,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 3097,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 250,
											"end": 3097,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"MNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x503f7cbbead49954851aa35f94e210b3b9adb4e003bc0cb4f838854802770dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfc2a1e5c6e329b0a83422342ea02773eb5ef1891c9c1caeab1bbfa4d5b26d52\",\"dweb:/ipfs/QmQaNcoCBijM5rQpHi53q5S9u5wnwsy8XwMeeEWbHgBoBq\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x9c9194a1f6fbb7b8a837dc16686626b2093a9c6e46c812e14b0b09c8497b0213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542cb8cbe77cbb740d42beef23fe7a496711879c5ec843b89a8738e200a38e0b\",\"dweb:/ipfs/QmVpxj9wyTThYJWpoTc9mLWieiWj453h6b8mkLn8w2MdPG\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x95262f508a95ba186f276d838bfa43a58d27f479e016366e2115b8c075c907c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b060659a09a7e2a8f0c5cc4ce73c8d92e94a0a9ec54ea8860087137960b8ddb8\",\"dweb:/ipfs/QmSkoQ72fHYECah3MKDpqFu3CNgWGnGYiHYtXZDwDhzRM5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xce4e0bf91fc3bc1fb74403096ed7b80777df28e03154c9f64b049a862cef6557\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d8897ef365caecb89711a78a510a283a0faa56980e3048234c70ea8e43993ab\",\"dweb:/ipfs/QmZqX4RzBFMyJGYSTpDB5b2Fi2qzyicKTRNL2ozYi212Hb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xbc6690e09b5c0729776d3af9161cebf6e92fd7e7e1396ce9d542f69c8f04282c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d0ba319335c98b76bf697a19c59134284cc48c7e2b2d95bd958352b5955b566\",\"dweb:/ipfs/QmXxCoGxsEN4oAVjNtoD6LosFMSJGifVcSzVH5pKV6ushD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xbc6690e09b5c0729776d3af9161cebf6e92fd7e7e1396ce9d542f69c8f04282c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d0ba319335c98b76bf697a19c59134284cc48c7e2b2d95bd958352b5955b566\",\"dweb:/ipfs/QmXxCoGxsEN4oAVjNtoD6LosFMSJGifVcSzVH5pKV6ushD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:15116  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:15116  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220346dceab4998dedb60533e67f7385e045a9c1d945de30fa4b43ac24578e219a464736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220346dceab4998dedb60533e67f7385e045a9c1d945de30fa4b43ac24578e219a464736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE PUSH14 0xCEAB4998DEDB60533E67F7385E04 GAS SWAP13 SAR SWAP5 0x5D 0xE3 0xF LOG4 0xB4 GASPRICE 0xC2 GASLIMIT PUSH25 0xE219A464736F6C634300081300330000000000000000000000 ",
							"sourceMap": "202:14914:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220346dceab4998dedb60533e67f7385e045a9c1d945de30fa4b43ac24578e219a464736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE PUSH14 0xCEAB4998DEDB60533E67F7385E04 GAS SWAP13 SAR SWAP5 0x5D 0xE3 0xF LOG4 0xB4 GASPRICE 0xC2 GASLIMIT PUSH25 0xE219A464736F6C634300081300330000000000000000000000 ",
							"sourceMap": "202:14914:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220346dceab4998dedb60533e67f7385e045a9c1d945de30fa4b43ac24578e219a464736f6c63430008130033",
									".code": [
										{
											"begin": 202,
											"end": 15116,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 202,
											"end": 15116,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 202,
											"end": 15116,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 202,
											"end": 15116,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 15116,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 15116,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 202,
											"end": 15116,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 15116,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 202,
											"end": 15116,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"MNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x9c9194a1f6fbb7b8a837dc16686626b2093a9c6e46c812e14b0b09c8497b0213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542cb8cbe77cbb740d42beef23fe7a496711879c5ec843b89a8738e200a38e0b\",\"dweb:/ipfs/QmVpxj9wyTThYJWpoTc9mLWieiWj453h6b8mkLn8w2MdPG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208f40d5f8e989e6ebdeab6a592d6a907512e33505d7eb19691540685e89bd3a4964736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f40d5f8e989e6ebdeab6a592d6a907512e33505d7eb19691540685e89bd3a4964736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 BLOCKHASH 0xD5 0xF8 0xE9 DUP10 0xE6 0xEB 0xDE 0xAB PUSH11 0x592D6A907512E33505D7EB NOT PUSH10 0x1540685E89BD3A496473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "215:1047:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f40d5f8e989e6ebdeab6a592d6a907512e33505d7eb19691540685e89bd3a4964736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 BLOCKHASH 0xD5 0xF8 0xE9 DUP10 0xE6 0xEB 0xDE 0xAB PUSH11 0x592D6A907512E33505D7EB NOT PUSH10 0x1540685E89BD3A496473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "215:1047:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208f40d5f8e989e6ebdeab6a592d6a907512e33505d7eb19691540685e89bd3a4964736f6c63430008130033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"MNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x95262f508a95ba186f276d838bfa43a58d27f479e016366e2115b8c075c907c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b060659a09a7e2a8f0c5cc4ce73c8d92e94a0a9ec54ea8860087137960b8ddb8\",\"dweb:/ipfs/QmSkoQ72fHYECah3MKDpqFu3CNgWGnGYiHYtXZDwDhzRM5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MNFT.sol": {
				"MalluCrypto": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MNFT.sol\":305:1170  contract MalluCrypto is ERC721, ERC721URIStorage, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"MNFT.sol\":370:481  constructor(address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"MNFT.sol\":460:472  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1380:1493  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x4d616c6c7543727970746f000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4d4e465400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1454:1459  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1446:1451  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1446:1459  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1469:1476  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1469:1486  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1380:1493  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1296:1297  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1272:1298  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1272:1284  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1272:1298  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1268:1363  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1349:1350  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1321:1352  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1268:1363  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1372:1404  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1391:1403  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1372:1390  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1372:1404  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1224:1411  constructor(address initialOwner) {... */\n  pop\n    /* \"MNFT.sol\":370:481  constructor(address initialOwner)... */\n  pop\n    /* \"MNFT.sol\":305:1170  contract MalluCrypto is ERC721, ERC721URIStorage, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2911:3098  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2984:3000  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3003:3009  _owner */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2984:3009  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3028:3036  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3019:3025  _owner */\n  0x07\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3019:3036  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3082:3090  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3051:3091  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3072:3080  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3051:3091  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2974:3098  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2911:3098  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_54\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_56\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_57:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_59\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_62\n  tag_21\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":932:1051   */\ntag_61:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_63\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_26\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_27:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_28:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_29:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_30:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_68:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_70\n  tag_29\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1909:1993   */\ntag_69:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_31:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_32:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_33:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_34:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_75\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_33\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2624:2663   */\n  tag_76\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_33\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_35:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_36:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_37:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_80\n    /* \"#utility.yul\":3013:3047   */\n  tag_81\n    /* \"#utility.yul\":3022:3046   */\n  tag_82\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_35\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3013:3047   */\n  tag_36\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2995:3048   */\n  tag_35\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_38:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_39:\n    /* \"#utility.yul\":3251:3290   */\n  tag_85\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_37\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3312:3403   */\n  tag_86\n    /* \"#utility.yul\":3361:3402   */\n  tag_87\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_38\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_34\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_40:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_41:\n    /* \"#utility.yul\":3572:3604   */\n  tag_90\n  tag_40\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3613:3678   */\n  tag_91\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_39\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_42:\n    /* \"#utility.yul\":3750:3870   */\ntag_93:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_96\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_41\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_93)\ntag_95:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_43:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_99\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_31\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4101:4130   */\n  tag_100\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_32\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_101:\n    /* \"#utility.yul\":4328:4408   */\n  tag_102\n    /* \"#utility.yul\":4384:4406   */\n  tag_103\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_32\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_42\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_98:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_44:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_45:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_106\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_44\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_46:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_108\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_45\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_9:\n    /* \"#utility.yul\":5145:5182   */\n  tag_110\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_27\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_112\n  tag_28\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5233:5289   */\ntag_111:\n    /* \"#utility.yul\":5313:5351   */\n  tag_113\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_30\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5398:5465   */\n  tag_114\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_43\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_116\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_117:\n    /* \"#utility.yul\":6339:6406   */\n  tag_118\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_46\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_115)\n    /* \"#utility.yul\":5560:6178   */\ntag_116:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_119\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_31\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_120:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_120)\ntag_122:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_124\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_45\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_123:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_115:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_47:\n    /* \"#utility.yul\":6516:6540   */\n  tag_126\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_24\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_14:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_128\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_47\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"MNFT.sol\":305:1170  contract MalluCrypto is ERC721, ERC721URIStorage, Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MNFT.sol\":305:1170  contract MalluCrypto is ERC721, ERC721URIStorage, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xcd279c7c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x23b872dd\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"MNFT.sol\":955:1167  function supportsInterface(bytes4 interfaceId)... */\n    tag_3:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2364:2453  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3496:3650  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3322:3435  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4142:4720  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4786:4918  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2184:2302  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1919:2127  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2292:2393  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1637:1722  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2517:2610  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3717:3861  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4984:5192  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"MNFT.sol\":751:947  function tokenURI(uint256 tokenId)... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MNFT.sol\":489:673  function safeMint(address to, uint256 tokenId, string memory uri)... */\n    tag_17:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3927:4080  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_18:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2542:2757  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"MNFT.sol\":955:1167  function supportsInterface(bytes4 interfaceId)... */\n    tag_26:\n        /* \"MNFT.sol\":1094:1098  bool */\n      0x00\n        /* \"MNFT.sol\":1123:1159  super.supportsInterface(interfaceId) */\n      tag_93\n        /* \"MNFT.sol\":1147:1158  interfaceId */\n      dup3\n        /* \"MNFT.sol\":1123:1146  super.supportsInterface */\n      tag_94\n        /* \"MNFT.sol\":1123:1159  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_93:\n        /* \"MNFT.sol\":1116:1159  return super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"MNFT.sol\":955:1167  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2364:2453  function name() public view virtual returns (string memory) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2409:2422  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2441:2446  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2434:2446  return _name */\n      dup1\n      sload\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_98\n      swap1\n      tag_97\n      jump\t// in\n    tag_98:\n      dup1\n      iszero\n      tag_99\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_100\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_99)\n    tag_100:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_101:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_101\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2364:2453  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3496:3650  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3563:3570  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3582:3604  _requireOwned(tokenId) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3596:3603  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3582:3595  _requireOwned */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3582:3604  _requireOwned(tokenId) */\n      jump\t// in\n    tag_103:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3622:3643  _getApproved(tokenId) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3635:3642  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3622:3634  _getApproved */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3622:3643  _getApproved(tokenId) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3615:3643  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3496:3650  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3322:3435  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3393:3428  _approve(to, tokenId, _msgSender()) */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3402:3404  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3406:3413  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3415:3427  _msgSender() */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3415:3425  _msgSender */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3415:3427  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3393:3401  _approve */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3393:3428  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3322:3435  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4142:4720  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4250:4251  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4236:4252  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4236:4238  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4236:4252  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4232:4319  if (to == address(0)) {... */\n      tag_113\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4305:4306  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4275:4308  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4232:4319  if (to == address(0)) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4537:4558  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4561:4595  _update(to, tokenId, _msgSender()) */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4569:4571  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4573:4580  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4582:4594  _msgSender() */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4582:4592  _msgSender */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4582:4594  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4561:4568  _update */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4561:4595  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4537:4595  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4626:4630  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4609:4630  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4609:4622  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4609:4630  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4605:4714  if (previousOwner != from) {... */\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4674:4678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4680:4687  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4689:4702  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4653:4703  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4605:4714  if (previousOwner != from) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4222:4720  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4142:4720  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4786:4918  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4872:4911  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4889:4893  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4895:4897  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4899:4906  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4872:4911  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4872:4888  safeTransferFrom */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4872:4911  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4786:4918  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2184:2302  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2247:2254  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2273:2295  _requireOwned(tokenId) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2287:2294  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2273:2286  _requireOwned */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2273:2295  _requireOwned(tokenId) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2266:2295  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2184:2302  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1919:2127  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1982:1989  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2022:2023  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2005:2024  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2005:2010  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2005:2024  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2088  if (owner == address(0)) {... */\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2074:2075  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2047:2077  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2088  if (owner == address(0)) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2104:2113  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2104:2120  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2114:2119  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2104:2120  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2097:2120  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1919:2127  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2292:2393  function renounceOwnership() public virtual onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1541  _checkOwner */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2356:2386  _transferOwnership(address(0)) */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2383:2384  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2356:2374  _transferOwnership */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2356:2386  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2292:2393  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1637:1722  function owner() public view virtual returns (address) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1683:1690  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1709:1715  _owner */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1702:1715  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1637:1722  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2517:2610  function symbol() public view virtual returns (string memory) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2564:2577  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2596:2603  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2589:2603  return _symbol */\n      dup1\n      sload\n      tag_136\n      swap1\n      tag_97\n      jump\t// in\n    tag_136:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_137\n      swap1\n      tag_97\n      jump\t// in\n    tag_137:\n      dup1\n      iszero\n      tag_138\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_139\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_138)\n    tag_139:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_140:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_140\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_138:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2517:2610  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3717:3861  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3802:3854  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3821:3833  _msgSender() */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3821:3831  _msgSender */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3821:3833  _msgSender() */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3835:3843  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3845:3853  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3802:3820  _setApprovalForAll */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3802:3854  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3717:3861  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4984:5192  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5097:5128  transferFrom(from, to, tokenId) */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5110:5114  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5116:5118  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5120:5127  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5097:5109  transferFrom */\n      tag_46\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5097:5128  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5138:5185  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5161:5165  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5167:5169  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5171:5178  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5180:5184  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5138:5160  _checkOnERC721Received */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5138:5185  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4984:5192  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MNFT.sol\":751:947  function tokenURI(uint256 tokenId)... */\n    tag_78:\n        /* \"MNFT.sol\":878:891  string memory */\n      0x60\n        /* \"MNFT.sol\":916:939  super.tokenURI(tokenId) */\n      tag_150\n        /* \"MNFT.sol\":931:938  tokenId */\n      dup3\n        /* \"MNFT.sol\":916:930  super.tokenURI */\n      tag_151\n        /* \"MNFT.sol\":916:939  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_150:\n        /* \"MNFT.sol\":909:939  return super.tokenURI(tokenId) */\n      swap1\n      pop\n        /* \"MNFT.sol\":751:947  function tokenURI(uint256 tokenId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"MNFT.sol\":489:673  function safeMint(address to, uint256 tokenId, string memory uri)... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1541  _checkOwner */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      jump\t// in\n    tag_153:\n        /* \"MNFT.sol\":606:628  _safeMint(to, tokenId) */\n      tag_155\n        /* \"MNFT.sol\":616:618  to */\n      dup4\n        /* \"MNFT.sol\":620:627  tokenId */\n      dup4\n        /* \"MNFT.sol\":606:615  _safeMint */\n      tag_156\n        /* \"MNFT.sol\":606:628  _safeMint(to, tokenId) */\n      jump\t// in\n    tag_155:\n        /* \"MNFT.sol\":639:665  _setTokenURI(tokenId, uri) */\n      tag_157\n        /* \"MNFT.sol\":652:659  tokenId */\n      dup3\n        /* \"MNFT.sol\":661:664  uri */\n      dup3\n        /* \"MNFT.sol\":639:651  _setTokenURI */\n      tag_158\n        /* \"MNFT.sol\":639:665  _setTokenURI(tokenId, uri) */\n      jump\t// in\n    tag_157:\n        /* \"MNFT.sol\":489:673  function safeMint(address to, uint256 tokenId, string memory uri)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3927:4080  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4015:4019  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4056  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4063  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4057:4062  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4063  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4073  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4064:4072  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4038:4073  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4031:4073  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3927:4080  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2542:2757  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1541  _checkOwner */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2646:2647  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2626:2648  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2626:2634  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2626:2648  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2622:2713  if (newOwner == address(0)) {... */\n      tag_163\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2699:2700  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2671:2702  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2622:2713  if (newOwner == address(0)) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2722:2750  _transferOwnership(newOwner) */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2741:2749  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2722:2740  _transferOwnership */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2722:2750  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2542:2757  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":936:1143  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1038:1042  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":759:769  0x49064906 */\n      0x49064906\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":752:770  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1061:1096  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1061:1072  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1061:1096  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1061:1136  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      dup1\n      tag_167\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1100:1136  super.supportsInterface(interfaceId) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1124:1135  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1100:1123  super.supportsInterface */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1100:1136  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1061:1136  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1054:1136  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":936:1143  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16137:16378  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16200:16207  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16219:16232  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16235:16252  _ownerOf(tokenId) */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16244:16251  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16235:16243  _ownerOf */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16235:16252  _ownerOf(tokenId) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16219:16252  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16283:16284  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16266:16285  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16266:16271  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16266:16285  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16262:16350  if (owner == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16331:16338  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16308:16339  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16262:16350  if (owner == address(0)) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16366:16371  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16359:16371  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16137:16378  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5937:6064  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6007:6014  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6033:6048  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6033:6057  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6049:6056  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6033:6057  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6026:6057  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5937:6064  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":655:751  function _msgSender() internal view virtual returns (address) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":708:715  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":734:744  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":727:744  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":655:751  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14417:14537  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14497:14530  _approve(to, tokenId, auth, true) */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14506:14508  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14510:14517  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14519:14523  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14525:14529  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14497:14505  _approve */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14497:14530  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14417:14537  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8837:9632  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8923:8930  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8942:8954  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8957:8974  _ownerOf(tokenId) */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8966:8973  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8957:8965  _ownerOf */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8957:8974  _ownerOf(tokenId) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8942:8974  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9050:9051  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9034:9052  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9034:9038  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9034:9052  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9030:9116  if (auth != address(0)) {... */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9068:9105  _checkAuthorized(from, auth, tokenId) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9085:9089  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9091:9095  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9097:9104  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9068:9084  _checkAuthorized */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9068:9105  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9030:9116  if (auth != address(0)) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9176:9177  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9160:9178  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9160:9164  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9160:9178  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9156:9412  if (from != address(0)) {... */\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9276:9324  _approve(address(0), tokenId, address(0), false) */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9293:9294  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9297:9304  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9314:9315  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9318:9323  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9276:9284  _approve */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9276:9324  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9386:9387  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9367:9376  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9367:9382  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9377:9381  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9367:9382  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9367:9387  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9156:9412  if (from != address(0)) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9440:9441  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9426:9442  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9426:9428  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9426:9442  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9422:9529  if (to != address(0)) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9503:9504  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9486:9495  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9486:9499  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9496:9498  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9486:9499  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9486:9504  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9422:9529  if (to != address(0)) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9558:9560  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9539:9546  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9539:9555  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9547:9554  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9539:9555  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9539:9560  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9595:9602  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9591:9593  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9576:9603  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9585:9589  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9576:9603  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9621:9625  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9614:9625  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8837:9632  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1795:1957  function _checkOwner() internal view virtual {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1865:1877  _msgSender() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1865:1875  _msgSender */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1865:1877  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1854:1877  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1854:1861  owner() */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1854:1859  owner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1854:1861  owner() */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1854:1877  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1850:1951  if (owner() != _msgSender()) {... */\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1927:1939  _msgSender() */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1927:1937  _msgSender */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1927:1939  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1900:1940  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1850:1951  if (owner() != _msgSender()) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1795:1957  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2911:3098  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2984:3000  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3003:3009  _owner */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2984:3009  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3028:3036  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3019:3025  _owner */\n      0x07\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3019:3036  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3082:3090  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3051:3091  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3072:3080  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3051:3091  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2974:3098  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2911:3098  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15590:15902  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15717:15718  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15697:15719  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15697:15705  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15697:15719  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15693:15784  if (operator == address(0)) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15764:15772  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15742:15773  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15693:15784  if (operator == address(0)) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15831:15839  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15793:15811  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15793:15818  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15812:15817  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15793:15818  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15793:15828  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15819:15827  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15793:15828  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15793:15839  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15876:15884  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15854:15895  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15869:15874  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15854:15895  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15886:15894  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15854:15895  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_198\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15590:15902  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16917:17699  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17050:17051  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17033:17035  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17033:17047  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17033:17051  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17029:17693  if (to.code.length > 0) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17087:17089  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17071:17107  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17108:17120  _msgSender() */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17108:17118  _msgSender */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17108:17120  _msgSender() */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17122:17126  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17128:17135  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17137:17141  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17071:17142  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_204\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_205\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      0x01\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17067:17683  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_207\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_212\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_211)\n    tag_212:\n      0x60\n      swap2\n      pop\n    tag_211:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17397:17398  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17380:17386  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17380:17393  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17380:17398  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17376:17669  if (reason.length == 0) {... */\n      tag_213\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17451:17453  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17429:17454  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17376:17669  if (reason.length == 0) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17621:17627  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17615:17628  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17606:17612  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17602:17604  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17598:17613  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17591:17629  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17067:17683  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17199:17240  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17189:17240  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17189:17195  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17189:17240  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17185:17315  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_217\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17293:17295  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17271:17296  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17185:17315  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17143:17329  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17029:17693  if (to.code.length > 0) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16917:17699  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1209:1802  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1282:1295  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1307:1329  _requireOwned(tokenId) */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1321:1328  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1307:1320  _requireOwned */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1307:1329  _requireOwned(tokenId) */\n      jump\t// in\n    tag_220:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1340:1363  string memory _tokenURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1366:1376  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1366:1385  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1377:1384  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1366:1385  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1340:1385  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_221\n      swap1\n      tag_97\n      jump\t// in\n    tag_221:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_222\n      swap1\n      tag_97\n      jump\t// in\n    tag_222:\n      dup1\n      iszero\n      tag_223\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_224\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_223)\n    tag_224:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_225:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_225\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_223:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1395:1413  string memory base */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1416:1426  _baseURI() */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1416:1424  _baseURI */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1416:1426  _baseURI() */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1395:1426  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1521:1522  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1505:1509  base */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1499:1517  bytes(base).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1499:1522  bytes(base).length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1495:1565  if (bytes(base).length == 0) {... */\n      tag_228\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1545:1554  _tokenURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1538:1554  return _tokenURI */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_219)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1495:1565  if (bytes(base).length == 0) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1690:1691  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1670:1679  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1664:1687  bytes(_tokenURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1664:1691  bytes(_tokenURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1660:1755  if (bytes(_tokenURI).length > 0) {... */\n      iszero\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1728:1732  base */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1734:1743  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1714:1744  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_230\n      swap3\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1707:1744  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_219)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1660:1755  if (bytes(_tokenURI).length > 0) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1772:1795  super.tokenURI(tokenId) */\n      tag_232\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1787:1794  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1772:1786  super.tokenURI */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1772:1795  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1765:1795  return super.tokenURI(tokenId) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1209:1802  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_219:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10632:10732  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10699:10725  _safeMint(to, tokenId, \"\") */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10709:10711  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10713:10720  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10699:10725  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10699:10708  _safeMint */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10699:10725  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10632:10732  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1921:2088  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2034:2043  _tokenURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2012:2022  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2012:2031  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2023:2030  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2012:2031  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2012:2043  _tokenURIs[tokenId] = _tokenURI */\n      swap1\n      dup2\n      tag_238\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2058:2081  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2073:2080  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2058:2081  MetadataUpdate(tokenId) */\n      mload(0x40)\n      tag_240\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1921:2088  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1560:1860  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1712:1737  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1697:1737  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1697:1708  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1697:1737  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1697:1801  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_242\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1768:1801  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1753:1801  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1753:1764  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1753:1801  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1697:1801  interfaceId == type(IERC721).interfaceId ||... */\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1697:1853  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_243\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1817:1853  super.supportsInterface(interfaceId) */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1841:1852  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1817:1840  super.supportsInterface */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1817:1853  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1697:1853  interfaceId == type(IERC721).interfaceId ||... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1678:1853  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1560:1860  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5706:5821  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5772:5779  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5798:5805  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5798:5814  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5806:5813  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5798:5814  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5791:5814  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5706:5821  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14719:15381  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14879:14888  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14879:14910  emitEvent || auth != address(0) */\n      dup1\n      tag_248\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14908:14909  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14892:14910  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14892:14896  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14892:14910  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14879:14910  emitEvent || auth != address(0) */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14875:15335  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14926:14939  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14942:14964  _requireOwned(tokenId) */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14956:14963  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14942:14955  _requireOwned */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14942:14964  _requireOwned(tokenId) */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14926:14964  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15108:15109  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15092:15110  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15092:15096  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15092:15110  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15092:15127  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_251\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15123:15127  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15114:15127  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15114:15119  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15114:15127  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15092:15127  auth != address(0) && owner != auth */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15092:15161  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_252\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15161  isApprovedForAll(owner, auth) */\n      tag_253\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15149:15154  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15156:15160  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15148  isApprovedForAll */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15161  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15131:15161  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15092:15161  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15088:15230  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15210:15214  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15188:15215  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15088:15230  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15248:15257  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15244:15325  if (emitEvent) {... */\n      iszero\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15302:15309  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15298:15300  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15282:15310  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15291:15296  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15282:15310  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15244:15325  if (emitEvent) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14912:15335  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14875:15335  if (emitEvent || auth != address(0)) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15372:15374  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15345:15360  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15345:15369  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15361:15368  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15345:15369  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15345:15374  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14719:15381  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7081:7449  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7193:7231  _isAuthorized(owner, spender, tokenId) */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7207:7212  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7214:7221  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7223:7230  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7193:7206  _isAuthorized */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7193:7231  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7188:7443  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7268:7269  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7251:7270  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7251:7256  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7251:7270  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7247:7433  if (owner == address(0)) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7320:7327  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7297:7328  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7247:7433  if (owner == address(0)) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7401:7408  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7410:7417  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7374:7418  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap3\n      swap2\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7188:7443  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7081:7449  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3173:3265  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3224:3237  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3249:3258  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3173:3265  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2676:2931  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2740:2753  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2765:2787  _requireOwned(tokenId) */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2779:2786  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2765:2778  _requireOwned */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2765:2787  _requireOwned(tokenId) */\n      jump\t// in\n    tag_268:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2798:2819  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2822:2832  _baseURI() */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2822:2830  _baseURI */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2822:2832  _baseURI() */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2798:2832  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2873:2874  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2855:2862  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2849:2870  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2849:2874  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2849:2924  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_270\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_271)\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2891:2898  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2900:2918  tokenId.toString() */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2900:2907  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2900:2916  tokenId.toString */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2900:2918  tokenId.toString() */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2877:2919  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_274\n      swap3\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2849:2924  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2842:2924  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2676:2931  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10953:11135  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11047:11065  _mint(to, tokenId) */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11053:11055  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11057:11064  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11047:11052  _mint */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11047:11065  _mint(to, tokenId) */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11075:11128  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11106:11107  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11110:11112  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11114:11121  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11123:11127  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11075:11097  _checkOnERC721Received */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11075:11128  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10953:11135  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":761:907  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":837:841  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":875:900  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":860:900  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":860:871  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":860:900  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":853:900  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":761:907  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6375:6647  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6478:6482  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6532:6533  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6513:6534  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6513:6520  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6513:6534  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6513:6640  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_281\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6560:6567  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6551:6567  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6551:6556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6551:6567  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6551:6603  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_282\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6571:6603  isApprovedForAll(owner, spender) */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6588:6593  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6595:6602  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6571:6587  isApprovedForAll */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6571:6603  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6551:6603  owner == spender || isApprovedForAll(owner, spender) */\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6551:6639  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_284\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6632:6639  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6607:6639  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6607:6628  _getApproved(tokenId) */\n      tag_285\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6620:6627  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6607:6619  _getApproved */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6607:6628  _getApproved(tokenId) */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6607:6639  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6551:6639  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6513:6640  spender != address(0) &&... */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6494:6640  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6375:6647  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":636:1334  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":692:705  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":741:755  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":778:779  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":758:775  Math.log10(value) */\n      tag_287\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":769:774  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":758:768  Math.log10 */\n      tag_288\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":758:775  Math.log10(value) */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":758:779  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":741:779  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":793:813  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":827:833  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":816:834  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_289\n      jumpi\n      tag_290\n      tag_291\n      jump\t// in\n    tag_290:\n    tag_289:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_292\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_292:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":793:834  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":848:859  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":974:980  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":970:972  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:981  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":958:964  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":954:982  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":947:982  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1291  while (true) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1016:1020  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1291  while (true) {... */\n      iszero\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1040:1045  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1179:1189  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1174:1176  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1167:1172  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1163:1177  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1158:1190  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1153:1156  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1145:1191  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1235:1237  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1226:1237  value /= 10 */\n      dup6\n      dup2\n      tag_295\n      jumpi\n      tag_296\n      tag_297\n      jump\t// in\n    tag_296:\n    tag_295:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1268:1269  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1259:1264  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1259:1269  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1291  while (true) {... */\n      tag_293\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1255:1276  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1291  while (true) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1311:1317  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1304:1317  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":636:1334  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9954:10281  function _mint(address to, uint256 tokenId) internal {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10035:10036  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10021:10037  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10021:10023  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10021:10037  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10017:10104  if (to == address(0)) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10090:10091  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10060:10093  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10017:10104  if (to == address(0)) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10113:10134  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10137:10169  _update(to, tokenId, address(0)) */\n      tag_302\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10145:10147  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10149:10156  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10166:10167  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10137:10144  _update */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10137:10169  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10113:10169  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10208:10209  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10183:10210  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10183:10196  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10183:10210  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10179:10275  if (previousOwner != address(0)) {... */\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10261:10262  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10233:10264  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_304\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10179:10275  if (previousOwner != address(0)) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10007:10281  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9954:10281  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12213:13129  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12266:12273  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12285:12299  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12302:12303  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12285:12303  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12350:12358  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12341:12346  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12341:12358  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12337:12440  if (value >= 10 ** 64) {... */\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12387:12395  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12378:12395  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_307\n      jumpi\n      tag_308\n      tag_297\n      jump\t// in\n    tag_308:\n    tag_307:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12423:12425  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12413:12425  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12337:12440  if (value >= 10 ** 64) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12466:12474  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12457:12462  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12457:12474  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12453:12556  if (value >= 10 ** 32) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12503:12511  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12494:12511  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_310\n      jumpi\n      tag_311\n      tag_297\n      jump\t// in\n    tag_311:\n    tag_310:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12539:12541  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12529:12541  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12453:12556  if (value >= 10 ** 32) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12582:12590  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12573:12578  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12573:12590  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12569:12672  if (value >= 10 ** 16) {... */\n      tag_312\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12619:12627  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12610:12627  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_313\n      jumpi\n      tag_314\n      tag_297\n      jump\t// in\n    tag_314:\n    tag_313:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12655:12657  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12645:12657  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12569:12672  if (value >= 10 ** 16) {... */\n    tag_312:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12698:12705  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12689:12694  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12689:12705  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12685:12785  if (value >= 10 ** 8) {... */\n      tag_315\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12734:12741  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12725:12741  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_316\n      jumpi\n      tag_317\n      tag_297\n      jump\t// in\n    tag_317:\n    tag_316:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12769:12770  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12759:12770  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12685:12785  if (value >= 10 ** 8) {... */\n    tag_315:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12811:12818  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12802:12807  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12802:12818  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12798:12898  if (value >= 10 ** 4) {... */\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12847:12854  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12838:12854  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_319\n      jumpi\n      tag_320\n      tag_297\n      jump\t// in\n    tag_320:\n    tag_319:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12882:12883  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12872:12883  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12798:12898  if (value >= 10 ** 4) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12924:12931  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12915:12920  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12915:12931  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12911:13011  if (value >= 10 ** 2) {... */\n      tag_321\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12960:12967  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12951:12967  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_322\n      jumpi\n      tag_323\n      tag_297\n      jump\t// in\n    tag_323:\n    tag_322:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12995:12996  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12985:12996  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12911:13011  if (value >= 10 ** 2) {... */\n    tag_321:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13037:13044  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13028:13033  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13028:13044  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13024:13090  if (value >= 10 ** 1) {... */\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13074:13075  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13064:13075  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13024:13090  if (value >= 10 ** 1) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13116:13122  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13109:13122  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12213:13129  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_325:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_326:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_327:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_328:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_329:\n        /* \"#utility.yul\":561:584   */\n      tag_388\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_328\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_389\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_389:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_330:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_391\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_329\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_25:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_394\n      tag_326\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":833:952   */\n    tag_393:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_395\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_330\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_331:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_332:\n        /* \"#utility.yul\":1268:1289   */\n      tag_398\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_331\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_28:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_400\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_332\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_333:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_334:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_335:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_404:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_404)\n    tag_406:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_336:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_337:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_409\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_333\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":2329:2400   */\n      tag_410\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_334\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_411\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_335\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":2499:2528   */\n      tag_412\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_336\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_32:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_414\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_337\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_338:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_339:\n        /* \"#utility.yul\":3016:3040   */\n      tag_417\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_338\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_418:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_340:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_420\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_339\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_35:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_423\n      tag_326\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":3292:3411   */\n    tag_422:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_424\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_340\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_341:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_342:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_427\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_341\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_343:\n        /* \"#utility.yul\":3872:3896   */\n      tag_429\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_342\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_38:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_431\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_343\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_344:\n        /* \"#utility.yul\":4210:4234   */\n      tag_433\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_342\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_434\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_434:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_345:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_436\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_344\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_41:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_439\n      tag_326\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":4503:4622   */\n    tag_438:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_440\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_345\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_441\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_340\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_45:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_444\n      tag_326\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":5000:5119   */\n    tag_443:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_445\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_345\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_446\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_345\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_447\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_340\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5844   */\n    tag_56:\n        /* \"#utility.yul\":5574:5580   */\n      0x00\n        /* \"#utility.yul\":5623:5625   */\n      0x20\n        /* \"#utility.yul\":5611:5620   */\n      dup3\n        /* \"#utility.yul\":5602:5609   */\n      dup5\n        /* \"#utility.yul\":5598:5621   */\n      sub\n        /* \"#utility.yul\":5594:5626   */\n      slt\n        /* \"#utility.yul\":5591:5710   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":5629:5708   */\n      tag_450\n      tag_326\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":5591:5710   */\n    tag_449:\n        /* \"#utility.yul\":5749:5750   */\n      0x00\n        /* \"#utility.yul\":5774:5827   */\n      tag_451\n        /* \"#utility.yul\":5819:5826   */\n      dup5\n        /* \"#utility.yul\":5810:5816   */\n      dup3\n        /* \"#utility.yul\":5799:5808   */\n      dup6\n        /* \"#utility.yul\":5795:5817   */\n      add\n        /* \"#utility.yul\":5774:5827   */\n      tag_345\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":5764:5827   */\n      swap2\n      pop\n        /* \"#utility.yul\":5720:5837   */\n      pop\n        /* \"#utility.yul\":5515:5844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5850:5968   */\n    tag_346:\n        /* \"#utility.yul\":5937:5961   */\n      tag_453\n        /* \"#utility.yul\":5955:5960   */\n      dup2\n        /* \"#utility.yul\":5937:5961   */\n      tag_338\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":5932:5935   */\n      dup3\n        /* \"#utility.yul\":5925:5962   */\n      mstore\n        /* \"#utility.yul\":5850:5968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5974:6196   */\n    tag_59:\n        /* \"#utility.yul\":6067:6071   */\n      0x00\n        /* \"#utility.yul\":6105:6107   */\n      0x20\n        /* \"#utility.yul\":6094:6103   */\n      dup3\n        /* \"#utility.yul\":6090:6108   */\n      add\n        /* \"#utility.yul\":6082:6108   */\n      swap1\n      pop\n        /* \"#utility.yul\":6118:6189   */\n      tag_455\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6175:6184   */\n      dup4\n        /* \"#utility.yul\":6171:6188   */\n      add\n        /* \"#utility.yul\":6162:6168   */\n      dup5\n        /* \"#utility.yul\":6118:6189   */\n      tag_346\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":5974:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_347:\n        /* \"#utility.yul\":6272:6293   */\n      tag_457\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_331\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_458\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_458:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_348:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_460\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_347\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_70:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_463\n      tag_326\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":6553:6672   */\n    tag_462:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_464\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_345\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_465\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_348\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_349:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_350:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_291:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_351:\n        /* \"#utility.yul\":7452:7479   */\n      tag_470\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_336\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_472\n      tag_291\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":7525:7613   */\n    tag_471:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_352:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_474\n      tag_325\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_475\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_351\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_353:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_478\n      tag_291\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":7928:7984   */\n    tag_477:\n        /* \"#utility.yul\":8002:8031   */\n      tag_479\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_336\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_354:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_355:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_482\n        /* \"#utility.yul\":8374:8422   */\n      tag_483\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_353\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":8358:8423   */\n      tag_352\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_485\n      tag_350\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":8498:8610   */\n    tag_484:\n        /* \"#utility.yul\":8619:8673   */\n      tag_486\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_354\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_356:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_488\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_489\n      tag_349\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":8769:8891   */\n    tag_488:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_490\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_355\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_74:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_493\n      tag_326\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":9178:9298   */\n    tag_492:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_494\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_345\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_495\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_345\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_496\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_340\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_498\n      tag_327\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":9765:9882   */\n    tag_497:\n        /* \"#utility.yul\":9906:9968   */\n      tag_499\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_356\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10299   */\n    tag_357:\n        /* \"#utility.yul\":10053:10057   */\n      0x00\n        /* \"#utility.yul\":10143:10161   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10135:10141   */\n      dup3\n        /* \"#utility.yul\":10132:10162   */\n      gt\n        /* \"#utility.yul\":10129:10185   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":10165:10183   */\n      tag_502\n      tag_291\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":10129:10185   */\n    tag_501:\n        /* \"#utility.yul\":10203:10232   */\n      tag_503\n        /* \"#utility.yul\":10225:10231   */\n      dup3\n        /* \"#utility.yul\":10203:10232   */\n      tag_336\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":10195:10232   */\n      swap1\n      pop\n        /* \"#utility.yul\":10287:10291   */\n      0x20\n        /* \"#utility.yul\":10281:10285   */\n      dup2\n        /* \"#utility.yul\":10277:10292   */\n      add\n        /* \"#utility.yul\":10269:10292   */\n      swap1\n      pop\n        /* \"#utility.yul\":9991:10299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10305:10730   */\n    tag_358:\n        /* \"#utility.yul\":10383:10388   */\n      0x00\n        /* \"#utility.yul\":10408:10474   */\n      tag_505\n        /* \"#utility.yul\":10424:10473   */\n      tag_506\n        /* \"#utility.yul\":10466:10472   */\n      dup5\n        /* \"#utility.yul\":10424:10473   */\n      tag_357\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":10408:10474   */\n      tag_352\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":10399:10474   */\n      swap1\n      pop\n        /* \"#utility.yul\":10497:10503   */\n      dup3\n        /* \"#utility.yul\":10490:10495   */\n      dup2\n        /* \"#utility.yul\":10483:10504   */\n      mstore\n        /* \"#utility.yul\":10535:10539   */\n      0x20\n        /* \"#utility.yul\":10528:10533   */\n      dup2\n        /* \"#utility.yul\":10524:10540   */\n      add\n        /* \"#utility.yul\":10573:10576   */\n      dup5\n        /* \"#utility.yul\":10564:10570   */\n      dup5\n        /* \"#utility.yul\":10559:10562   */\n      dup5\n        /* \"#utility.yul\":10555:10571   */\n      add\n        /* \"#utility.yul\":10552:10577   */\n      gt\n        /* \"#utility.yul\":10549:10661   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":10580:10659   */\n      tag_508\n      tag_350\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":10549:10661   */\n    tag_507:\n        /* \"#utility.yul\":10670:10724   */\n      tag_509\n        /* \"#utility.yul\":10717:10723   */\n      dup5\n        /* \"#utility.yul\":10712:10715   */\n      dup3\n        /* \"#utility.yul\":10707:10710   */\n      dup6\n        /* \"#utility.yul\":10670:10724   */\n      tag_354\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":10389:10730   */\n      pop\n        /* \"#utility.yul\":10305:10730   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10750:11090   */\n    tag_359:\n        /* \"#utility.yul\":10806:10811   */\n      0x00\n        /* \"#utility.yul\":10855:10858   */\n      dup3\n        /* \"#utility.yul\":10848:10852   */\n      0x1f\n        /* \"#utility.yul\":10840:10846   */\n      dup4\n        /* \"#utility.yul\":10836:10853   */\n      add\n        /* \"#utility.yul\":10832:10859   */\n      slt\n        /* \"#utility.yul\":10822:10944   */\n      tag_511\n      jumpi\n        /* \"#utility.yul\":10863:10942   */\n      tag_512\n      tag_349\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":10822:10944   */\n    tag_511:\n        /* \"#utility.yul\":10980:10986   */\n      dup2\n        /* \"#utility.yul\":10967:10987   */\n      calldataload\n        /* \"#utility.yul\":11005:11084   */\n      tag_513\n        /* \"#utility.yul\":11080:11083   */\n      dup5\n        /* \"#utility.yul\":11072:11078   */\n      dup3\n        /* \"#utility.yul\":11065:11069   */\n      0x20\n        /* \"#utility.yul\":11057:11063   */\n      dup7\n        /* \"#utility.yul\":11053:11070   */\n      add\n        /* \"#utility.yul\":11005:11084   */\n      tag_358\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":10996:11084   */\n      swap2\n      pop\n        /* \"#utility.yul\":10812:11090   */\n      pop\n        /* \"#utility.yul\":10750:11090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11096:11895   */\n    tag_82:\n        /* \"#utility.yul\":11183:11189   */\n      0x00\n        /* \"#utility.yul\":11191:11197   */\n      dup1\n        /* \"#utility.yul\":11199:11205   */\n      0x00\n        /* \"#utility.yul\":11248:11250   */\n      0x60\n        /* \"#utility.yul\":11236:11245   */\n      dup5\n        /* \"#utility.yul\":11227:11234   */\n      dup7\n        /* \"#utility.yul\":11223:11246   */\n      sub\n        /* \"#utility.yul\":11219:11251   */\n      slt\n        /* \"#utility.yul\":11216:11335   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":11254:11333   */\n      tag_516\n      tag_326\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":11216:11335   */\n    tag_515:\n        /* \"#utility.yul\":11374:11375   */\n      0x00\n        /* \"#utility.yul\":11399:11452   */\n      tag_517\n        /* \"#utility.yul\":11444:11451   */\n      dup7\n        /* \"#utility.yul\":11435:11441   */\n      dup3\n        /* \"#utility.yul\":11424:11433   */\n      dup8\n        /* \"#utility.yul\":11420:11442   */\n      add\n        /* \"#utility.yul\":11399:11452   */\n      tag_345\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":11389:11452   */\n      swap4\n      pop\n        /* \"#utility.yul\":11345:11462   */\n      pop\n        /* \"#utility.yul\":11501:11503   */\n      0x20\n        /* \"#utility.yul\":11527:11580   */\n      tag_518\n        /* \"#utility.yul\":11572:11579   */\n      dup7\n        /* \"#utility.yul\":11563:11569   */\n      dup3\n        /* \"#utility.yul\":11552:11561   */\n      dup8\n        /* \"#utility.yul\":11548:11570   */\n      add\n        /* \"#utility.yul\":11527:11580   */\n      tag_340\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":11517:11580   */\n      swap3\n      pop\n        /* \"#utility.yul\":11472:11590   */\n      pop\n        /* \"#utility.yul\":11657:11659   */\n      0x40\n        /* \"#utility.yul\":11646:11655   */\n      dup5\n        /* \"#utility.yul\":11642:11660   */\n      add\n        /* \"#utility.yul\":11629:11661   */\n      calldataload\n        /* \"#utility.yul\":11688:11706   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11680:11686   */\n      dup2\n        /* \"#utility.yul\":11677:11707   */\n      gt\n        /* \"#utility.yul\":11674:11791   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":11710:11789   */\n      tag_520\n      tag_327\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":11674:11791   */\n    tag_519:\n        /* \"#utility.yul\":11815:11878   */\n      tag_521\n        /* \"#utility.yul\":11870:11877   */\n      dup7\n        /* \"#utility.yul\":11861:11867   */\n      dup3\n        /* \"#utility.yul\":11850:11859   */\n      dup8\n        /* \"#utility.yul\":11846:11868   */\n      add\n        /* \"#utility.yul\":11815:11878   */\n      tag_359\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":11805:11878   */\n      swap2\n      pop\n        /* \"#utility.yul\":11600:11888   */\n      pop\n        /* \"#utility.yul\":11096:11895   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":11901:12375   */\n    tag_86:\n        /* \"#utility.yul\":11969:11975   */\n      0x00\n        /* \"#utility.yul\":11977:11983   */\n      dup1\n        /* \"#utility.yul\":12026:12028   */\n      0x40\n        /* \"#utility.yul\":12014:12023   */\n      dup4\n        /* \"#utility.yul\":12005:12012   */\n      dup6\n        /* \"#utility.yul\":12001:12024   */\n      sub\n        /* \"#utility.yul\":11997:12029   */\n      slt\n        /* \"#utility.yul\":11994:12113   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":12032:12111   */\n      tag_524\n      tag_326\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":11994:12113   */\n    tag_523:\n        /* \"#utility.yul\":12152:12153   */\n      0x00\n        /* \"#utility.yul\":12177:12230   */\n      tag_525\n        /* \"#utility.yul\":12222:12229   */\n      dup6\n        /* \"#utility.yul\":12213:12219   */\n      dup3\n        /* \"#utility.yul\":12202:12211   */\n      dup7\n        /* \"#utility.yul\":12198:12220   */\n      add\n        /* \"#utility.yul\":12177:12230   */\n      tag_345\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":12167:12230   */\n      swap3\n      pop\n        /* \"#utility.yul\":12123:12240   */\n      pop\n        /* \"#utility.yul\":12279:12281   */\n      0x20\n        /* \"#utility.yul\":12305:12358   */\n      tag_526\n        /* \"#utility.yul\":12350:12357   */\n      dup6\n        /* \"#utility.yul\":12341:12347   */\n      dup3\n        /* \"#utility.yul\":12330:12339   */\n      dup7\n        /* \"#utility.yul\":12326:12348   */\n      add\n        /* \"#utility.yul\":12305:12358   */\n      tag_345\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":12295:12358   */\n      swap2\n      pop\n        /* \"#utility.yul\":12250:12368   */\n      pop\n        /* \"#utility.yul\":11901:12375   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12381:12561   */\n    tag_360:\n        /* \"#utility.yul\":12429:12506   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12426:12427   */\n      0x00\n        /* \"#utility.yul\":12419:12507   */\n      mstore\n        /* \"#utility.yul\":12526:12530   */\n      0x22\n        /* \"#utility.yul\":12523:12524   */\n      0x04\n        /* \"#utility.yul\":12516:12531   */\n      mstore\n        /* \"#utility.yul\":12550:12554   */\n      0x24\n        /* \"#utility.yul\":12547:12548   */\n      0x00\n        /* \"#utility.yul\":12540:12555   */\n      revert\n        /* \"#utility.yul\":12567:12887   */\n    tag_97:\n        /* \"#utility.yul\":12611:12617   */\n      0x00\n        /* \"#utility.yul\":12648:12649   */\n      0x02\n        /* \"#utility.yul\":12642:12646   */\n      dup3\n        /* \"#utility.yul\":12638:12650   */\n      div\n        /* \"#utility.yul\":12628:12650   */\n      swap1\n      pop\n        /* \"#utility.yul\":12695:12696   */\n      0x01\n        /* \"#utility.yul\":12689:12693   */\n      dup3\n        /* \"#utility.yul\":12685:12697   */\n      and\n        /* \"#utility.yul\":12716:12734   */\n      dup1\n        /* \"#utility.yul\":12706:12787   */\n      tag_529\n      jumpi\n        /* \"#utility.yul\":12772:12776   */\n      0x7f\n        /* \"#utility.yul\":12764:12770   */\n      dup3\n        /* \"#utility.yul\":12760:12777   */\n      and\n        /* \"#utility.yul\":12750:12777   */\n      swap2\n      pop\n        /* \"#utility.yul\":12706:12787   */\n    tag_529:\n        /* \"#utility.yul\":12834:12836   */\n      0x20\n        /* \"#utility.yul\":12826:12832   */\n      dup3\n        /* \"#utility.yul\":12823:12837   */\n      lt\n        /* \"#utility.yul\":12803:12821   */\n      dup2\n        /* \"#utility.yul\":12800:12838   */\n      sub\n        /* \"#utility.yul\":12797:12881   */\n      tag_530\n      jumpi\n        /* \"#utility.yul\":12853:12871   */\n      tag_531\n      tag_360\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":12797:12881   */\n    tag_530:\n        /* \"#utility.yul\":12618:12887   */\n      pop\n        /* \"#utility.yul\":12567:12887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12893:13335   */\n    tag_120:\n        /* \"#utility.yul\":13042:13046   */\n      0x00\n        /* \"#utility.yul\":13080:13082   */\n      0x60\n        /* \"#utility.yul\":13069:13078   */\n      dup3\n        /* \"#utility.yul\":13065:13083   */\n      add\n        /* \"#utility.yul\":13057:13083   */\n      swap1\n      pop\n        /* \"#utility.yul\":13093:13164   */\n      tag_533\n        /* \"#utility.yul\":13161:13162   */\n      0x00\n        /* \"#utility.yul\":13150:13159   */\n      dup4\n        /* \"#utility.yul\":13146:13163   */\n      add\n        /* \"#utility.yul\":13137:13143   */\n      dup7\n        /* \"#utility.yul\":13093:13164   */\n      tag_343\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":13174:13246   */\n      tag_534\n        /* \"#utility.yul\":13242:13244   */\n      0x20\n        /* \"#utility.yul\":13231:13240   */\n      dup4\n        /* \"#utility.yul\":13227:13245   */\n      add\n        /* \"#utility.yul\":13218:13224   */\n      dup6\n        /* \"#utility.yul\":13174:13246   */\n      tag_346\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":13256:13328   */\n      tag_535\n        /* \"#utility.yul\":13324:13326   */\n      0x40\n        /* \"#utility.yul\":13313:13322   */\n      dup4\n        /* \"#utility.yul\":13309:13327   */\n      add\n        /* \"#utility.yul\":13300:13306   */\n      dup5\n        /* \"#utility.yul\":13256:13328   */\n      tag_343\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":12893:13335   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13341:13439   */\n    tag_361:\n        /* \"#utility.yul\":13392:13398   */\n      0x00\n        /* \"#utility.yul\":13426:13431   */\n      dup2\n        /* \"#utility.yul\":13420:13432   */\n      mload\n        /* \"#utility.yul\":13410:13432   */\n      swap1\n      pop\n        /* \"#utility.yul\":13341:13439   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13445:13613   */\n    tag_362:\n        /* \"#utility.yul\":13528:13539   */\n      0x00\n        /* \"#utility.yul\":13562:13568   */\n      dup3\n        /* \"#utility.yul\":13557:13560   */\n      dup3\n        /* \"#utility.yul\":13550:13569   */\n      mstore\n        /* \"#utility.yul\":13602:13606   */\n      0x20\n        /* \"#utility.yul\":13597:13600   */\n      dup3\n        /* \"#utility.yul\":13593:13607   */\n      add\n        /* \"#utility.yul\":13578:13607   */\n      swap1\n      pop\n        /* \"#utility.yul\":13445:13613   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13619:13992   */\n    tag_363:\n        /* \"#utility.yul\":13705:13708   */\n      0x00\n        /* \"#utility.yul\":13733:13771   */\n      tag_539\n        /* \"#utility.yul\":13765:13770   */\n      dup3\n        /* \"#utility.yul\":13733:13771   */\n      tag_361\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":13787:13857   */\n      tag_540\n        /* \"#utility.yul\":13850:13856   */\n      dup2\n        /* \"#utility.yul\":13845:13848   */\n      dup6\n        /* \"#utility.yul\":13787:13857   */\n      tag_362\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":13780:13857   */\n      swap4\n      pop\n        /* \"#utility.yul\":13866:13931   */\n      tag_541\n        /* \"#utility.yul\":13924:13930   */\n      dup2\n        /* \"#utility.yul\":13919:13922   */\n      dup6\n        /* \"#utility.yul\":13912:13916   */\n      0x20\n        /* \"#utility.yul\":13905:13910   */\n      dup7\n        /* \"#utility.yul\":13901:13917   */\n      add\n        /* \"#utility.yul\":13866:13931   */\n      tag_335\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":13956:13985   */\n      tag_542\n        /* \"#utility.yul\":13978:13984   */\n      dup2\n        /* \"#utility.yul\":13956:13985   */\n      tag_336\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":13951:13954   */\n      dup5\n        /* \"#utility.yul\":13947:13986   */\n      add\n        /* \"#utility.yul\":13940:13986   */\n      swap2\n      pop\n        /* \"#utility.yul\":13709:13992   */\n      pop\n        /* \"#utility.yul\":13619:13992   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13998:14638   */\n    tag_203:\n        /* \"#utility.yul\":14193:14197   */\n      0x00\n        /* \"#utility.yul\":14231:14234   */\n      0x80\n        /* \"#utility.yul\":14220:14229   */\n      dup3\n        /* \"#utility.yul\":14216:14235   */\n      add\n        /* \"#utility.yul\":14208:14235   */\n      swap1\n      pop\n        /* \"#utility.yul\":14245:14316   */\n      tag_544\n        /* \"#utility.yul\":14313:14314   */\n      0x00\n        /* \"#utility.yul\":14302:14311   */\n      dup4\n        /* \"#utility.yul\":14298:14315   */\n      add\n        /* \"#utility.yul\":14289:14295   */\n      dup8\n        /* \"#utility.yul\":14245:14316   */\n      tag_343\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":14326:14398   */\n      tag_545\n        /* \"#utility.yul\":14394:14396   */\n      0x20\n        /* \"#utility.yul\":14383:14392   */\n      dup4\n        /* \"#utility.yul\":14379:14397   */\n      add\n        /* \"#utility.yul\":14370:14376   */\n      dup7\n        /* \"#utility.yul\":14326:14398   */\n      tag_343\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":14408:14480   */\n      tag_546\n        /* \"#utility.yul\":14476:14478   */\n      0x40\n        /* \"#utility.yul\":14465:14474   */\n      dup4\n        /* \"#utility.yul\":14461:14479   */\n      add\n        /* \"#utility.yul\":14452:14458   */\n      dup6\n        /* \"#utility.yul\":14408:14480   */\n      tag_346\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":14527:14536   */\n      dup2\n        /* \"#utility.yul\":14521:14525   */\n      dup2\n        /* \"#utility.yul\":14517:14537   */\n      sub\n        /* \"#utility.yul\":14512:14514   */\n      0x60\n        /* \"#utility.yul\":14501:14510   */\n      dup4\n        /* \"#utility.yul\":14497:14515   */\n      add\n        /* \"#utility.yul\":14490:14538   */\n      mstore\n        /* \"#utility.yul\":14555:14631   */\n      tag_547\n        /* \"#utility.yul\":14626:14630   */\n      dup2\n        /* \"#utility.yul\":14617:14623   */\n      dup5\n        /* \"#utility.yul\":14555:14631   */\n      tag_363\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":14547:14631   */\n      swap1\n      pop\n        /* \"#utility.yul\":13998:14638   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14644:14785   */\n    tag_364:\n        /* \"#utility.yul\":14700:14705   */\n      0x00\n        /* \"#utility.yul\":14731:14737   */\n      dup2\n        /* \"#utility.yul\":14725:14738   */\n      mload\n        /* \"#utility.yul\":14716:14738   */\n      swap1\n      pop\n        /* \"#utility.yul\":14747:14779   */\n      tag_549\n        /* \"#utility.yul\":14773:14778   */\n      dup2\n        /* \"#utility.yul\":14747:14779   */\n      tag_329\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":14644:14785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14791:15140   */\n    tag_206:\n        /* \"#utility.yul\":14860:14866   */\n      0x00\n        /* \"#utility.yul\":14909:14911   */\n      0x20\n        /* \"#utility.yul\":14897:14906   */\n      dup3\n        /* \"#utility.yul\":14888:14895   */\n      dup5\n        /* \"#utility.yul\":14884:14907   */\n      sub\n        /* \"#utility.yul\":14880:14912   */\n      slt\n        /* \"#utility.yul\":14877:14996   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":14915:14994   */\n      tag_552\n      tag_326\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":14877:14996   */\n    tag_551:\n        /* \"#utility.yul\":15035:15036   */\n      0x00\n        /* \"#utility.yul\":15060:15123   */\n      tag_553\n        /* \"#utility.yul\":15115:15122   */\n      dup5\n        /* \"#utility.yul\":15106:15112   */\n      dup3\n        /* \"#utility.yul\":15095:15104   */\n      dup6\n        /* \"#utility.yul\":15091:15113   */\n      add\n        /* \"#utility.yul\":15060:15123   */\n      tag_364\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":15050:15123   */\n      swap2\n      pop\n        /* \"#utility.yul\":15006:15133   */\n      pop\n        /* \"#utility.yul\":14791:15140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15146:15294   */\n    tag_365:\n        /* \"#utility.yul\":15248:15259   */\n      0x00\n        /* \"#utility.yul\":15285:15288   */\n      dup2\n        /* \"#utility.yul\":15270:15288   */\n      swap1\n      pop\n        /* \"#utility.yul\":15146:15294   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15300:15690   */\n    tag_366:\n        /* \"#utility.yul\":15406:15409   */\n      0x00\n        /* \"#utility.yul\":15434:15473   */\n      tag_556\n        /* \"#utility.yul\":15467:15472   */\n      dup3\n        /* \"#utility.yul\":15434:15473   */\n      tag_333\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":15489:15578   */\n      tag_557\n        /* \"#utility.yul\":15571:15577   */\n      dup2\n        /* \"#utility.yul\":15566:15569   */\n      dup6\n        /* \"#utility.yul\":15489:15578   */\n      tag_365\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":15482:15578   */\n      swap4\n      pop\n        /* \"#utility.yul\":15587:15652   */\n      tag_558\n        /* \"#utility.yul\":15645:15651   */\n      dup2\n        /* \"#utility.yul\":15640:15643   */\n      dup6\n        /* \"#utility.yul\":15633:15637   */\n      0x20\n        /* \"#utility.yul\":15626:15631   */\n      dup7\n        /* \"#utility.yul\":15622:15638   */\n      add\n        /* \"#utility.yul\":15587:15652   */\n      tag_335\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":15677:15683   */\n      dup1\n        /* \"#utility.yul\":15672:15675   */\n      dup5\n        /* \"#utility.yul\":15668:15684   */\n      add\n        /* \"#utility.yul\":15661:15684   */\n      swap2\n      pop\n        /* \"#utility.yul\":15410:15690   */\n      pop\n        /* \"#utility.yul\":15300:15690   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15696:16131   */\n    tag_231:\n        /* \"#utility.yul\":15876:15879   */\n      0x00\n        /* \"#utility.yul\":15898:15993   */\n      tag_560\n        /* \"#utility.yul\":15989:15992   */\n      dup3\n        /* \"#utility.yul\":15980:15986   */\n      dup6\n        /* \"#utility.yul\":15898:15993   */\n      tag_366\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":15891:15993   */\n      swap2\n      pop\n        /* \"#utility.yul\":16010:16105   */\n      tag_561\n        /* \"#utility.yul\":16101:16104   */\n      dup3\n        /* \"#utility.yul\":16092:16098   */\n      dup5\n        /* \"#utility.yul\":16010:16105   */\n      tag_366\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":16003:16105   */\n      swap2\n      pop\n        /* \"#utility.yul\":16122:16125   */\n      dup2\n        /* \"#utility.yul\":16115:16125   */\n      swap1\n      pop\n        /* \"#utility.yul\":15696:16131   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16137:16278   */\n    tag_367:\n        /* \"#utility.yul\":16186:16190   */\n      0x00\n        /* \"#utility.yul\":16209:16212   */\n      dup2\n        /* \"#utility.yul\":16201:16212   */\n      swap1\n      pop\n        /* \"#utility.yul\":16232:16235   */\n      dup2\n        /* \"#utility.yul\":16229:16230   */\n      0x00\n        /* \"#utility.yul\":16222:16236   */\n      mstore\n        /* \"#utility.yul\":16266:16270   */\n      0x20\n        /* \"#utility.yul\":16263:16264   */\n      0x00\n        /* \"#utility.yul\":16253:16271   */\n      keccak256\n        /* \"#utility.yul\":16245:16271   */\n      swap1\n      pop\n        /* \"#utility.yul\":16137:16278   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16284:16377   */\n    tag_368:\n        /* \"#utility.yul\":16321:16327   */\n      0x00\n        /* \"#utility.yul\":16368:16370   */\n      0x20\n        /* \"#utility.yul\":16363:16365   */\n      0x1f\n        /* \"#utility.yul\":16356:16361   */\n      dup4\n        /* \"#utility.yul\":16352:16366   */\n      add\n        /* \"#utility.yul\":16348:16371   */\n      div\n        /* \"#utility.yul\":16338:16371   */\n      swap1\n      pop\n        /* \"#utility.yul\":16284:16377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16383:16490   */\n    tag_369:\n        /* \"#utility.yul\":16427:16435   */\n      0x00\n        /* \"#utility.yul\":16477:16482   */\n      dup3\n        /* \"#utility.yul\":16471:16475   */\n      dup3\n        /* \"#utility.yul\":16467:16483   */\n      shl\n        /* \"#utility.yul\":16446:16483   */\n      swap1\n      pop\n        /* \"#utility.yul\":16383:16490   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16496:16889   */\n    tag_370:\n        /* \"#utility.yul\":16565:16571   */\n      0x00\n        /* \"#utility.yul\":16615:16616   */\n      0x08\n        /* \"#utility.yul\":16603:16613   */\n      dup4\n        /* \"#utility.yul\":16599:16617   */\n      mul\n        /* \"#utility.yul\":16638:16735   */\n      tag_566\n        /* \"#utility.yul\":16668:16734   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16657:16666   */\n      dup3\n        /* \"#utility.yul\":16638:16735   */\n      tag_369\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":16756:16795   */\n      tag_567\n        /* \"#utility.yul\":16786:16794   */\n      dup7\n        /* \"#utility.yul\":16775:16784   */\n      dup4\n        /* \"#utility.yul\":16756:16795   */\n      tag_369\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":16744:16795   */\n      swap6\n      pop\n        /* \"#utility.yul\":16828:16832   */\n      dup1\n        /* \"#utility.yul\":16824:16833   */\n      not\n        /* \"#utility.yul\":16817:16822   */\n      dup5\n        /* \"#utility.yul\":16813:16834   */\n      and\n        /* \"#utility.yul\":16804:16834   */\n      swap4\n      pop\n        /* \"#utility.yul\":16877:16881   */\n      dup1\n        /* \"#utility.yul\":16867:16875   */\n      dup7\n        /* \"#utility.yul\":16863:16882   */\n      and\n        /* \"#utility.yul\":16856:16861   */\n      dup5\n        /* \"#utility.yul\":16853:16883   */\n      or\n        /* \"#utility.yul\":16843:16883   */\n      swap3\n      pop\n        /* \"#utility.yul\":16572:16889   */\n      pop\n      pop\n        /* \"#utility.yul\":16496:16889   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16895:16955   */\n    tag_371:\n        /* \"#utility.yul\":16923:16926   */\n      0x00\n        /* \"#utility.yul\":16944:16949   */\n      dup2\n        /* \"#utility.yul\":16937:16949   */\n      swap1\n      pop\n        /* \"#utility.yul\":16895:16955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16961:17103   */\n    tag_372:\n        /* \"#utility.yul\":17011:17020   */\n      0x00\n        /* \"#utility.yul\":17044:17097   */\n      tag_570\n        /* \"#utility.yul\":17062:17096   */\n      tag_571\n        /* \"#utility.yul\":17071:17095   */\n      tag_572\n        /* \"#utility.yul\":17089:17094   */\n      dup5\n        /* \"#utility.yul\":17071:17095   */\n      tag_338\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":17062:17096   */\n      tag_371\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":17044:17097   */\n      tag_338\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":17031:17097   */\n      swap1\n      pop\n        /* \"#utility.yul\":16961:17103   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17109:17184   */\n    tag_373:\n        /* \"#utility.yul\":17152:17155   */\n      0x00\n        /* \"#utility.yul\":17173:17178   */\n      dup2\n        /* \"#utility.yul\":17166:17178   */\n      swap1\n      pop\n        /* \"#utility.yul\":17109:17184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17190:17459   */\n    tag_374:\n        /* \"#utility.yul\":17300:17339   */\n      tag_575\n        /* \"#utility.yul\":17331:17338   */\n      dup4\n        /* \"#utility.yul\":17300:17339   */\n      tag_372\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":17361:17452   */\n      tag_576\n        /* \"#utility.yul\":17410:17451   */\n      tag_577\n        /* \"#utility.yul\":17434:17450   */\n      dup3\n        /* \"#utility.yul\":17410:17451   */\n      tag_373\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":17402:17408   */\n      dup5\n        /* \"#utility.yul\":17395:17399   */\n      dup5\n        /* \"#utility.yul\":17389:17400   */\n      sload\n        /* \"#utility.yul\":17361:17452   */\n      tag_370\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":17355:17359   */\n      dup3\n        /* \"#utility.yul\":17348:17453   */\n      sstore\n        /* \"#utility.yul\":17266:17459   */\n      pop\n        /* \"#utility.yul\":17190:17459   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17465:17538   */\n    tag_375:\n        /* \"#utility.yul\":17510:17513   */\n      0x00\n        /* \"#utility.yul\":17465:17538   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17544:17733   */\n    tag_376:\n        /* \"#utility.yul\":17621:17653   */\n      tag_580\n      tag_375\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":17662:17727   */\n      tag_581\n        /* \"#utility.yul\":17720:17726   */\n      dup2\n        /* \"#utility.yul\":17712:17718   */\n      dup5\n        /* \"#utility.yul\":17706:17710   */\n      dup5\n        /* \"#utility.yul\":17662:17727   */\n      tag_374\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":17597:17733   */\n      pop\n        /* \"#utility.yul\":17544:17733   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17739:17925   */\n    tag_377:\n        /* \"#utility.yul\":17799:17919   */\n    tag_583:\n        /* \"#utility.yul\":17816:17819   */\n      dup2\n        /* \"#utility.yul\":17809:17814   */\n      dup2\n        /* \"#utility.yul\":17806:17820   */\n      lt\n        /* \"#utility.yul\":17799:17919   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":17870:17909   */\n      tag_586\n        /* \"#utility.yul\":17907:17908   */\n      0x00\n        /* \"#utility.yul\":17900:17905   */\n      dup3\n        /* \"#utility.yul\":17870:17909   */\n      tag_376\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":17843:17844   */\n      0x01\n        /* \"#utility.yul\":17836:17841   */\n      dup2\n        /* \"#utility.yul\":17832:17845   */\n      add\n        /* \"#utility.yul\":17823:17845   */\n      swap1\n      pop\n        /* \"#utility.yul\":17799:17919   */\n      jump(tag_583)\n    tag_585:\n        /* \"#utility.yul\":17739:17925   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17931:18474   */\n    tag_378:\n        /* \"#utility.yul\":18032:18034   */\n      0x1f\n        /* \"#utility.yul\":18027:18030   */\n      dup3\n        /* \"#utility.yul\":18024:18035   */\n      gt\n        /* \"#utility.yul\":18021:18467   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":18066:18104   */\n      tag_589\n        /* \"#utility.yul\":18098:18103   */\n      dup2\n        /* \"#utility.yul\":18066:18104   */\n      tag_367\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":18150:18179   */\n      tag_590\n        /* \"#utility.yul\":18168:18178   */\n      dup5\n        /* \"#utility.yul\":18150:18179   */\n      tag_368\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":18140:18148   */\n      dup2\n        /* \"#utility.yul\":18136:18180   */\n      add\n        /* \"#utility.yul\":18333:18335   */\n      0x20\n        /* \"#utility.yul\":18321:18331   */\n      dup6\n        /* \"#utility.yul\":18318:18336   */\n      lt\n        /* \"#utility.yul\":18315:18364   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":18354:18362   */\n      dup2\n        /* \"#utility.yul\":18339:18362   */\n      swap1\n      pop\n        /* \"#utility.yul\":18315:18364   */\n    tag_591:\n        /* \"#utility.yul\":18377:18457   */\n      tag_592\n        /* \"#utility.yul\":18433:18455   */\n      tag_593\n        /* \"#utility.yul\":18451:18454   */\n      dup6\n        /* \"#utility.yul\":18433:18455   */\n      tag_368\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":18423:18431   */\n      dup4\n        /* \"#utility.yul\":18419:18456   */\n      add\n        /* \"#utility.yul\":18406:18417   */\n      dup3\n        /* \"#utility.yul\":18377:18457   */\n      tag_377\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":18036:18467   */\n      pop\n      pop\n        /* \"#utility.yul\":18021:18467   */\n    tag_588:\n        /* \"#utility.yul\":17931:18474   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18480:18597   */\n    tag_379:\n        /* \"#utility.yul\":18534:18542   */\n      0x00\n        /* \"#utility.yul\":18584:18589   */\n      dup3\n        /* \"#utility.yul\":18578:18582   */\n      dup3\n        /* \"#utility.yul\":18574:18590   */\n      shr\n        /* \"#utility.yul\":18553:18590   */\n      swap1\n      pop\n        /* \"#utility.yul\":18480:18597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18603:18772   */\n    tag_380:\n        /* \"#utility.yul\":18647:18653   */\n      0x00\n        /* \"#utility.yul\":18680:18731   */\n      tag_596\n        /* \"#utility.yul\":18728:18729   */\n      0x00\n        /* \"#utility.yul\":18724:18730   */\n      not\n        /* \"#utility.yul\":18716:18721   */\n      dup5\n        /* \"#utility.yul\":18713:18714   */\n      0x08\n        /* \"#utility.yul\":18709:18722   */\n      mul\n        /* \"#utility.yul\":18680:18731   */\n      tag_379\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":18676:18732   */\n      not\n        /* \"#utility.yul\":18761:18765   */\n      dup1\n        /* \"#utility.yul\":18755:18759   */\n      dup4\n        /* \"#utility.yul\":18751:18766   */\n      and\n        /* \"#utility.yul\":18741:18766   */\n      swap2\n      pop\n        /* \"#utility.yul\":18654:18772   */\n      pop\n        /* \"#utility.yul\":18603:18772   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18777:19072   */\n    tag_381:\n        /* \"#utility.yul\":18853:18857   */\n      0x00\n        /* \"#utility.yul\":18999:19028   */\n      tag_598\n        /* \"#utility.yul\":19024:19027   */\n      dup4\n        /* \"#utility.yul\":19018:19022   */\n      dup4\n        /* \"#utility.yul\":18999:19028   */\n      tag_380\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":18991:19028   */\n      swap2\n      pop\n        /* \"#utility.yul\":19061:19064   */\n      dup3\n        /* \"#utility.yul\":19058:19059   */\n      0x02\n        /* \"#utility.yul\":19054:19065   */\n      mul\n        /* \"#utility.yul\":19048:19052   */\n      dup3\n        /* \"#utility.yul\":19045:19066   */\n      or\n        /* \"#utility.yul\":19037:19066   */\n      swap1\n      pop\n        /* \"#utility.yul\":18777:19072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19077:20472   */\n    tag_239:\n        /* \"#utility.yul\":19194:19231   */\n      tag_600\n        /* \"#utility.yul\":19227:19230   */\n      dup3\n        /* \"#utility.yul\":19194:19231   */\n      tag_333\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":19296:19314   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19288:19294   */\n      dup2\n        /* \"#utility.yul\":19285:19315   */\n      gt\n        /* \"#utility.yul\":19282:19338   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":19318:19336   */\n      tag_602\n      tag_291\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":19282:19338   */\n    tag_601:\n        /* \"#utility.yul\":19362:19400   */\n      tag_603\n        /* \"#utility.yul\":19394:19398   */\n      dup3\n        /* \"#utility.yul\":19388:19399   */\n      sload\n        /* \"#utility.yul\":19362:19400   */\n      tag_97\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":19447:19514   */\n      tag_604\n        /* \"#utility.yul\":19507:19513   */\n      dup3\n        /* \"#utility.yul\":19499:19505   */\n      dup3\n        /* \"#utility.yul\":19493:19497   */\n      dup6\n        /* \"#utility.yul\":19447:19514   */\n      tag_378\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":19541:19542   */\n      0x00\n        /* \"#utility.yul\":19565:19569   */\n      0x20\n        /* \"#utility.yul\":19552:19569   */\n      swap1\n      pop\n        /* \"#utility.yul\":19597:19599   */\n      0x1f\n        /* \"#utility.yul\":19589:19595   */\n      dup4\n        /* \"#utility.yul\":19586:19600   */\n      gt\n        /* \"#utility.yul\":19614:19615   */\n      0x01\n        /* \"#utility.yul\":19609:20227   */\n      dup2\n      eq\n      tag_606\n      jumpi\n        /* \"#utility.yul\":20271:20272   */\n      0x00\n        /* \"#utility.yul\":20288:20294   */\n      dup5\n        /* \"#utility.yul\":20285:20362   */\n      iszero\n      tag_607\n      jumpi\n        /* \"#utility.yul\":20337:20346   */\n      dup3\n        /* \"#utility.yul\":20332:20335   */\n      dup8\n        /* \"#utility.yul\":20328:20347   */\n      add\n        /* \"#utility.yul\":20322:20348   */\n      mload\n        /* \"#utility.yul\":20313:20348   */\n      swap1\n      pop\n        /* \"#utility.yul\":20285:20362   */\n    tag_607:\n        /* \"#utility.yul\":20388:20455   */\n      tag_608\n        /* \"#utility.yul\":20448:20454   */\n      dup6\n        /* \"#utility.yul\":20441:20446   */\n      dup3\n        /* \"#utility.yul\":20388:20455   */\n      tag_381\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":20382:20386   */\n      dup7\n        /* \"#utility.yul\":20375:20456   */\n      sstore\n        /* \"#utility.yul\":20244:20466   */\n      pop\n        /* \"#utility.yul\":19579:20466   */\n      jump(tag_605)\n        /* \"#utility.yul\":19609:20227   */\n    tag_606:\n        /* \"#utility.yul\":19661:19665   */\n      0x1f\n        /* \"#utility.yul\":19657:19666   */\n      not\n        /* \"#utility.yul\":19649:19655   */\n      dup5\n        /* \"#utility.yul\":19645:19667   */\n      and\n        /* \"#utility.yul\":19695:19732   */\n      tag_609\n        /* \"#utility.yul\":19727:19731   */\n      dup7\n        /* \"#utility.yul\":19695:19732   */\n      tag_367\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":19754:19755   */\n      0x00\n        /* \"#utility.yul\":19768:19976   */\n    tag_610:\n        /* \"#utility.yul\":19782:19789   */\n      dup3\n        /* \"#utility.yul\":19779:19780   */\n      dup2\n        /* \"#utility.yul\":19776:19790   */\n      lt\n        /* \"#utility.yul\":19768:19976   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":19861:19870   */\n      dup5\n        /* \"#utility.yul\":19856:19859   */\n      dup10\n        /* \"#utility.yul\":19852:19871   */\n      add\n        /* \"#utility.yul\":19846:19872   */\n      mload\n        /* \"#utility.yul\":19838:19844   */\n      dup3\n        /* \"#utility.yul\":19831:19873   */\n      sstore\n        /* \"#utility.yul\":19912:19913   */\n      0x01\n        /* \"#utility.yul\":19904:19910   */\n      dup3\n        /* \"#utility.yul\":19900:19914   */\n      add\n        /* \"#utility.yul\":19890:19914   */\n      swap2\n      pop\n        /* \"#utility.yul\":19959:19961   */\n      0x20\n        /* \"#utility.yul\":19948:19957   */\n      dup6\n        /* \"#utility.yul\":19944:19962   */\n      add\n        /* \"#utility.yul\":19931:19962   */\n      swap5\n      pop\n        /* \"#utility.yul\":19805:19809   */\n      0x20\n        /* \"#utility.yul\":19802:19803   */\n      dup2\n        /* \"#utility.yul\":19798:19810   */\n      add\n        /* \"#utility.yul\":19793:19810   */\n      swap1\n      pop\n        /* \"#utility.yul\":19768:19976   */\n      jump(tag_610)\n    tag_612:\n        /* \"#utility.yul\":20004:20010   */\n      dup7\n        /* \"#utility.yul\":19995:20002   */\n      dup4\n        /* \"#utility.yul\":19992:20011   */\n      lt\n        /* \"#utility.yul\":19989:20168   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":20062:20071   */\n      dup5\n        /* \"#utility.yul\":20057:20060   */\n      dup10\n        /* \"#utility.yul\":20053:20072   */\n      add\n        /* \"#utility.yul\":20047:20073   */\n      mload\n        /* \"#utility.yul\":20105:20153   */\n      tag_614\n        /* \"#utility.yul\":20147:20151   */\n      0x1f\n        /* \"#utility.yul\":20139:20145   */\n      dup10\n        /* \"#utility.yul\":20135:20152   */\n      and\n        /* \"#utility.yul\":20124:20133   */\n      dup3\n        /* \"#utility.yul\":20105:20153   */\n      tag_380\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":20097:20103   */\n      dup4\n        /* \"#utility.yul\":20090:20154   */\n      sstore\n        /* \"#utility.yul\":20012:20168   */\n      pop\n        /* \"#utility.yul\":19989:20168   */\n    tag_613:\n        /* \"#utility.yul\":20214:20215   */\n      0x01\n        /* \"#utility.yul\":20210:20211   */\n      0x02\n        /* \"#utility.yul\":20202:20208   */\n      dup9\n        /* \"#utility.yul\":20198:20212   */\n      mul\n        /* \"#utility.yul\":20194:20216   */\n      add\n        /* \"#utility.yul\":20188:20192   */\n      dup9\n        /* \"#utility.yul\":20181:20217   */\n      sstore\n        /* \"#utility.yul\":19616:20227   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19579:20466   */\n    tag_605:\n      pop\n        /* \"#utility.yul\":19169:20472   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19077:20472   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20478:20810   */\n    tag_265:\n        /* \"#utility.yul\":20599:20603   */\n      0x00\n        /* \"#utility.yul\":20637:20639   */\n      0x40\n        /* \"#utility.yul\":20626:20635   */\n      dup3\n        /* \"#utility.yul\":20622:20640   */\n      add\n        /* \"#utility.yul\":20614:20640   */\n      swap1\n      pop\n        /* \"#utility.yul\":20650:20721   */\n      tag_616\n        /* \"#utility.yul\":20718:20719   */\n      0x00\n        /* \"#utility.yul\":20707:20716   */\n      dup4\n        /* \"#utility.yul\":20703:20720   */\n      add\n        /* \"#utility.yul\":20694:20700   */\n      dup6\n        /* \"#utility.yul\":20650:20721   */\n      tag_343\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":20731:20803   */\n      tag_617\n        /* \"#utility.yul\":20799:20801   */\n      0x20\n        /* \"#utility.yul\":20788:20797   */\n      dup4\n        /* \"#utility.yul\":20784:20802   */\n      add\n        /* \"#utility.yul\":20775:20781   */\n      dup5\n        /* \"#utility.yul\":20731:20803   */\n      tag_346\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":20478:20810   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20816:20996   */\n    tag_297:\n        /* \"#utility.yul\":20864:20941   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20861:20862   */\n      0x00\n        /* \"#utility.yul\":20854:20942   */\n      mstore\n        /* \"#utility.yul\":20961:20965   */\n      0x12\n        /* \"#utility.yul\":20958:20959   */\n      0x04\n        /* \"#utility.yul\":20951:20966   */\n      mstore\n        /* \"#utility.yul\":20985:20989   */\n      0x24\n        /* \"#utility.yul\":20982:20983   */\n      0x00\n        /* \"#utility.yul\":20975:20990   */\n      revert\n\n    auxdata: 0xa2646970667358221220cb09cc4a52c60f618203a3a2e6af79b2389f2ad9f025f261e62a09fd1a583f4b64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3118": {
									"entryPoint": null,
									"id": 3118,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_386": {
									"entryPoint": null,
									"id": 386,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 344,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1177,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 756,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 709,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 906,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1062,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1105,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6778:17",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:17"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:17",
														"type": ""
													}
												],
												"src": "7:75:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:17"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:17"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:17",
														"type": ""
													}
												],
												"src": "334:126:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:17",
														"type": ""
													}
												],
												"src": "466:96:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:17"
															},
															"nodeType": "YulIf",
															"src": "621:63:17"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:17",
														"type": ""
													}
												],
												"src": "568:122:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:17"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:17",
														"type": ""
													}
												],
												"src": "696:143:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:17"
															},
															"nodeType": "YulIf",
															"src": "932:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:17",
														"type": ""
													}
												],
												"src": "845:351:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1261:40:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1272:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1282:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1244:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1254:6:17",
														"type": ""
													}
												],
												"src": "1202:99:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1521:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1531:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:17",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:17"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1730:269:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1740:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:17",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1750:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1848:51:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1862:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1821:26:17"
															},
															"nodeType": "YulIf",
															"src": "1818:81:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1951:42:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1912:38:17"
															},
															"nodeType": "YulIf",
															"src": "1909:84:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1714:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1723:6:17",
														"type": ""
													}
												],
												"src": "1679:320:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2059:87:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2069:11:17",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "2077:3:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2090:14:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2113:26:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2121:18:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2046:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2054:4:17",
														"type": ""
													}
												],
												"src": "2005:141:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2196:49:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2206:33:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:23:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:17"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2179:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2189:6:17",
														"type": ""
													}
												],
												"src": "2152:93:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2304:54:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2314:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:17"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:17"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:16:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:17"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "2279:4:17",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2285:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "2295:8:17",
														"type": ""
													}
												],
												"src": "2251:107:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2440:317:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:17",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:18:17"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2506:97:17"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2612:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:17"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:17"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2624:39:17"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2672:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:17"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2681:21:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2711:40:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:17"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2721:30:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:17"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2401:5:17",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "2408:10:17",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "2420:8:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2433:6:17",
														"type": ""
													}
												],
												"src": "2364:393:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2808:32:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2818:16:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2829:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2790:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2800:7:17",
														"type": ""
													}
												],
												"src": "2763:77:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2878:28:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2888:12:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2895:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:17"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2864:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2874:3:17",
														"type": ""
													}
												],
												"src": "2846:60:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2972:82:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2982:66:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:17"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:53:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2952:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2962:9:17",
														"type": ""
													}
												],
												"src": "2912:142:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3107:28:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3117:12:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3124:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:17"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3093:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3103:3:17",
														"type": ""
													}
												],
												"src": "3060:75:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3217:193:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:17",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:17"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3251:39:17"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:17"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:17"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:17"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:17"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:17"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3299:105:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:17"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3194:4:17",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3200:6:17",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "3208:7:17",
														"type": ""
													}
												],
												"src": "3141:269:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3465:24:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3475:8:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3482:1:17",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:17"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3461:3:17",
														"type": ""
													}
												],
												"src": "3416:73:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:136:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:32:17"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:17"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:17"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:17"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:65:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:17"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3534:4:17",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3540:6:17",
														"type": ""
													}
												],
												"src": "3495:189:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3740:136:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3807:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3757:14:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3772:26:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3774:22:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:17"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3754:2:17",
																"statements": []
															},
															"src": "3750:120:17"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "3728:5:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3735:3:17",
														"type": ""
													}
												],
												"src": "3690:186:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3961:464:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3987:431:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:17"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:17"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:17"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:17"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4288:27:17",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4290:23:17",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:17"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:17"
																		},
																		"nodeType": "YulIf",
																		"src": "4266:49:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:17"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:17"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3975:11:17"
															},
															"nodeType": "YulIf",
															"src": "3972:446:17"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3937:5:17",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3944:3:17",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "3949:10:17",
														"type": ""
													}
												],
												"src": "3882:543:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4494:54:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4504:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:17"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4525:16:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:17"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4469:4:17",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4475:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4485:8:17",
														"type": ""
													}
												],
												"src": "4431:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4605:118:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:17",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:17"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:17"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:17"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4627:56:17"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4692:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:17"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4702:15:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:17"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4582:4:17",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "4588:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4598:6:17",
														"type": ""
													}
												],
												"src": "4554:169:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4809:214:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4942:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:17"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:17"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4950:29:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4988:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:17",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:17"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4996:21:17"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:17"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4790:4:17",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "4796:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "4804:4:17",
														"type": ""
													}
												],
												"src": "4728:295:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:1303:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5145:37:17"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5267:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5236:30:17"
															},
															"nodeType": "YulIf",
															"src": "5233:56:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:17"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:17"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5313:38:17"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:17"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:17"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:17"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5398:67:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5492:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5503:17:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5516:4:17",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:17"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5567:611:17",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:17"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:17",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:17"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:17"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:17"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:17",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5764:163:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:17"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:17"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:17"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:17"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:17"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:17"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5841:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:17"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:17"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:17"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5882:31:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:17"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:17",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:17"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:17"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:17"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "5742:21:17",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5744:17:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:17"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:17",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:17"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:17"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "5723:3:17",
																					"statements": []
																				},
																				"src": "5719:208:17"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5963:156:17",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:17"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:17",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:17"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:17"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:17",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:17"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:17"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:17"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:17"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:17"
																				},
																				"nodeType": "YulIf",
																				"src": "5940:179:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:17"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:17",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:17"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:17"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5560:618:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6195:222:17",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:17",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6246:67:17",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6264:35:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:17"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:17"
																				},
																				"nodeType": "YulIf",
																				"src": "6236:77:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:17"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:17"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:17"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6187:230:17",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5537:14:17"
															},
															"nodeType": "YulSwitch",
															"src": "5530:887:17"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5109:4:17",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5115:3:17",
														"type": ""
													}
												],
												"src": "5028:1395:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6494:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6504:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6482:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6489:3:17",
														"type": ""
													}
												],
												"src": "6429:118:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6651:124:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6661:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6669:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6697:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6623:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6635:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6646:4:17",
														"type": ""
													}
												],
												"src": "6553:222:17"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2C58 CODESIZE SUB DUP1 PUSH3 0x2C58 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x288 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D616C6C7543727970746F000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D4E465400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0xB5 SWAP2 SWAP1 PUSH3 0x534 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xC7 SWAP2 SWAP1 PUSH3 0x534 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x136 SWAP2 SWAP1 PUSH3 0x62C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x150 DUP2 PUSH3 0x158 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x649 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x250 DUP3 PUSH3 0x223 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x262 DUP2 PUSH3 0x243 JUMP JUMPDEST DUP2 EQ PUSH3 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x282 DUP2 PUSH3 0x257 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2A1 JUMPI PUSH3 0x2A0 PUSH3 0x21E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2B1 DUP5 DUP3 DUP6 ADD PUSH3 0x271 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x33C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x352 JUMPI PUSH3 0x351 PUSH3 0x2F4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x3BC PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x37D JUMP JUMPDEST PUSH3 0x3C8 DUP7 DUP4 PUSH3 0x37D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x415 PUSH3 0x40F PUSH3 0x409 DUP5 PUSH3 0x3E0 JUMP JUMPDEST PUSH3 0x3EA JUMP JUMPDEST PUSH3 0x3E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x431 DUP4 PUSH3 0x3F4 JUMP JUMPDEST PUSH3 0x449 PUSH3 0x440 DUP3 PUSH3 0x41C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x38A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x460 PUSH3 0x451 JUMP JUMPDEST PUSH3 0x46D DUP2 DUP5 DUP5 PUSH3 0x426 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x495 JUMPI PUSH3 0x489 PUSH1 0x0 DUP3 PUSH3 0x456 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x473 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4E4 JUMPI PUSH3 0x4AE DUP2 PUSH3 0x358 JUMP JUMPDEST PUSH3 0x4B9 DUP5 PUSH3 0x36D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x4C9 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x4E1 PUSH3 0x4D8 DUP6 PUSH3 0x36D JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x472 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x509 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x4E9 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x524 DUP4 DUP4 PUSH3 0x4F6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x53F DUP3 PUSH3 0x2BA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x55B JUMPI PUSH3 0x55A PUSH3 0x2C5 JUMP JUMPDEST JUMPDEST PUSH3 0x567 DUP3 SLOAD PUSH3 0x323 JUMP JUMPDEST PUSH3 0x574 DUP3 DUP3 DUP6 PUSH3 0x499 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x5AC JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x597 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x5A3 DUP6 DUP3 PUSH3 0x516 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x613 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x5BC DUP7 PUSH3 0x358 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x5E6 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5BF JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x606 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x602 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4F6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x626 DUP2 PUSH3 0x243 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x643 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x61B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25FF DUP1 PUSH3 0x659 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xCD279C7C EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x33C JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x288 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x212 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x1ABB JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1BAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1CBB JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH2 0x61C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x254 PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1BAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST PUSH2 0x6EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1F46 JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1BAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH2 0x731 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x20D9 JUMP JUMPDEST PUSH2 0x752 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x356 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x363 DUP3 PUSH2 0x86C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x379 SWAP1 PUSH2 0x2148 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A5 SWAP1 PUSH2 0x2148 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407 DUP3 PUSH2 0x8CD JUMP JUMPDEST POP PUSH2 0x411 DUP3 PUSH2 0x955 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42A DUP3 DUP3 PUSH2 0x425 PUSH2 0x992 JUMP JUMPDEST PUSH2 0x99A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4A0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x497 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4B4 DUP4 DUP4 PUSH2 0x4AF PUSH2 0x992 JUMP JUMPDEST PUSH2 0x9AC JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x52A JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x521 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x54B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x702 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55B DUP3 PUSH2 0x8CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x624 PUSH2 0xBC6 JUMP JUMPDEST PUSH2 0x62E PUSH1 0x0 PUSH2 0xC4D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x669 SWAP1 PUSH2 0x2148 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x695 SWAP1 PUSH2 0x2148 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6FE PUSH2 0x6F7 PUSH2 0x992 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xD13 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x70D DUP5 DUP5 DUP5 PUSH2 0x42E JUMP JUMPDEST PUSH2 0x719 DUP5 DUP5 DUP5 DUP5 PUSH2 0xE82 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x72A DUP3 PUSH2 0x1039 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x739 PUSH2 0xBC6 JUMP JUMPDEST PUSH2 0x743 DUP4 DUP4 PUSH2 0x114C JUMP JUMPDEST PUSH2 0x74D DUP3 DUP3 PUSH2 0x116A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7EE PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x860 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x857 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x869 DUP2 PUSH2 0xC4D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x8C6 JUMPI POP PUSH2 0x8C5 DUP3 PUSH2 0x11C6 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8D9 DUP4 PUSH2 0x12A8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x94C JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x943 SWAP2 SWAP1 PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9A7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12E5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9B8 DUP5 PUSH2 0x12A8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9FA JUMPI PUSH2 0x9F9 DUP2 DUP5 DUP7 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA8B JUMPI PUSH2 0xA3C PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x12E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB0E JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBCE PUSH2 0x992 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBEC PUSH2 0x630 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC4B JUMPI PUSH2 0xC0F PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC42 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD84 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7B SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE75 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1033 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xEC6 PUSH2 0x992 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2205 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF24 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF21 SWAP2 SWAP1 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFA8 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF54 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xFA0 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF97 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1031 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1028 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1044 DUP3 PUSH2 0x8CD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1065 SWAP1 PUSH2 0x2148 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1091 SWAP1 PUSH2 0x2148 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x10EF PUSH2 0x156E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1104 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1139 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1121 SWAP3 SWAP2 SWAP1 PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x1142 DUP5 PUSH2 0x1585 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1166 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x15EE JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x118A SWAP2 SWAP1 PUSH2 0x249F JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x11BA SWAP2 SWAP1 PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1291 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x12A1 JUMPI POP PUSH2 0x12A0 DUP3 PUSH2 0x160A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x131E JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1452 JUMPI PUSH1 0x0 PUSH2 0x132E DUP5 PUSH2 0x8CD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1399 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x13AC JUMPI POP PUSH2 0x13AA DUP2 DUP5 PUSH2 0x752 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x13EE JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E5 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1450 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14B5 DUP4 DUP4 DUP4 PUSH2 0x1674 JUMP JUMPDEST PUSH2 0x1569 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x152A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1521 SWAP2 SWAP1 PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1560 SWAP3 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1590 DUP3 PUSH2 0x8CD JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x159B PUSH2 0x156E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x15BB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x15E6 JUMP JUMPDEST DUP1 PUSH2 0x15C5 DUP5 PUSH2 0x1735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x15D6 SWAP3 SWAP2 SWAP1 PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15F8 DUP4 DUP4 PUSH2 0x1803 JUMP JUMPDEST PUSH2 0x1605 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0xE82 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x172C JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x16ED JUMPI POP PUSH2 0x16EC DUP5 DUP5 PUSH2 0x752 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x172B JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1713 DUP4 PUSH2 0x955 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1744 DUP5 PUSH2 0x18FC JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1763 JUMPI PUSH2 0x1762 PUSH2 0x1E1B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1795 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x17F8 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x17EC JUMPI PUSH2 0x17EB PUSH2 0x259A JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x17A3 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1875 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x186C SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1883 DUP4 DUP4 PUSH1 0x0 PUSH2 0x9AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18F7 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18EE SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x195A JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1950 JUMPI PUSH2 0x194F PUSH2 0x259A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1997 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x198D JUMPI PUSH2 0x198C PUSH2 0x259A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x19C6 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x19BC JUMPI PUSH2 0x19BB PUSH2 0x259A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x19EF JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x19E5 JUMPI PUSH2 0x19E4 PUSH2 0x259A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1A14 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1A0A JUMPI PUSH2 0x1A09 PUSH2 0x259A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1A37 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1A2D JUMPI PUSH2 0x1A2C PUSH2 0x259A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1A46 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A98 DUP2 PUSH2 0x1A63 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AB5 DUP2 PUSH2 0x1A8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AD1 JUMPI PUSH2 0x1AD0 PUSH2 0x1A59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ADF DUP5 DUP3 DUP6 ADD PUSH2 0x1AA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AFD DUP2 PUSH2 0x1AE8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B18 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B58 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B3D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B80 DUP3 PUSH2 0x1B1E JUMP JUMPDEST PUSH2 0x1B8A DUP2 DUP6 PUSH2 0x1B29 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B9A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B3A JUMP JUMPDEST PUSH2 0x1BA3 DUP2 PUSH2 0x1B64 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BC8 DUP2 DUP5 PUSH2 0x1B75 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BE3 DUP2 PUSH2 0x1BD0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C00 DUP2 PUSH2 0x1BDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C1C JUMPI PUSH2 0x1C1B PUSH2 0x1A59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C2A DUP5 DUP3 DUP6 ADD PUSH2 0x1BF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5E DUP3 PUSH2 0x1C33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C6E DUP2 PUSH2 0x1C53 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C89 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C98 DUP2 PUSH2 0x1C53 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CB5 DUP2 PUSH2 0x1C8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CD2 JUMPI PUSH2 0x1CD1 PUSH2 0x1A59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CE0 DUP6 DUP3 DUP7 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CF1 DUP6 DUP3 DUP7 ADD PUSH2 0x1BF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D14 JUMPI PUSH2 0x1D13 PUSH2 0x1A59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D22 DUP7 DUP3 DUP8 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D33 DUP7 DUP3 DUP8 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D44 DUP7 DUP3 DUP8 ADD PUSH2 0x1BF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D64 JUMPI PUSH2 0x1D63 PUSH2 0x1A59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D72 DUP5 DUP3 DUP6 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D84 DUP2 PUSH2 0x1BD0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D9F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DAE DUP2 PUSH2 0x1AE8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DCB DUP2 PUSH2 0x1DA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DE8 JUMPI PUSH2 0x1DE7 PUSH2 0x1A59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DF6 DUP6 DUP3 DUP7 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E07 DUP6 DUP3 DUP7 ADD PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1E53 DUP3 PUSH2 0x1B64 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E72 JUMPI PUSH2 0x1E71 PUSH2 0x1E1B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E85 PUSH2 0x1A4F JUMP JUMPDEST SWAP1 POP PUSH2 0x1E91 DUP3 DUP3 PUSH2 0x1E4A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EB1 JUMPI PUSH2 0x1EB0 PUSH2 0x1E1B JUMP JUMPDEST JUMPDEST PUSH2 0x1EBA DUP3 PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE9 PUSH2 0x1EE4 DUP5 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0x1E7B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1F05 JUMPI PUSH2 0x1F04 PUSH2 0x1E16 JUMP JUMPDEST JUMPDEST PUSH2 0x1F10 DUP5 DUP3 DUP6 PUSH2 0x1EC7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F2D JUMPI PUSH2 0x1F2C PUSH2 0x1E11 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F3D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1ED6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F60 JUMPI PUSH2 0x1F5F PUSH2 0x1A59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F6E DUP8 DUP3 DUP9 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1F7F DUP8 DUP3 DUP9 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1F90 DUP8 DUP3 DUP9 ADD PUSH2 0x1BF1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FB1 JUMPI PUSH2 0x1FB0 PUSH2 0x1A5E JUMP JUMPDEST JUMPDEST PUSH2 0x1FBD DUP8 DUP3 DUP9 ADD PUSH2 0x1F18 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FE4 JUMPI PUSH2 0x1FE3 PUSH2 0x1E1B JUMP JUMPDEST JUMPDEST PUSH2 0x1FED DUP3 PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200D PUSH2 0x2008 DUP5 PUSH2 0x1FC9 JUMP JUMPDEST PUSH2 0x1E7B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2029 JUMPI PUSH2 0x2028 PUSH2 0x1E16 JUMP JUMPDEST JUMPDEST PUSH2 0x2034 DUP5 DUP3 DUP6 PUSH2 0x1EC7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2051 JUMPI PUSH2 0x2050 PUSH2 0x1E11 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2061 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2083 JUMPI PUSH2 0x2082 PUSH2 0x1A59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2091 DUP7 DUP3 DUP8 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x20A2 DUP7 DUP3 DUP8 ADD PUSH2 0x1BF1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20C3 JUMPI PUSH2 0x20C2 PUSH2 0x1A5E JUMP JUMPDEST JUMPDEST PUSH2 0x20CF DUP7 DUP3 DUP8 ADD PUSH2 0x203C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20F0 JUMPI PUSH2 0x20EF PUSH2 0x1A59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20FE DUP6 DUP3 DUP7 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x210F DUP6 DUP3 DUP7 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2160 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2173 JUMPI PUSH2 0x2172 PUSH2 0x2119 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x218E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0x219B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D7B JUMP JUMPDEST PUSH2 0x21A8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C65 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21D7 DUP3 PUSH2 0x21B0 JUMP JUMPDEST PUSH2 0x21E1 DUP2 DUP6 PUSH2 0x21BB JUMP JUMPDEST SWAP4 POP PUSH2 0x21F1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B3A JUMP JUMPDEST PUSH2 0x21FA DUP2 PUSH2 0x1B64 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x221A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0x2227 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0x2234 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D7B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2246 DUP2 DUP5 PUSH2 0x21CC JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2260 DUP2 PUSH2 0x1A8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x227C JUMPI PUSH2 0x227B PUSH2 0x1A59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x228A DUP5 DUP3 DUP6 ADD PUSH2 0x2251 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22A9 DUP3 PUSH2 0x1B1E JUMP JUMPDEST PUSH2 0x22B3 DUP2 DUP6 PUSH2 0x2293 JUMP JUMPDEST SWAP4 POP PUSH2 0x22C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B3A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22DB DUP3 DUP6 PUSH2 0x229E JUMP JUMPDEST SWAP2 POP PUSH2 0x22E7 DUP3 DUP5 PUSH2 0x229E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2355 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2318 JUMP JUMPDEST PUSH2 0x235F DUP7 DUP4 PUSH2 0x2318 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239C PUSH2 0x2397 PUSH2 0x2392 DUP5 PUSH2 0x1BD0 JUMP JUMPDEST PUSH2 0x2377 JUMP JUMPDEST PUSH2 0x1BD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23B6 DUP4 PUSH2 0x2381 JUMP JUMPDEST PUSH2 0x23CA PUSH2 0x23C2 DUP3 PUSH2 0x23A3 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2325 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x23DF PUSH2 0x23D2 JUMP JUMPDEST PUSH2 0x23EA DUP2 DUP5 DUP5 PUSH2 0x23AD JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x240E JUMPI PUSH2 0x2403 PUSH1 0x0 DUP3 PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x23F0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2453 JUMPI PUSH2 0x2424 DUP2 PUSH2 0x22F3 JUMP JUMPDEST PUSH2 0x242D DUP5 PUSH2 0x2308 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x243C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2450 PUSH2 0x2448 DUP6 PUSH2 0x2308 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x23EF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2476 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2458 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248F DUP4 DUP4 PUSH2 0x2465 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24A8 DUP3 PUSH2 0x1B1E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24C1 JUMPI PUSH2 0x24C0 PUSH2 0x1E1B JUMP JUMPDEST JUMPDEST PUSH2 0x24CB DUP3 SLOAD PUSH2 0x2148 JUMP JUMPDEST PUSH2 0x24D6 DUP3 DUP3 DUP6 PUSH2 0x2412 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2509 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x24F7 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2501 DUP6 DUP3 PUSH2 0x2483 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2569 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2517 DUP7 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x253F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x251A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x255C JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2558 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2465 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2586 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0x2593 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D7B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB MULMOD 0xCC 0x4A MSTORE 0xC6 0xF PUSH2 0x8203 LOG3 LOG2 0xE6 0xAF PUSH26 0xB2389F2AD9F025F261E62A09FD1A583F4B64736F6C6343000813 STOP CALLER ",
							"sourceMap": "305:865:16:-:0;;;370:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;460:12;1380:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:5;1446;:13;;;;;;:::i;:::-;;1479:7;1469;:17;;;;;;:::i;:::-;;1380:113;;1296:1:0;1272:26;;:12;:26;;;1268:95;;1349:1;1321:31;;;;;;;;;;;:::i;:::-;;;;;;;;1268:95;1372:32;1391:12;1372:18;;;:32;;:::i;:::-;1224:187;370:111:16;305:865;;2911:187:0;2984:16;3003:6;;;;;;;;;;;2984:25;;3028:8;3019:6;;:17;;;;;;;;;;;;;;;;;;3082:8;3051:40;;3072:8;3051:40;;;;;;;;;;;;2974:124;2911:187;:::o;88:117:17:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;305:865:16:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1128": {
									"entryPoint": 2458,
									"id": 1128,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1194": {
									"entryPoint": 4837,
									"id": 1194,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_521": {
									"entryPoint": 5486,
									"id": 521,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_776": {
									"entryPoint": 5290,
									"id": 776,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1324": {
									"entryPoint": 3714,
									"id": 1324,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3014,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_703": {
									"entryPoint": 2389,
									"id": 703,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_739": {
									"entryPoint": 5748,
									"id": 739,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_932": {
									"entryPoint": 6147,
									"id": 932,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1626": {
									"entryPoint": 2450,
									"id": 1626,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_690": {
									"entryPoint": 4776,
									"id": 690,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1260": {
									"entryPoint": 2253,
									"id": 1260,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_947": {
									"entryPoint": 4428,
									"id": 947,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_973": {
									"entryPoint": 5614,
									"id": 973,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1231": {
									"entryPoint": 3347,
									"id": 1231,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1585": {
									"entryPoint": 4458,
									"id": 1585,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3149,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_882": {
									"entryPoint": 2476,
									"id": 882,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_537": {
									"entryPoint": 1048,
									"id": 537,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_445": {
									"entryPoint": 1378,
									"id": 445,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_554": {
									"entryPoint": 1020,
									"id": 554,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_587": {
									"entryPoint": 1874,
									"id": 587,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2809": {
									"entryPoint": 6396,
									"id": 2809,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_467": {
									"entryPoint": 874,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_458": {
									"entryPoint": 1360,
									"id": 458,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1584,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1564,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeMint_3140": {
									"entryPoint": 1841,
									"id": 3140,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_651": {
									"entryPoint": 1328,
									"id": 651,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_677": {
									"entryPoint": 1794,
									"id": 677,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_570": {
									"entryPoint": 1772,
									"id": 570,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1509": {
									"entryPoint": 2156,
									"id": 1509,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1922": {
									"entryPoint": 5642,
									"id": 1922,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_3172": {
									"entryPoint": 856,
									"id": 3172,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_417": {
									"entryPoint": 4550,
									"id": 417,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_476": {
									"entryPoint": 1626,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1712": {
									"entryPoint": 5941,
									"id": 1712,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1566": {
									"entryPoint": 4153,
									"id": 1566,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_3156": {
									"entryPoint": 1823,
									"id": 3156,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_512": {
									"entryPoint": 5509,
									"id": 512,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_633": {
									"entryPoint": 1070,
									"id": 633,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2022,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7894,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8186,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_string_memory_ptr": {
									"entryPoint": 8298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8911,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8709,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9585,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8569,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6735,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 8947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 9234,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 9199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 9375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7879,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6970,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 9347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 9317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": 9626,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8473,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7707,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7702,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6750,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6745,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 9304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 9175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8997,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9133,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 9170,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:20999:17",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:17"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:17",
														"type": ""
													}
												],
												"src": "7:75:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:17"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:17"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:17",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:17",
														"type": ""
													}
												],
												"src": "334:149:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:17"
															},
															"nodeType": "YulIf",
															"src": "541:62:17"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:17",
														"type": ""
													}
												],
												"src": "489:120:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:17"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:17",
														"type": ""
													}
												],
												"src": "615:137:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:17"
															},
															"nodeType": "YulIf",
															"src": "833:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:17",
														"type": ""
													}
												],
												"src": "758:327:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:17",
														"type": ""
													}
												],
												"src": "1091:90:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:17"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:17",
														"type": ""
													}
												],
												"src": "1187:109:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:17",
														"type": ""
													}
												],
												"src": "1302:210:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:17",
														"type": ""
													}
												],
												"src": "1518:99:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:17",
														"type": ""
													}
												],
												"src": "1623:169:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:17"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:17"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:17",
																"statements": []
															},
															"src": "1889:113:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:17"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:17"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:17",
														"type": ""
													}
												],
												"src": "1798:246:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:17"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:17",
														"type": ""
													}
												],
												"src": "2050:102:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:17",
														"type": ""
													}
												],
												"src": "2158:377:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:17"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:17",
														"type": ""
													}
												],
												"src": "2541:313:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:17",
														"type": ""
													}
												],
												"src": "2860:77:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:17"
															},
															"nodeType": "YulIf",
															"src": "2996:63:17"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:17",
														"type": ""
													}
												],
												"src": "2943:122:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:17"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:17",
														"type": ""
													}
												],
												"src": "3071:139:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:17"
															},
															"nodeType": "YulIf",
															"src": "3292:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:17",
														"type": ""
													}
												],
												"src": "3216:329:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:17",
														"type": ""
													}
												],
												"src": "3551:126:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:17",
														"type": ""
													}
												],
												"src": "3683:96:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:17",
														"type": ""
													}
												],
												"src": "3785:118:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:17",
														"type": ""
													}
												],
												"src": "3909:222:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:17"
															},
															"nodeType": "YulIf",
															"src": "4190:63:17"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:17",
														"type": ""
													}
												],
												"src": "4137:122:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:17"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:17",
														"type": ""
													}
												],
												"src": "4265:139:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:17"
															},
															"nodeType": "YulIf",
															"src": "4503:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:17",
														"type": ""
													}
												],
												"src": "4410:474:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4990:519:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5036:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5003:32:17"
															},
															"nodeType": "YulIf",
															"src": "5000:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "5129:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5173:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5256:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5301:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5384:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5429:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4944:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4955:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4967:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4975:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4983:6:17",
														"type": ""
													}
												],
												"src": "4890:619:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5581:263:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5627:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5629:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5629:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5629:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5602:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5598:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5598:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5594:32:17"
															},
															"nodeType": "YulIf",
															"src": "5591:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "5720:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5735:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5749:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5739:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5764:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5799:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5810:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5795:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5819:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5774:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5774:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5764:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5551:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5562:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5574:6:17",
														"type": ""
													}
												],
												"src": "5515:329:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5915:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5932:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5955:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5937:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5937:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5925:37:17"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5903:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5910:3:17",
														"type": ""
													}
												],
												"src": "5850:118:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6072:124:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6082:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6090:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6082:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6162:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6175:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6186:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6171:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6118:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6118:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6118:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6044:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6056:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6067:4:17",
														"type": ""
													}
												],
												"src": "5974:222:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6242:76:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6296:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:40:17"
															},
															"nodeType": "YulIf",
															"src": "6252:60:17"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6235:5:17",
														"type": ""
													}
												],
												"src": "6202:116:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6373:84:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6383:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:17"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6351:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6359:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6367:5:17",
														"type": ""
													}
												],
												"src": "6324:133:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:388:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6589:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:32:17"
															},
															"nodeType": "YulIf",
															"src": "6553:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "6682:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6726:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6809:115:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6854:60:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6505:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6516:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6528:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6536:6:17",
														"type": ""
													}
												],
												"src": "6463:468:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:17"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:17"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7211:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7412:238:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:40:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7591:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:62:17"
															},
															"nodeType": "YulIf",
															"src": "7525:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:17"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7398:6:17",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7406:4:17",
														"type": ""
													}
												],
												"src": "7369:281:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:88:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7707:30:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:20:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:17"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:17"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7746:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:17"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7681:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7690:6:17",
														"type": ""
													}
												],
												"src": "7656:129:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:241:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7962:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:30:17"
															},
															"nodeType": "YulIf",
															"src": "7928:56:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7994:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:17"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:29:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8068:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:15:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7841:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7852:4:17",
														"type": ""
													}
												],
												"src": "7791:307:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8168:82:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:17"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:17"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:17"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:27:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:17"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8150:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8155:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8160:6:17",
														"type": ""
													}
												],
												"src": "8104:146:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8339:340:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8349:74:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:65:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:16:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8527:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:17"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:25:17"
															},
															"nodeType": "YulIf",
															"src": "8498:112:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:17"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:54:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:17"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8312:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8317:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8325:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8333:5:17",
														"type": ""
													}
												],
												"src": "8256:423:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8759:277:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8808:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:17"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:35:17"
															},
															"nodeType": "YulIf",
															"src": "8769:122:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:20:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8943:87:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:78:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8737:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8745:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8753:5:17",
														"type": ""
													}
												],
												"src": "8698:338:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9168:817:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9215:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:33:17"
															},
															"nodeType": "YulIf",
															"src": "9178:120:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "9308:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9352:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9435:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9480:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9563:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9608:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9691:287:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:17",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9799:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:17"
																	},
																	"nodeType": "YulIf",
																	"src": "9765:117:17"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9896:72:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:17"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9114:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9125:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9137:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9145:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9153:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9161:6:17",
														"type": ""
													}
												],
												"src": "9042:943:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10058:241:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10163:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10165:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10165:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10165:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10135:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10143:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10132:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10132:30:17"
															},
															"nodeType": "YulIf",
															"src": "10129:56:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10195:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10225:6:17"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "10203:21:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10203:29:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10195:4:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10269:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10281:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10287:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10277:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10277:15:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10269:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10042:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10053:4:17",
														"type": ""
													}
												],
												"src": "9991:308:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10389:341:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10399:75:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10466:6:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10424:41:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10424:49:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10408:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10408:66:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10399:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10490:5:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10497:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10483:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10483:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10483:21:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10513:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10528:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10535:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10524:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10524:16:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "10517:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10578:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "10580:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10580:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10580:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "10559:3:17"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10564:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10555:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10555:16:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10573:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10552:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10552:25:17"
															},
															"nodeType": "YulIf",
															"src": "10549:112:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10707:3:17"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "10712:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10717:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "10670:36:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10670:54:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10670:54:17"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10362:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10367:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10375:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10383:5:17",
														"type": ""
													}
												],
												"src": "10305:425:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10812:278:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10861:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "10863:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10863:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10863:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10840:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10848:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10836:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10836:17:17"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "10855:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "10832:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10832:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10825:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10825:35:17"
															},
															"nodeType": "YulIf",
															"src": "10822:122:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10953:34:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10980:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10967:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10967:20:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10957:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10996:88:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11057:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11065:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11053:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11053:17:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11072:6:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "11080:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11005:47:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11005:79:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10996:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10790:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10798:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10806:5:17",
														"type": ""
													}
												],
												"src": "10750:340:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11206:689:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11252:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11254:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11254:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11254:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11227:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11236:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11223:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11223:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11248:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11219:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11219:32:17"
															},
															"nodeType": "YulIf",
															"src": "11216:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "11345:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11360:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11374:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11364:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11389:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11424:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11435:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11420:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11420:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11444:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11399:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11399:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11389:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11472:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11487:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11501:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11491:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11517:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11552:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11563:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11548:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11548:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11572:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "11527:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11527:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "11517:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11600:288:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11615:46:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11646:9:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11657:2:17",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11642:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11642:18:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11629:12:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11629:32:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11619:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11708:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11710:77:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11710:79:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11710:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11680:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11688:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11677:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11677:30:17"
																	},
																	"nodeType": "YulIf",
																	"src": "11674:117:17"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11805:73:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11850:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11861:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11846:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11846:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11870:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11815:30:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11815:63:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "11805:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11160:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11171:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11183:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11191:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11199:6:17",
														"type": ""
													}
												],
												"src": "11096:799:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11984:391:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12030:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12032:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12032:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12032:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12005:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12014:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12001:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12001:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12026:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11997:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11997:32:17"
															},
															"nodeType": "YulIf",
															"src": "11994:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "12123:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12138:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12152:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12142:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12167:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12202:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12213:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12198:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12198:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12222:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12177:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12177:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12167:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12250:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12265:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12279:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12269:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12295:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12330:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12341:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12326:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12326:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12350:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12305:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12305:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12295:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11946:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11957:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11969:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11977:6:17",
														"type": ""
													}
												],
												"src": "11901:474:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12409:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12426:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12429:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12419:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12419:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12419:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12523:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12526:4:17",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12516:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12516:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12516:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12547:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12550:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12540:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12540:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12540:15:17"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "12381:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12618:269:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12628:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12642:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12648:1:17",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12638:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12638:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12628:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12659:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12689:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12695:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12685:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12685:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "12663:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12736:51:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12750:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "12764:6:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12772:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "12760:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12760:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12750:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12716:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12709:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12709:26:17"
															},
															"nodeType": "YulIf",
															"src": "12706:81:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12839:42:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "12853:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12853:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12853:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12803:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12826:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12834:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12823:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12823:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12800:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12800:38:17"
															},
															"nodeType": "YulIf",
															"src": "12797:84:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12602:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12611:6:17",
														"type": ""
													}
												],
												"src": "12567:320:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13047:288:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13057:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13069:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13080:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13065:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13065:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13057:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13137:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13150:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13161:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13146:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13146:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13093:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13093:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13093:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13218:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13231:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13242:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13227:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13227:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13174:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13174:72:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13174:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13300:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13313:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13324:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13309:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13309:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13256:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13256:72:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13256:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13003:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13015:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13023:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13031:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13042:4:17",
														"type": ""
													}
												],
												"src": "12893:442:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13399:40:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13410:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13426:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13420:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13420:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13410:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13382:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13392:6:17",
														"type": ""
													}
												],
												"src": "13341:98:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13540:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13557:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13562:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13550:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13550:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13550:19:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13578:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13597:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13602:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13593:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13593:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13578:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13512:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13517:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13528:11:17",
														"type": ""
													}
												],
												"src": "13445:168:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13709:283:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13719:52:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13765:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13733:31:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13733:38:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13723:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13780:77:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13845:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13850:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13787:57:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13787:70:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13780:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13905:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13912:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13901:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13901:16:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13919:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13924:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "13866:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13866:65:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13866:65:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13940:46:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13951:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13978:6:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "13956:21:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13956:29:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13947:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13947:39:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13940:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13690:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13697:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13705:3:17",
														"type": ""
													}
												],
												"src": "13619:373:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14198:440:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14208:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14220:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14231:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14216:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14216:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14208:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14289:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14302:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14313:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14298:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14298:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14245:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14245:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14245:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14370:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14383:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14394:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14379:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14379:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14326:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14326:72:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14326:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14452:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14465:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14476:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14461:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14461:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14408:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14408:72:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14408:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14501:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14512:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14497:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14497:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14521:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14527:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14517:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14517:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14490:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14490:48:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14490:48:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14547:84:17",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14617:6:17"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14626:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14555:61:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14555:76:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14547:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14146:9:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14158:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14166:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14174:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14182:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14193:4:17",
														"type": ""
													}
												],
												"src": "13998:640:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14706:79:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14716:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14731:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14725:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14725:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14716:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14773:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "14747:25:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14747:32:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14747:32:17"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14684:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14692:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14700:5:17",
														"type": ""
													}
												],
												"src": "14644:141:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14867:273:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14913:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14915:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14915:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14915:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14888:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14897:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14884:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14884:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14909:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14880:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14880:32:17"
															},
															"nodeType": "YulIf",
															"src": "14877:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "15006:127:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15021:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15035:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15025:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15050:73:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15095:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15106:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15091:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15091:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15115:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "15060:30:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15060:63:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15050:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14837:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14848:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14860:6:17",
														"type": ""
													}
												],
												"src": "14791:349:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15260:34:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15270:18:17",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "15285:3:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "15270:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15232:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15237:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "15248:11:17",
														"type": ""
													}
												],
												"src": "15146:148:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15410:280:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15420:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15467:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15434:32:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15434:39:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15424:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15482:96:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15566:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15571:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15489:76:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15489:89:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15482:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15626:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15633:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15622:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15622:16:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15640:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15645:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "15587:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15587:65:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15587:65:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15661:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15672:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15677:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15668:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15668:16:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15661:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15391:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15398:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15406:3:17",
														"type": ""
													}
												],
												"src": "15300:390:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15880:251:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15891:102:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15980:6:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15989:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15898:81:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15898:95:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15891:3:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16003:102:17",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16092:6:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16101:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16010:81:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16010:95:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16003:3:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16115:10:17",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16122:3:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16115:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15851:3:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15857:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15865:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15876:3:17",
														"type": ""
													}
												],
												"src": "15696:435:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16191:87:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16201:11:17",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "16209:3:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "16201:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16229:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "16232:3:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16222:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16222:14:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16222:14:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16245:26:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16263:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16266:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "16253:9:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16253:18:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "16245:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "16178:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "16186:4:17",
														"type": ""
													}
												],
												"src": "16137:141:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16328:49:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16338:33:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16356:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16363:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16352:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16352:14:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16368:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "16348:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16348:23:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "16338:6:17"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16311:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "16321:6:17",
														"type": ""
													}
												],
												"src": "16284:93:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16436:54:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16446:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "16471:4:17"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16477:5:17"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "16467:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16467:16:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "16446:8:17"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "16411:4:17",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16417:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "16427:8:17",
														"type": ""
													}
												],
												"src": "16383:107:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16572:317:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16582:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "16603:10:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16615:1:17",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "16599:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16599:18:17"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "16586:9:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16626:109:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "16657:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16668:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "16638:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16638:97:17"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "16630:4:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16744:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "16775:9:17"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "16786:8:17"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "16756:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16756:39:17"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "16744:8:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16804:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16817:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "16828:4:17"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16824:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16824:9:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16813:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16813:21:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16804:5:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16843:40:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16856:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "16867:8:17"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "16877:4:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16863:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16863:19:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "16853:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16853:30:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "16843:6:17"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16533:5:17",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "16540:10:17",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "16552:8:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "16565:6:17",
														"type": ""
													}
												],
												"src": "16496:393:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16927:28:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16937:12:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "16944:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16937:3:17"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16913:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16923:3:17",
														"type": ""
													}
												],
												"src": "16895:60:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17021:82:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17031:66:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17089:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "17071:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17071:24:17"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "17062:8:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17062:34:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17044:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17044:53:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "17031:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17001:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "17011:9:17",
														"type": ""
													}
												],
												"src": "16961:142:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17156:28:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17166:12:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "17173:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "17166:3:17"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17142:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "17152:3:17",
														"type": ""
													}
												],
												"src": "17109:75:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17266:193:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17276:63:17",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "17331:7:17"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17300:30:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17300:39:17"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "17280:16:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "17355:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "17395:4:17"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "17389:5:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17389:11:17"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "17402:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "17434:16:17"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "17410:23:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17410:41:17"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "17361:27:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17361:91:17"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "17348:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17348:105:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17348:105:17"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "17243:4:17",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "17249:6:17",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "17257:7:17",
														"type": ""
													}
												],
												"src": "17190:269:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17514:24:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17524:8:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "17531:1:17",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "17524:3:17"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "17510:3:17",
														"type": ""
													}
												],
												"src": "17465:73:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17597:136:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17607:46:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17621:30:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17621:32:17"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "17611:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "17706:4:17"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "17712:6:17"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "17720:6:17"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17662:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17662:65:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17662:65:17"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "17583:4:17",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "17589:6:17",
														"type": ""
													}
												],
												"src": "17544:189:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17789:136:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17856:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "17900:5:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17907:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "17870:29:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17870:39:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17870:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "17809:5:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "17816:3:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "17806:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17806:14:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "17821:26:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "17823:22:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "17836:5:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17843:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "17832:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17832:13:17"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "17823:5:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "17803:2:17",
																"statements": []
															},
															"src": "17799:120:17"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "17777:5:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17784:3:17",
														"type": ""
													}
												],
												"src": "17739:186:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18010:464:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18036:431:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "18050:54:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "18098:5:17"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "18066:31:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18066:38:17"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "18054:8:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "18117:63:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "18140:8:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "18168:10:17"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "18150:17:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18150:29:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "18136:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18136:44:17"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "18121:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "18337:27:17",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "18339:23:17",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "18354:8:17"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "18339:11:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "18321:10:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18333:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "18318:2:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18318:18:17"
																		},
																		"nodeType": "YulIf",
																		"src": "18315:49:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "18406:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "18423:8:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "18451:3:17"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "18433:17:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "18433:22:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "18419:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18419:37:17"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "18377:28:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18377:80:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18377:80:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "18027:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18032:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18024:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18024:11:17"
															},
															"nodeType": "YulIf",
															"src": "18021:446:17"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "17986:5:17",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "17993:3:17",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "17998:10:17",
														"type": ""
													}
												],
												"src": "17931:543:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18543:54:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18553:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "18578:4:17"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18584:5:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "18574:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18574:16:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "18553:8:17"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "18518:4:17",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18524:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "18534:8:17",
														"type": ""
													}
												],
												"src": "18480:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18654:118:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18664:68:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18713:1:17",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "18716:5:17"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "18709:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18709:13:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18728:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "18724:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18724:6:17"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "18680:28:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18680:51:17"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "18676:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18676:56:17"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "18668:4:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18741:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18755:4:17"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "18761:4:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18751:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18751:15:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "18741:6:17"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "18631:4:17",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "18637:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "18647:6:17",
														"type": ""
													}
												],
												"src": "18603:169:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18858:214:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18991:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19018:4:17"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "19024:3:17"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "18999:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18999:29:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "18991:4:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19037:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19048:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19058:1:17",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "19061:3:17"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "19054:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19054:11:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "19045:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19045:21:17"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "19037:4:17"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "18839:4:17",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "18845:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "18853:4:17",
														"type": ""
													}
												],
												"src": "18777:295:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19169:1303:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19180:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "19227:3:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "19194:32:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19194:37:17"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "19184:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19316:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "19318:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19318:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19318:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "19288:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19296:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19285:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19285:30:17"
															},
															"nodeType": "YulIf",
															"src": "19282:56:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19348:52:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "19394:4:17"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "19388:5:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19388:11:17"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "19362:25:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19362:38:17"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "19352:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "19493:4:17"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "19499:6:17"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "19507:6:17"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "19447:45:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19447:67:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19447:67:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19524:18:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "19541:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "19528:9:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19552:17:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "19565:4:17",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "19552:9:17"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "19616:611:17",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "19630:37:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "19649:6:17"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "19661:4:17",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "19657:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "19657:9:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "19645:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19645:22:17"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "19634:7:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "19681:51:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "19727:4:17"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "19695:31:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19695:37:17"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "19685:6:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "19745:10:17",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19754:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "19749:1:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "19813:163:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "19838:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "19856:3:17"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "19861:9:17"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "19852:3:17"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "19852:19:17"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "19846:5:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "19846:26:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "19831:6:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19831:42:17"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "19831:42:17"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "19890:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "19904:6:17"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "19912:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "19900:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19900:14:17"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "19890:6:17"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "19931:31:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "19948:9:17"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "19959:2:17",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "19944:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19944:18:17"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "19931:9:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "19779:1:17"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "19782:7:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "19776:2:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19776:14:17"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "19791:21:17",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "19793:17:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "19802:1:17"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "19805:4:17",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "19798:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19798:12:17"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "19793:1:17"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "19772:3:17",
																					"statements": []
																				},
																				"src": "19768:208:17"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "20012:156:17",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "20030:43:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "20057:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "20062:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "20053:3:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "20053:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "20047:5:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "20047:26:17"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "20034:9:17",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "20097:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "20124:9:17"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "20139:6:17"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "20147:4:17",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "20135:3:17"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "20135:17:17"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "20105:18:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "20105:48:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "20090:6:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "20090:64:17"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "20090:64:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "19995:7:17"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "20004:6:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "19992:2:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19992:19:17"
																				},
																				"nodeType": "YulIf",
																				"src": "19989:179:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "20188:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "20202:6:17"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "20210:1:17",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "20198:3:17"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "20198:14:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "20214:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "20194:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "20194:22:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "20181:6:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20181:36:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "20181:36:17"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "19609:618:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19614:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "20244:222:17",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "20258:14:17",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20271:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "20262:5:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "20295:67:17",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "20313:35:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "20332:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "20337:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "20328:3:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "20328:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "20322:5:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "20322:26:17"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "20313:5:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "20288:6:17"
																				},
																				"nodeType": "YulIf",
																				"src": "20285:77:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "20382:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "20441:5:17"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "20448:6:17"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "20388:52:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "20388:67:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "20375:6:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20375:81:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "20375:81:17"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "20236:230:17",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "19589:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19597:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19586:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19586:14:17"
															},
															"nodeType": "YulSwitch",
															"src": "19579:887:17"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "19158:4:17",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "19164:3:17",
														"type": ""
													}
												],
												"src": "19077:1395:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20604:206:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20614:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20626:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20637:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20622:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20622:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20614:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20694:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20707:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20718:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20703:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20703:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20650:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20650:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20650:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20775:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20788:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20799:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20784:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20784:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20731:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20731:72:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20731:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20568:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20580:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20588:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20599:4:17",
														"type": ""
													}
												],
												"src": "20478:332:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20844:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20861:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20864:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20854:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20854:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20854:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20958:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20961:4:17",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20951:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20951:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20951:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20982:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20985:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20975:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20975:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20975:15:17"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "20816:180:17"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063b88d4fde11610071578063b88d4fde146102a4578063c87b56dd146102c0578063cd279c7c146102f0578063e985e9c51461030c578063f2fde38b1461033c5761010b565b8063715018a6146102425780638da5cb5b1461024c57806395d89b411461026a578063a22cb465146102885761010b565b806323b872dd116100de57806323b872dd146101aa57806342842e0e146101c65780636352211e146101e257806370a08231146102125761010b565b806301ffc9a71461011057806306fdde0314610140578063081812fc1461015e578063095ea7b31461018e575b600080fd5b61012a60048036038101906101259190611abb565b610358565b6040516101379190611b03565b60405180910390f35b61014861036a565b6040516101559190611bae565b60405180910390f35b61017860048036038101906101739190611c06565b6103fc565b6040516101859190611c74565b60405180910390f35b6101a860048036038101906101a39190611cbb565b610418565b005b6101c460048036038101906101bf9190611cfb565b61042e565b005b6101e060048036038101906101db9190611cfb565b610530565b005b6101fc60048036038101906101f79190611c06565b610550565b6040516102099190611c74565b60405180910390f35b61022c60048036038101906102279190611d4e565b610562565b6040516102399190611d8a565b60405180910390f35b61024a61061c565b005b610254610630565b6040516102619190611c74565b60405180910390f35b61027261065a565b60405161027f9190611bae565b60405180910390f35b6102a2600480360381019061029d9190611dd1565b6106ec565b005b6102be60048036038101906102b99190611f46565b610702565b005b6102da60048036038101906102d59190611c06565b61071f565b6040516102e79190611bae565b60405180910390f35b61030a6004803603810190610305919061206a565b610731565b005b610326600480360381019061032191906120d9565b610752565b6040516103339190611b03565b60405180910390f35b61035660048036038101906103519190611d4e565b6107e6565b005b60006103638261086c565b9050919050565b60606000805461037990612148565b80601f01602080910402602001604051908101604052809291908181526020018280546103a590612148565b80156103f25780601f106103c7576101008083540402835291602001916103f2565b820191906000526020600020905b8154815290600101906020018083116103d557829003601f168201915b5050505050905090565b6000610407826108cd565b5061041182610955565b9050919050565b61042a8282610425610992565b61099a565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104a05760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104979190611c74565b60405180910390fd5b60006104b483836104af610992565b6109ac565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461052a578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161052193929190612179565b60405180910390fd5b50505050565b61054b83838360405180602001604052806000815250610702565b505050565b600061055b826108cd565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105d55760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016105cc9190611c74565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610624610bc6565b61062e6000610c4d565b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461066990612148565b80601f016020809104026020016040519081016040528092919081815260200182805461069590612148565b80156106e25780601f106106b7576101008083540402835291602001916106e2565b820191906000526020600020905b8154815290600101906020018083116106c557829003601f168201915b5050505050905090565b6106fe6106f7610992565b8383610d13565b5050565b61070d84848461042e565b61071984848484610e82565b50505050565b606061072a82611039565b9050919050565b610739610bc6565b610743838361114c565b61074d828261116a565b505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6107ee610bc6565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108605760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108579190611c74565b60405180910390fd5b61086981610c4d565b50565b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806108c657506108c5826111c6565b5b9050919050565b6000806108d9836112a8565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361094c57826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016109439190611d8a565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b6109a783838360016112e5565b505050565b6000806109b8846112a8565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146109fa576109f98184866114aa565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a8b57610a3c6000856000806112e5565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610b0e576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610bce610992565b73ffffffffffffffffffffffffffffffffffffffff16610bec610630565b73ffffffffffffffffffffffffffffffffffffffff1614610c4b57610c0f610992565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c429190611c74565b60405180910390fd5b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d8457816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610d7b9190611c74565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e759190611b03565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611033578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610ec6610992565b8685856040518563ffffffff1660e01b8152600401610ee89493929190612205565b6020604051808303816000875af1925050508015610f2457506040513d601f19601f82011682018060405250810190610f219190612266565b60015b610fa8573d8060008114610f54576040519150601f19603f3d011682016040523d82523d6000602084013e610f59565b606091505b506000815103610fa057836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610f979190611c74565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461103157836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110289190611c74565b60405180910390fd5b505b50505050565b6060611044826108cd565b50600060066000848152602001908152602001600020805461106590612148565b80601f016020809104026020016040519081016040528092919081815260200182805461109190612148565b80156110de5780601f106110b3576101008083540402835291602001916110de565b820191906000526020600020905b8154815290600101906020018083116110c157829003601f168201915b5050505050905060006110ef61156e565b90506000815103611104578192505050611147565b6000825111156111395780826040516020016111219291906122cf565b60405160208183030381529060405292505050611147565b61114284611585565b925050505b919050565b6111668282604051806020016040528060008152506115ee565b5050565b8060066000848152602001908152602001600020908161118a919061249f565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516111ba9190611d8a565b60405180910390a15050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061129157507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806112a157506112a08261160a565b5b9050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061131e5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561145257600061132e846108cd565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561139957508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156113ac57506113aa8184610752565b155b156113ee57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016113e59190611c74565b60405180910390fd5b811561145057838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6114b5838383611674565b61156957600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361152a57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016115219190611d8a565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611560929190612571565b60405180910390fd5b505050565b606060405180602001604052806000815250905090565b6060611590826108cd565b50600061159b61156e565b905060008151116115bb57604051806020016040528060008152506115e6565b806115c584611735565b6040516020016115d69291906122cf565b6040516020818303038152906040525b915050919050565b6115f88383611803565b6116056000848484610e82565b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561172c57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806116ed57506116ec8484610752565b5b8061172b57508273ffffffffffffffffffffffffffffffffffffffff1661171383610955565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b606060006001611744846118fc565b01905060008167ffffffffffffffff81111561176357611762611e1b565b5b6040519080825280601f01601f1916602001820160405280156117955781602001600182028036833780820191505090505b509050600082602001820190505b6001156117f8578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816117ec576117eb61259a565b5b049450600085036117a3575b819350505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118755760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161186c9190611c74565b60405180910390fd5b6000611883838360006109ac565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146118f75760006040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016118ee9190611c74565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061195a577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816119505761194f61259a565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611997576d04ee2d6d415b85acef8100000000838161198d5761198c61259a565b5b0492506020810190505b662386f26fc1000083106119c657662386f26fc1000083816119bc576119bb61259a565b5b0492506010810190505b6305f5e10083106119ef576305f5e10083816119e5576119e461259a565b5b0492506008810190505b6127108310611a14576127108381611a0a57611a0961259a565b5b0492506004810190505b60648310611a375760648381611a2d57611a2c61259a565b5b0492506002810190505b600a8310611a46576001810190505b80915050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a9881611a63565b8114611aa357600080fd5b50565b600081359050611ab581611a8f565b92915050565b600060208284031215611ad157611ad0611a59565b5b6000611adf84828501611aa6565b91505092915050565b60008115159050919050565b611afd81611ae8565b82525050565b6000602082019050611b186000830184611af4565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611b58578082015181840152602081019050611b3d565b60008484015250505050565b6000601f19601f8301169050919050565b6000611b8082611b1e565b611b8a8185611b29565b9350611b9a818560208601611b3a565b611ba381611b64565b840191505092915050565b60006020820190508181036000830152611bc88184611b75565b905092915050565b6000819050919050565b611be381611bd0565b8114611bee57600080fd5b50565b600081359050611c0081611bda565b92915050565b600060208284031215611c1c57611c1b611a59565b5b6000611c2a84828501611bf1565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c5e82611c33565b9050919050565b611c6e81611c53565b82525050565b6000602082019050611c896000830184611c65565b92915050565b611c9881611c53565b8114611ca357600080fd5b50565b600081359050611cb581611c8f565b92915050565b60008060408385031215611cd257611cd1611a59565b5b6000611ce085828601611ca6565b9250506020611cf185828601611bf1565b9150509250929050565b600080600060608486031215611d1457611d13611a59565b5b6000611d2286828701611ca6565b9350506020611d3386828701611ca6565b9250506040611d4486828701611bf1565b9150509250925092565b600060208284031215611d6457611d63611a59565b5b6000611d7284828501611ca6565b91505092915050565b611d8481611bd0565b82525050565b6000602082019050611d9f6000830184611d7b565b92915050565b611dae81611ae8565b8114611db957600080fd5b50565b600081359050611dcb81611da5565b92915050565b60008060408385031215611de857611de7611a59565b5b6000611df685828601611ca6565b9250506020611e0785828601611dbc565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611e5382611b64565b810181811067ffffffffffffffff82111715611e7257611e71611e1b565b5b80604052505050565b6000611e85611a4f565b9050611e918282611e4a565b919050565b600067ffffffffffffffff821115611eb157611eb0611e1b565b5b611eba82611b64565b9050602081019050919050565b82818337600083830152505050565b6000611ee9611ee484611e96565b611e7b565b905082815260208101848484011115611f0557611f04611e16565b5b611f10848285611ec7565b509392505050565b600082601f830112611f2d57611f2c611e11565b5b8135611f3d848260208601611ed6565b91505092915050565b60008060008060808587031215611f6057611f5f611a59565b5b6000611f6e87828801611ca6565b9450506020611f7f87828801611ca6565b9350506040611f9087828801611bf1565b925050606085013567ffffffffffffffff811115611fb157611fb0611a5e565b5b611fbd87828801611f18565b91505092959194509250565b600067ffffffffffffffff821115611fe457611fe3611e1b565b5b611fed82611b64565b9050602081019050919050565b600061200d61200884611fc9565b611e7b565b90508281526020810184848401111561202957612028611e16565b5b612034848285611ec7565b509392505050565b600082601f83011261205157612050611e11565b5b8135612061848260208601611ffa565b91505092915050565b60008060006060848603121561208357612082611a59565b5b600061209186828701611ca6565b93505060206120a286828701611bf1565b925050604084013567ffffffffffffffff8111156120c3576120c2611a5e565b5b6120cf8682870161203c565b9150509250925092565b600080604083850312156120f0576120ef611a59565b5b60006120fe85828601611ca6565b925050602061210f85828601611ca6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061216057607f821691505b60208210810361217357612172612119565b5b50919050565b600060608201905061218e6000830186611c65565b61219b6020830185611d7b565b6121a86040830184611c65565b949350505050565b600081519050919050565b600082825260208201905092915050565b60006121d7826121b0565b6121e181856121bb565b93506121f1818560208601611b3a565b6121fa81611b64565b840191505092915050565b600060808201905061221a6000830187611c65565b6122276020830186611c65565b6122346040830185611d7b565b818103606083015261224681846121cc565b905095945050505050565b60008151905061226081611a8f565b92915050565b60006020828403121561227c5761227b611a59565b5b600061228a84828501612251565b91505092915050565b600081905092915050565b60006122a982611b1e565b6122b38185612293565b93506122c3818560208601611b3a565b80840191505092915050565b60006122db828561229e565b91506122e7828461229e565b91508190509392505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026123557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612318565b61235f8683612318565b95508019841693508086168417925050509392505050565b6000819050919050565b600061239c61239761239284611bd0565b612377565b611bd0565b9050919050565b6000819050919050565b6123b683612381565b6123ca6123c2826123a3565b848454612325565b825550505050565b600090565b6123df6123d2565b6123ea8184846123ad565b505050565b5b8181101561240e576124036000826123d7565b6001810190506123f0565b5050565b601f82111561245357612424816122f3565b61242d84612308565b8101602085101561243c578190505b61245061244885612308565b8301826123ef565b50505b505050565b600082821c905092915050565b600061247660001984600802612458565b1980831691505092915050565b600061248f8383612465565b9150826002028217905092915050565b6124a882611b1e565b67ffffffffffffffff8111156124c1576124c0611e1b565b5b6124cb8254612148565b6124d6828285612412565b600060209050601f83116001811461250957600084156124f7578287015190505b6125018582612483565b865550612569565b601f198416612517866122f3565b60005b8281101561253f5784890151825560018201915060208501945060208101905061251a565b8683101561255c5784890151612558601f891682612465565b8355505b6001600288020188555050505b505050505050565b60006040820190506125866000830185611c65565b6125936020830184611d7b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220cb09cc4a52c60f618203a3a2e6af79b2389f2ad9f025f261e62a09fd1a583f4b64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xCD279C7C EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x33C JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x288 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x212 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x1ABB JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1BAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1CBB JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH2 0x61C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x254 PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1BAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST PUSH2 0x6EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1F46 JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1BAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH2 0x731 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x20D9 JUMP JUMPDEST PUSH2 0x752 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x356 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x363 DUP3 PUSH2 0x86C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x379 SWAP1 PUSH2 0x2148 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A5 SWAP1 PUSH2 0x2148 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407 DUP3 PUSH2 0x8CD JUMP JUMPDEST POP PUSH2 0x411 DUP3 PUSH2 0x955 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42A DUP3 DUP3 PUSH2 0x425 PUSH2 0x992 JUMP JUMPDEST PUSH2 0x99A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4A0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x497 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4B4 DUP4 DUP4 PUSH2 0x4AF PUSH2 0x992 JUMP JUMPDEST PUSH2 0x9AC JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x52A JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x521 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x54B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x702 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55B DUP3 PUSH2 0x8CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x624 PUSH2 0xBC6 JUMP JUMPDEST PUSH2 0x62E PUSH1 0x0 PUSH2 0xC4D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x669 SWAP1 PUSH2 0x2148 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x695 SWAP1 PUSH2 0x2148 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6FE PUSH2 0x6F7 PUSH2 0x992 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xD13 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x70D DUP5 DUP5 DUP5 PUSH2 0x42E JUMP JUMPDEST PUSH2 0x719 DUP5 DUP5 DUP5 DUP5 PUSH2 0xE82 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x72A DUP3 PUSH2 0x1039 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x739 PUSH2 0xBC6 JUMP JUMPDEST PUSH2 0x743 DUP4 DUP4 PUSH2 0x114C JUMP JUMPDEST PUSH2 0x74D DUP3 DUP3 PUSH2 0x116A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7EE PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x860 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x857 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x869 DUP2 PUSH2 0xC4D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x8C6 JUMPI POP PUSH2 0x8C5 DUP3 PUSH2 0x11C6 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8D9 DUP4 PUSH2 0x12A8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x94C JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x943 SWAP2 SWAP1 PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9A7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12E5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9B8 DUP5 PUSH2 0x12A8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9FA JUMPI PUSH2 0x9F9 DUP2 DUP5 DUP7 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA8B JUMPI PUSH2 0xA3C PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x12E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB0E JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBCE PUSH2 0x992 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBEC PUSH2 0x630 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC4B JUMPI PUSH2 0xC0F PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC42 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD84 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7B SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE75 SWAP2 SWAP1 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1033 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xEC6 PUSH2 0x992 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2205 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF24 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF21 SWAP2 SWAP1 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFA8 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF54 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xFA0 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF97 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1031 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1028 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1044 DUP3 PUSH2 0x8CD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1065 SWAP1 PUSH2 0x2148 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1091 SWAP1 PUSH2 0x2148 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x10EF PUSH2 0x156E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1104 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1139 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1121 SWAP3 SWAP2 SWAP1 PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1147 JUMP JUMPDEST PUSH2 0x1142 DUP5 PUSH2 0x1585 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1166 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x15EE JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x118A SWAP2 SWAP1 PUSH2 0x249F JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x11BA SWAP2 SWAP1 PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1291 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x12A1 JUMPI POP PUSH2 0x12A0 DUP3 PUSH2 0x160A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x131E JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1452 JUMPI PUSH1 0x0 PUSH2 0x132E DUP5 PUSH2 0x8CD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1399 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x13AC JUMPI POP PUSH2 0x13AA DUP2 DUP5 PUSH2 0x752 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x13EE JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E5 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1450 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14B5 DUP4 DUP4 DUP4 PUSH2 0x1674 JUMP JUMPDEST PUSH2 0x1569 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x152A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1521 SWAP2 SWAP1 PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1560 SWAP3 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1590 DUP3 PUSH2 0x8CD JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x159B PUSH2 0x156E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x15BB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x15E6 JUMP JUMPDEST DUP1 PUSH2 0x15C5 DUP5 PUSH2 0x1735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x15D6 SWAP3 SWAP2 SWAP1 PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15F8 DUP4 DUP4 PUSH2 0x1803 JUMP JUMPDEST PUSH2 0x1605 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0xE82 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x172C JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x16ED JUMPI POP PUSH2 0x16EC DUP5 DUP5 PUSH2 0x752 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x172B JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1713 DUP4 PUSH2 0x955 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1744 DUP5 PUSH2 0x18FC JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1763 JUMPI PUSH2 0x1762 PUSH2 0x1E1B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1795 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x17F8 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x17EC JUMPI PUSH2 0x17EB PUSH2 0x259A JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x17A3 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1875 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x186C SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1883 DUP4 DUP4 PUSH1 0x0 PUSH2 0x9AC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18F7 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18EE SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x195A JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1950 JUMPI PUSH2 0x194F PUSH2 0x259A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1997 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x198D JUMPI PUSH2 0x198C PUSH2 0x259A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x19C6 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x19BC JUMPI PUSH2 0x19BB PUSH2 0x259A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x19EF JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x19E5 JUMPI PUSH2 0x19E4 PUSH2 0x259A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1A14 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1A0A JUMPI PUSH2 0x1A09 PUSH2 0x259A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1A37 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1A2D JUMPI PUSH2 0x1A2C PUSH2 0x259A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1A46 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A98 DUP2 PUSH2 0x1A63 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AB5 DUP2 PUSH2 0x1A8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AD1 JUMPI PUSH2 0x1AD0 PUSH2 0x1A59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ADF DUP5 DUP3 DUP6 ADD PUSH2 0x1AA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AFD DUP2 PUSH2 0x1AE8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B18 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B58 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B3D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B80 DUP3 PUSH2 0x1B1E JUMP JUMPDEST PUSH2 0x1B8A DUP2 DUP6 PUSH2 0x1B29 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B9A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B3A JUMP JUMPDEST PUSH2 0x1BA3 DUP2 PUSH2 0x1B64 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BC8 DUP2 DUP5 PUSH2 0x1B75 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BE3 DUP2 PUSH2 0x1BD0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C00 DUP2 PUSH2 0x1BDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C1C JUMPI PUSH2 0x1C1B PUSH2 0x1A59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C2A DUP5 DUP3 DUP6 ADD PUSH2 0x1BF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5E DUP3 PUSH2 0x1C33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C6E DUP2 PUSH2 0x1C53 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C89 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C98 DUP2 PUSH2 0x1C53 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CB5 DUP2 PUSH2 0x1C8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CD2 JUMPI PUSH2 0x1CD1 PUSH2 0x1A59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CE0 DUP6 DUP3 DUP7 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CF1 DUP6 DUP3 DUP7 ADD PUSH2 0x1BF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D14 JUMPI PUSH2 0x1D13 PUSH2 0x1A59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D22 DUP7 DUP3 DUP8 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D33 DUP7 DUP3 DUP8 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D44 DUP7 DUP3 DUP8 ADD PUSH2 0x1BF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D64 JUMPI PUSH2 0x1D63 PUSH2 0x1A59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D72 DUP5 DUP3 DUP6 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D84 DUP2 PUSH2 0x1BD0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D9F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DAE DUP2 PUSH2 0x1AE8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DCB DUP2 PUSH2 0x1DA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DE8 JUMPI PUSH2 0x1DE7 PUSH2 0x1A59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DF6 DUP6 DUP3 DUP7 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E07 DUP6 DUP3 DUP7 ADD PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1E53 DUP3 PUSH2 0x1B64 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E72 JUMPI PUSH2 0x1E71 PUSH2 0x1E1B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E85 PUSH2 0x1A4F JUMP JUMPDEST SWAP1 POP PUSH2 0x1E91 DUP3 DUP3 PUSH2 0x1E4A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EB1 JUMPI PUSH2 0x1EB0 PUSH2 0x1E1B JUMP JUMPDEST JUMPDEST PUSH2 0x1EBA DUP3 PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE9 PUSH2 0x1EE4 DUP5 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0x1E7B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1F05 JUMPI PUSH2 0x1F04 PUSH2 0x1E16 JUMP JUMPDEST JUMPDEST PUSH2 0x1F10 DUP5 DUP3 DUP6 PUSH2 0x1EC7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F2D JUMPI PUSH2 0x1F2C PUSH2 0x1E11 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F3D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1ED6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F60 JUMPI PUSH2 0x1F5F PUSH2 0x1A59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F6E DUP8 DUP3 DUP9 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1F7F DUP8 DUP3 DUP9 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1F90 DUP8 DUP3 DUP9 ADD PUSH2 0x1BF1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FB1 JUMPI PUSH2 0x1FB0 PUSH2 0x1A5E JUMP JUMPDEST JUMPDEST PUSH2 0x1FBD DUP8 DUP3 DUP9 ADD PUSH2 0x1F18 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FE4 JUMPI PUSH2 0x1FE3 PUSH2 0x1E1B JUMP JUMPDEST JUMPDEST PUSH2 0x1FED DUP3 PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200D PUSH2 0x2008 DUP5 PUSH2 0x1FC9 JUMP JUMPDEST PUSH2 0x1E7B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2029 JUMPI PUSH2 0x2028 PUSH2 0x1E16 JUMP JUMPDEST JUMPDEST PUSH2 0x2034 DUP5 DUP3 DUP6 PUSH2 0x1EC7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2051 JUMPI PUSH2 0x2050 PUSH2 0x1E11 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2061 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2083 JUMPI PUSH2 0x2082 PUSH2 0x1A59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2091 DUP7 DUP3 DUP8 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x20A2 DUP7 DUP3 DUP8 ADD PUSH2 0x1BF1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20C3 JUMPI PUSH2 0x20C2 PUSH2 0x1A5E JUMP JUMPDEST JUMPDEST PUSH2 0x20CF DUP7 DUP3 DUP8 ADD PUSH2 0x203C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20F0 JUMPI PUSH2 0x20EF PUSH2 0x1A59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20FE DUP6 DUP3 DUP7 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x210F DUP6 DUP3 DUP7 ADD PUSH2 0x1CA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2160 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2173 JUMPI PUSH2 0x2172 PUSH2 0x2119 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x218E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0x219B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D7B JUMP JUMPDEST PUSH2 0x21A8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C65 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21D7 DUP3 PUSH2 0x21B0 JUMP JUMPDEST PUSH2 0x21E1 DUP2 DUP6 PUSH2 0x21BB JUMP JUMPDEST SWAP4 POP PUSH2 0x21F1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B3A JUMP JUMPDEST PUSH2 0x21FA DUP2 PUSH2 0x1B64 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x221A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0x2227 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0x2234 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D7B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2246 DUP2 DUP5 PUSH2 0x21CC JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2260 DUP2 PUSH2 0x1A8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x227C JUMPI PUSH2 0x227B PUSH2 0x1A59 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x228A DUP5 DUP3 DUP6 ADD PUSH2 0x2251 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22A9 DUP3 PUSH2 0x1B1E JUMP JUMPDEST PUSH2 0x22B3 DUP2 DUP6 PUSH2 0x2293 JUMP JUMPDEST SWAP4 POP PUSH2 0x22C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B3A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22DB DUP3 DUP6 PUSH2 0x229E JUMP JUMPDEST SWAP2 POP PUSH2 0x22E7 DUP3 DUP5 PUSH2 0x229E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2355 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2318 JUMP JUMPDEST PUSH2 0x235F DUP7 DUP4 PUSH2 0x2318 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239C PUSH2 0x2397 PUSH2 0x2392 DUP5 PUSH2 0x1BD0 JUMP JUMPDEST PUSH2 0x2377 JUMP JUMPDEST PUSH2 0x1BD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23B6 DUP4 PUSH2 0x2381 JUMP JUMPDEST PUSH2 0x23CA PUSH2 0x23C2 DUP3 PUSH2 0x23A3 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2325 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x23DF PUSH2 0x23D2 JUMP JUMPDEST PUSH2 0x23EA DUP2 DUP5 DUP5 PUSH2 0x23AD JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x240E JUMPI PUSH2 0x2403 PUSH1 0x0 DUP3 PUSH2 0x23D7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x23F0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2453 JUMPI PUSH2 0x2424 DUP2 PUSH2 0x22F3 JUMP JUMPDEST PUSH2 0x242D DUP5 PUSH2 0x2308 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x243C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2450 PUSH2 0x2448 DUP6 PUSH2 0x2308 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x23EF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2476 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2458 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248F DUP4 DUP4 PUSH2 0x2465 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24A8 DUP3 PUSH2 0x1B1E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24C1 JUMPI PUSH2 0x24C0 PUSH2 0x1E1B JUMP JUMPDEST JUMPDEST PUSH2 0x24CB DUP3 SLOAD PUSH2 0x2148 JUMP JUMPDEST PUSH2 0x24D6 DUP3 DUP3 DUP6 PUSH2 0x2412 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2509 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x24F7 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2501 DUP6 DUP3 PUSH2 0x2483 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2569 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2517 DUP7 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x253F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x251A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x255C JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2558 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2465 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2586 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0x2593 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D7B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB MULMOD 0xCC 0x4A MSTORE 0xC6 0xF PUSH2 0x8203 LOG3 LOG2 0xE6 0xAF PUSH26 0xB2389F2AD9F025F261E62A09FD1A583F4B64736F6C6343000813 STOP CALLER ",
							"sourceMap": "305:865:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;955:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2364:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3496:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3322:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4142:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4786:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2184:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1919:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2292:101:0;;;:::i;:::-;;1637:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2517:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3717:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4984:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;751:196:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;489:184;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3927:153:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2542:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;955:212:16;1094:4;1123:36;1147:11;1123:23;:36::i;:::-;1116:43;;955:212;;;:::o;2364:89:5:-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;;3622:21;3635:7;3622:12;:21::i;:::-;3615:28;;3496:154;;;:::o;3322:113::-;3393:35;3402:2;3406:7;3415:12;:10;:12::i;:::-;3393:8;:35::i;:::-;3322:113;;:::o;4142:578::-;4250:1;4236:16;;:2;:16;;;4232:87;;4305:1;4275:33;;;;;;;;;;;:::i;:::-;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;4582:12;:10;:12::i;:::-;4561:7;:34::i;:::-;4537:58;;4626:4;4609:21;;:13;:21;;;4605:109;;4674:4;4680:7;4689:13;4653:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4605:109;4222:498;4142:578;;;:::o;4786:132::-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;2184:118::-;2247:7;2273:22;2287:7;2273:13;:22::i;:::-;2266:29;;2184:118;;;:::o;1919:208::-;1982:7;2022:1;2005:19;;:5;:19;;;2001:87;;2074:1;2047:30;;;;;;;;;;;:::i;:::-;;;;;;;;2001:87;2104:9;:16;2114:5;2104:16;;;;;;;;;;;;;;;;2097:23;;1919:208;;;:::o;2292:101:0:-;1530:13;:11;:13::i;:::-;2356:30:::1;2383:1;2356:18;:30::i;:::-;2292:101::o:0;1637:85::-;1683:7;1709:6;;;;;;;;;;;1702:13;;1637:85;:::o;2517:93:5:-;2564:13;2596:7;2589:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2517:93;:::o;3717:144::-;3802:52;3821:12;:10;:12::i;:::-;3835:8;3845;3802:18;:52::i;:::-;3717:144;;:::o;4984:208::-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:47;5161:4;5167:2;5171:7;5180:4;5138:22;:47::i;:::-;4984:208;;;;:::o;751:196:16:-;878:13;916:23;931:7;916:14;:23::i;:::-;909:30;;751:196;;;:::o;489:184::-;1530:13:0;:11;:13::i;:::-;606:22:16::1;616:2;620:7;606:9;:22::i;:::-;639:26;652:7;661:3;639:12;:26::i;:::-;489:184:::0;;;:::o;3927:153:5:-;4015:4;4038:18;:25;4057:5;4038:25;;;;;;;;;;;;;;;:35;4064:8;4038:35;;;;;;;;;;;;;;;;;;;;;;;;;4031:42;;3927:153;;;;:::o;2542:215:0:-;1530:13;:11;:13::i;:::-;2646:1:::1;2626:22;;:8;:22;;::::0;2622:91:::1;;2699:1;2671:31;;;;;;;;;;;:::i;:::-;;;;;;;;2622:91;2722:28;2741:8;2722:18;:28::i;:::-;2542:215:::0;:::o;936:207:8:-;1038:4;759:10;752:18;;1061:35;;;:11;:35;;;;:75;;;;1100:36;1124:11;1100:23;:36::i;:::-;1061:75;1054:82;;936:207;;;:::o;16137:241:5:-;16200:7;16219:13;16235:17;16244:7;16235:8;:17::i;:::-;16219:33;;16283:1;16266:19;;:5;:19;;;16262:88;;16331:7;16308:31;;;;;;;;;;;:::i;:::-;;;;;;;;16262:88;16366:5;16359:12;;;16137:241;;;:::o;5937:127::-;6007:7;6033:15;:24;6049:7;6033:24;;;;;;;;;;;;;;;;;;;;;6026:31;;5937:127;;;:::o;655:96:10:-;708:7;734:10;727:17;;655:96;:::o;14417:120:5:-;14497:33;14506:2;14510:7;14519:4;14525;14497:8;:33::i;:::-;14417:120;;;:::o;8837:795::-;8923:7;8942:12;8957:17;8966:7;8957:8;:17::i;:::-;8942:32;;9050:1;9034:18;;:4;:18;;;9030:86;;9068:37;9085:4;9091;9097:7;9068:16;:37::i;:::-;9030:86;9176:1;9160:18;;:4;:18;;;9156:256;;9276:48;9293:1;9297:7;9314:1;9318:5;9276:8;:48::i;:::-;9386:1;9367:9;:15;9377:4;9367:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9156:256;9440:1;9426:16;;:2;:16;;;9422:107;;9503:1;9486:9;:13;9496:2;9486:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9422:107;9558:2;9539:7;:16;9547:7;9539:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9595:7;9591:2;9576:27;;9585:4;9576:27;;;;;;;;;;;;9621:4;9614:11;;;8837:795;;;;;:::o;1795:162:0:-;1865:12;:10;:12::i;:::-;1854:23;;:7;:5;:7::i;:::-;:23;;;1850:101;;1927:12;:10;:12::i;:::-;1900:40;;;;;;;;;;;:::i;:::-;;;;;;;;1850:101;1795:162::o;2911:187::-;2984:16;3003:6;;;;;;;;;;;2984:25;;3028:8;3019:6;;:17;;;;;;;;;;;;;;;;;;3082:8;3051:40;;3072:8;3051:40;;;;;;;;;;;;2974:124;2911:187;:::o;15590:312:5:-;15717:1;15697:22;;:8;:22;;;15693:91;;15764:8;15742:31;;;;;;;;;;;:::i;:::-;;;;;;;;15693:91;15831:8;15793:18;:25;15812:5;15793:25;;;;;;;;;;;;;;;:35;15819:8;15793:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15876:8;15854:41;;15869:5;15854:41;;;15886:8;15854:41;;;;;;:::i;:::-;;;;;;;;15590:312;;;:::o;16917:782::-;17050:1;17033:2;:14;;;:18;17029:664;;;17087:2;17071:36;;;17108:12;:10;:12::i;:::-;17122:4;17128:7;17137:4;17071:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17067:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17397:1;17380:6;:13;:18;17376:293;;17451:2;17429:25;;;;;;;;;;;:::i;:::-;;;;;;;;17376:293;17621:6;17615:13;17606:6;17602:2;17598:15;17591:38;17067:616;17199:41;;;17189:51;;;:6;:51;;;;17185:130;;17293:2;17271:25;;;;;;;;;;;:::i;:::-;;;;;;;;17185:130;17143:186;17029:664;16917:782;;;;:::o;1209:593:8:-;1282:13;1307:22;1321:7;1307:13;:22::i;:::-;;1340:23;1366:10;:19;1377:7;1366:19;;;;;;;;;;;1340:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1395:18;1416:10;:8;:10::i;:::-;1395:31;;1521:1;1505:4;1499:18;:23;1495:70;;1545:9;1538:16;;;;;;1495:70;1690:1;1670:9;1664:23;:27;1660:95;;;1728:4;1734:9;1714:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1707:37;;;;;;1660:95;1772:23;1787:7;1772:14;:23::i;:::-;1765:30;;;;1209:593;;;;:::o;10632:100:5:-;10699:26;10709:2;10713:7;10699:26;;;;;;;;;;;;:9;:26::i;:::-;10632:100;;:::o;1921:167:8:-;2034:9;2012:10;:19;2023:7;2012:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2058:23;2073:7;2058:23;;;;;;:::i;:::-;;;;;;;;1921:167;;:::o;1560:300:5:-;1662:4;1712:25;1697:40;;;:11;:40;;;;:104;;;;1768:33;1753:48;;;:11;:48;;;;1697:104;:156;;;;1817:36;1841:11;1817:23;:36::i;:::-;1697:156;1678:175;;1560:300;;;:::o;5706:115::-;5772:7;5798;:16;5806:7;5798:16;;;;;;;;;;;;;;;;;;;;;5791:23;;5706:115;;;:::o;14719:662::-;14879:9;:31;;;;14908:1;14892:18;;:4;:18;;;;14879:31;14875:460;;;14926:13;14942:22;14956:7;14942:13;:22::i;:::-;14926:38;;15108:1;15092:18;;:4;:18;;;;:35;;;;;15123:4;15114:13;;:5;:13;;;;15092:35;:69;;;;;15132:29;15149:5;15156:4;15132:16;:29::i;:::-;15131:30;15092:69;15088:142;;;15210:4;15188:27;;;;;;;;;;;:::i;:::-;;;;;;;;15088:142;15248:9;15244:81;;;15302:7;15298:2;15282:28;;15291:5;15282:28;;;;;;;;;;;;15244:81;14912:423;14875:460;15372:2;15345:15;:24;15361:7;15345:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14719:662;;;;:::o;7081:368::-;7193:38;7207:5;7214:7;7223;7193:13;:38::i;:::-;7188:255;;7268:1;7251:19;;:5;:19;;;7247:186;;7320:7;7297:31;;;;;;;;;;;:::i;:::-;;;;;;;;7247:186;7401:7;7410;7374:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7188:255;7081:368;;;:::o;3173:92::-;3224:13;3249:9;;;;;;;;;;;;;;3173:92;:::o;2676:255::-;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;:8;:10::i;:::-;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;;;2676:255;;;:::o;10953:182::-;11047:18;11053:2;11057:7;11047:5;:18::i;:::-;11075:53;11106:1;11110:2;11114:7;11123:4;11075:22;:53::i;:::-;10953:182;;;:::o;761:146:12:-;837:4;875:25;860:40;;;:11;:40;;;;853:47;;761:146;;;:::o;6375:272:5:-;6478:4;6532:1;6513:21;;:7;:21;;;;:127;;;;;6560:7;6551:16;;:5;:16;;;:52;;;;6571:32;6588:5;6595:7;6571:16;:32::i;:::-;6551:52;:88;;;;6632:7;6607:32;;:21;6620:7;6607:12;:21::i;:::-;:32;;;6551:88;6513:127;6494:146;;6375:272;;;;;:::o;636:698:11:-;692:13;741:14;778:1;758:17;769:5;758:10;:17::i;:::-;:21;741:38;;793:20;827:6;816:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;793:41;;848:11;974:6;970:2;966:15;958:6;954:28;947:35;;1009:282;1016:4;1009:282;;;1040:5;;;;;;;;1179:10;1174:2;1167:5;1163:14;1158:32;1153:3;1145:46;1235:2;1226:11;;;;;;:::i;:::-;;;;;1268:1;1259:5;:10;1009:282;1255:21;1009:282;1311:6;1304:13;;;;;636:698;;;:::o;9954:327:5:-;10035:1;10021:16;;:2;:16;;;10017:87;;10090:1;10060:33;;;;;;;;;;;:::i;:::-;;;;;;;;10017:87;10113:21;10137:32;10145:2;10149:7;10166:1;10137:7;:32::i;:::-;10113:56;;10208:1;10183:27;;:13;:27;;;10179:96;;10261:1;10233:31;;;;;;;;;;;:::i;:::-;;;;;;;;10179:96;10007:274;9954:327;;:::o;12213:916:14:-;12266:7;12285:14;12302:1;12285:18;;12350:8;12341:5;:17;12337:103;;12387:8;12378:17;;;;;;:::i;:::-;;;;;12423:2;12413:12;;;;12337:103;12466:8;12457:5;:17;12453:103;;12503:8;12494:17;;;;;;:::i;:::-;;;;;12539:2;12529:12;;;;12453:103;12582:8;12573:5;:17;12569:103;;12619:8;12610:17;;;;;;:::i;:::-;;;;;12655:2;12645:12;;;;12569:103;12698:7;12689:5;:16;12685:100;;12734:7;12725:16;;;;;;:::i;:::-;;;;;12769:1;12759:11;;;;12685:100;12811:7;12802:5;:16;12798:100;;12847:7;12838:16;;;;;;:::i;:::-;;;;;12882:1;12872:11;;;;12798:100;12924:7;12915:5;:16;12911:100;;12960:7;12951:16;;;;;;:::i;:::-;;;;;12995:1;12985:11;;;;12911:100;13037:7;13028:5;:16;13024:66;;13074:1;13064:11;;;;13024:66;13116:6;13109:13;;;12213:916;;;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:308::-;10053:4;10143:18;10135:6;10132:30;10129:56;;;10165:18;;:::i;:::-;10129:56;10203:29;10225:6;10203:29;:::i;:::-;10195:37;;10287:4;10281;10277:15;10269:23;;9991:308;;;:::o;10305:425::-;10383:5;10408:66;10424:49;10466:6;10424:49;:::i;:::-;10408:66;:::i;:::-;10399:75;;10497:6;10490:5;10483:21;10535:4;10528:5;10524:16;10573:3;10564:6;10559:3;10555:16;10552:25;10549:112;;;10580:79;;:::i;:::-;10549:112;10670:54;10717:6;10712:3;10707;10670:54;:::i;:::-;10389:341;10305:425;;;;;:::o;10750:340::-;10806:5;10855:3;10848:4;10840:6;10836:17;10832:27;10822:122;;10863:79;;:::i;:::-;10822:122;10980:6;10967:20;11005:79;11080:3;11072:6;11065:4;11057:6;11053:17;11005:79;:::i;:::-;10996:88;;10812:278;10750:340;;;;:::o;11096:799::-;11183:6;11191;11199;11248:2;11236:9;11227:7;11223:23;11219:32;11216:119;;;11254:79;;:::i;:::-;11216:119;11374:1;11399:53;11444:7;11435:6;11424:9;11420:22;11399:53;:::i;:::-;11389:63;;11345:117;11501:2;11527:53;11572:7;11563:6;11552:9;11548:22;11527:53;:::i;:::-;11517:63;;11472:118;11657:2;11646:9;11642:18;11629:32;11688:18;11680:6;11677:30;11674:117;;;11710:79;;:::i;:::-;11674:117;11815:63;11870:7;11861:6;11850:9;11846:22;11815:63;:::i;:::-;11805:73;;11600:288;11096:799;;;;;:::o;11901:474::-;11969:6;11977;12026:2;12014:9;12005:7;12001:23;11997:32;11994:119;;;12032:79;;:::i;:::-;11994:119;12152:1;12177:53;12222:7;12213:6;12202:9;12198:22;12177:53;:::i;:::-;12167:63;;12123:117;12279:2;12305:53;12350:7;12341:6;12330:9;12326:22;12305:53;:::i;:::-;12295:63;;12250:118;11901:474;;;;;:::o;12381:180::-;12429:77;12426:1;12419:88;12526:4;12523:1;12516:15;12550:4;12547:1;12540:15;12567:320;12611:6;12648:1;12642:4;12638:12;12628:22;;12695:1;12689:4;12685:12;12716:18;12706:81;;12772:4;12764:6;12760:17;12750:27;;12706:81;12834:2;12826:6;12823:14;12803:18;12800:38;12797:84;;12853:18;;:::i;:::-;12797:84;12618:269;12567:320;;;:::o;12893:442::-;13042:4;13080:2;13069:9;13065:18;13057:26;;13093:71;13161:1;13150:9;13146:17;13137:6;13093:71;:::i;:::-;13174:72;13242:2;13231:9;13227:18;13218:6;13174:72;:::i;:::-;13256;13324:2;13313:9;13309:18;13300:6;13256:72;:::i;:::-;12893:442;;;;;;:::o;13341:98::-;13392:6;13426:5;13420:12;13410:22;;13341:98;;;:::o;13445:168::-;13528:11;13562:6;13557:3;13550:19;13602:4;13597:3;13593:14;13578:29;;13445:168;;;;:::o;13619:373::-;13705:3;13733:38;13765:5;13733:38;:::i;:::-;13787:70;13850:6;13845:3;13787:70;:::i;:::-;13780:77;;13866:65;13924:6;13919:3;13912:4;13905:5;13901:16;13866:65;:::i;:::-;13956:29;13978:6;13956:29;:::i;:::-;13951:3;13947:39;13940:46;;13709:283;13619:373;;;;:::o;13998:640::-;14193:4;14231:3;14220:9;14216:19;14208:27;;14245:71;14313:1;14302:9;14298:17;14289:6;14245:71;:::i;:::-;14326:72;14394:2;14383:9;14379:18;14370:6;14326:72;:::i;:::-;14408;14476:2;14465:9;14461:18;14452:6;14408:72;:::i;:::-;14527:9;14521:4;14517:20;14512:2;14501:9;14497:18;14490:48;14555:76;14626:4;14617:6;14555:76;:::i;:::-;14547:84;;13998:640;;;;;;;:::o;14644:141::-;14700:5;14731:6;14725:13;14716:22;;14747:32;14773:5;14747:32;:::i;:::-;14644:141;;;;:::o;14791:349::-;14860:6;14909:2;14897:9;14888:7;14884:23;14880:32;14877:119;;;14915:79;;:::i;:::-;14877:119;15035:1;15060:63;15115:7;15106:6;15095:9;15091:22;15060:63;:::i;:::-;15050:73;;15006:127;14791:349;;;;:::o;15146:148::-;15248:11;15285:3;15270:18;;15146:148;;;;:::o;15300:390::-;15406:3;15434:39;15467:5;15434:39;:::i;:::-;15489:89;15571:6;15566:3;15489:89;:::i;:::-;15482:96;;15587:65;15645:6;15640:3;15633:4;15626:5;15622:16;15587:65;:::i;:::-;15677:6;15672:3;15668:16;15661:23;;15410:280;15300:390;;;;:::o;15696:435::-;15876:3;15898:95;15989:3;15980:6;15898:95;:::i;:::-;15891:102;;16010:95;16101:3;16092:6;16010:95;:::i;:::-;16003:102;;16122:3;16115:10;;15696:435;;;;;:::o;16137:141::-;16186:4;16209:3;16201:11;;16232:3;16229:1;16222:14;16266:4;16263:1;16253:18;16245:26;;16137:141;;;:::o;16284:93::-;16321:6;16368:2;16363;16356:5;16352:14;16348:23;16338:33;;16284:93;;;:::o;16383:107::-;16427:8;16477:5;16471:4;16467:16;16446:37;;16383:107;;;;:::o;16496:393::-;16565:6;16615:1;16603:10;16599:18;16638:97;16668:66;16657:9;16638:97;:::i;:::-;16756:39;16786:8;16775:9;16756:39;:::i;:::-;16744:51;;16828:4;16824:9;16817:5;16813:21;16804:30;;16877:4;16867:8;16863:19;16856:5;16853:30;16843:40;;16572:317;;16496:393;;;;;:::o;16895:60::-;16923:3;16944:5;16937:12;;16895:60;;;:::o;16961:142::-;17011:9;17044:53;17062:34;17071:24;17089:5;17071:24;:::i;:::-;17062:34;:::i;:::-;17044:53;:::i;:::-;17031:66;;16961:142;;;:::o;17109:75::-;17152:3;17173:5;17166:12;;17109:75;;;:::o;17190:269::-;17300:39;17331:7;17300:39;:::i;:::-;17361:91;17410:41;17434:16;17410:41;:::i;:::-;17402:6;17395:4;17389:11;17361:91;:::i;:::-;17355:4;17348:105;17266:193;17190:269;;;:::o;17465:73::-;17510:3;17465:73;:::o;17544:189::-;17621:32;;:::i;:::-;17662:65;17720:6;17712;17706:4;17662:65;:::i;:::-;17597:136;17544:189;;:::o;17739:186::-;17799:120;17816:3;17809:5;17806:14;17799:120;;;17870:39;17907:1;17900:5;17870:39;:::i;:::-;17843:1;17836:5;17832:13;17823:22;;17799:120;;;17739:186;;:::o;17931:543::-;18032:2;18027:3;18024:11;18021:446;;;18066:38;18098:5;18066:38;:::i;:::-;18150:29;18168:10;18150:29;:::i;:::-;18140:8;18136:44;18333:2;18321:10;18318:18;18315:49;;;18354:8;18339:23;;18315:49;18377:80;18433:22;18451:3;18433:22;:::i;:::-;18423:8;18419:37;18406:11;18377:80;:::i;:::-;18036:431;;18021:446;17931:543;;;:::o;18480:117::-;18534:8;18584:5;18578:4;18574:16;18553:37;;18480:117;;;;:::o;18603:169::-;18647:6;18680:51;18728:1;18724:6;18716:5;18713:1;18709:13;18680:51;:::i;:::-;18676:56;18761:4;18755;18751:15;18741:25;;18654:118;18603:169;;;;:::o;18777:295::-;18853:4;18999:29;19024:3;19018:4;18999:29;:::i;:::-;18991:37;;19061:3;19058:1;19054:11;19048:4;19045:21;19037:29;;18777:295;;;;:::o;19077:1395::-;19194:37;19227:3;19194:37;:::i;:::-;19296:18;19288:6;19285:30;19282:56;;;19318:18;;:::i;:::-;19282:56;19362:38;19394:4;19388:11;19362:38;:::i;:::-;19447:67;19507:6;19499;19493:4;19447:67;:::i;:::-;19541:1;19565:4;19552:17;;19597:2;19589:6;19586:14;19614:1;19609:618;;;;20271:1;20288:6;20285:77;;;20337:9;20332:3;20328:19;20322:26;20313:35;;20285:77;20388:67;20448:6;20441:5;20388:67;:::i;:::-;20382:4;20375:81;20244:222;19579:887;;19609:618;19661:4;19657:9;19649:6;19645:22;19695:37;19727:4;19695:37;:::i;:::-;19754:1;19768:208;19782:7;19779:1;19776:14;19768:208;;;19861:9;19856:3;19852:19;19846:26;19838:6;19831:42;19912:1;19904:6;19900:14;19890:24;;19959:2;19948:9;19944:18;19931:31;;19805:4;19802:1;19798:12;19793:17;;19768:208;;;20004:6;19995:7;19992:19;19989:179;;;20062:9;20057:3;20053:19;20047:26;20105:48;20147:4;20139:6;20135:17;20124:9;20105:48;:::i;:::-;20097:6;20090:64;20012:156;19989:179;20214:1;20210;20202:6;20198:14;20194:22;20188:4;20181:36;19616:611;;;19579:887;;19169:1303;;;19077:1395;;:::o;20478:332::-;20599:4;20637:2;20626:9;20622:18;20614:26;;20650:71;20718:1;20707:9;20703:17;20694:6;20650:71;:::i;:::-;20731:72;20799:2;20788:9;20784:18;20775:6;20731:72;:::i;:::-;20478:332;;;;;:::o;20816:180::-;20864:77;20861:1;20854:88;20961:4;20958:1;20951:15;20985:4;20982:1;20975:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1945400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"owner()": "2567",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeMint(address,uint256,string)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "935",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 305,
									"end": 1170,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 305,
									"end": 1170,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 305,
									"end": 1170,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "CALLVALUE",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 370,
									"end": 481,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 481,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 370,
									"end": 481,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 370,
									"end": 481,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "PUSHSIZE",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "CODESIZE",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "PUSHSIZE",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 370,
									"end": 481,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 370,
									"end": 481,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 370,
									"end": 481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 370,
									"end": 481,
									"name": "tag",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 370,
									"end": 481,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 460,
									"end": 472,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 5,
									"value": "4D616C6C7543727970746F000000000000000000000000000000000000000000"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "PUSH",
									"source": 5,
									"value": "4D4E465400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1454,
									"end": 1459,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1446,
									"end": 1451,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1446,
									"end": 1459,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1446,
									"end": 1459,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1469,
									"end": 1476,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1469,
									"end": 1486,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1469,
									"end": 1486,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1469,
									"end": 1486,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1469,
									"end": 1486,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1469,
									"end": 1486,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1469,
									"end": 1486,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1469,
									"end": 1486,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1469,
									"end": 1486,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1469,
									"end": 1486,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1469,
									"end": 1486,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1380,
									"end": 1493,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1272,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1272,
									"end": 1298,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1272,
									"end": 1284,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1272,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1272,
									"end": 1298,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1272,
									"end": 1298,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1268,
									"end": 1363,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1268,
									"end": 1363,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1350,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1321,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1268,
									"end": 1363,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1268,
									"end": 1363,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1372,
									"end": 1404,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1391,
									"end": 1403,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1372,
									"end": 1390,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1372,
									"end": 1390,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1372,
									"end": 1390,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1372,
									"end": 1404,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1372,
									"end": 1404,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1372,
									"end": 1404,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1372,
									"end": 1404,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1372,
									"end": 1404,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1224,
									"end": 1411,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 370,
									"end": 481,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 305,
									"end": 1170,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 305,
									"end": 1170,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2911,
									"end": 3098,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2911,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2984,
									"end": 3000,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2984,
									"end": 3009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2984,
									"end": 3009,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3028,
									"end": 3036,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3025,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3019,
									"end": 3025,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3082,
									"end": 3090,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3072,
									"end": 3080,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2974,
									"end": 3098,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2911,
									"end": 3098,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2911,
									"end": 3098,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "54"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 17,
									"value": "54"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "56"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 17,
									"value": "56"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 17,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "59"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 17,
									"value": "59"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "61"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "62"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 17,
									"value": "62"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 17,
									"value": "61"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "63"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 17,
									"value": "63"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 17,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 17,
									"value": "28"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 17,
									"value": "29"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 17,
									"value": "30"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 17
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "68"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 17,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 17,
									"value": "68"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "69"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "70"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "29"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 17,
									"value": "70"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 17,
									"value": "69"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 17,
									"value": "31"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 17
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 17
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 17,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "75"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 17,
									"value": "75"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "76"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 17,
									"value": "76"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 17
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 17,
									"value": "35"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 17,
									"value": "36"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "81"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "82"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "35"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 17,
									"value": "82"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "36"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 17,
									"value": "81"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "35"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 17,
									"value": "38"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "85"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 17,
									"value": "85"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "86"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "87"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "38"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 17,
									"value": "87"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 17,
									"value": "86"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "90"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 17,
									"value": "90"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "91"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 17,
									"value": "91"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 17,
									"value": "42"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 17,
									"value": "93"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "96"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 17,
									"value": "96"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "93"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 17,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 17,
									"value": "43"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "98"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "99"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "31"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 17,
									"value": "99"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 17,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "102"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "103"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 17,
									"value": "103"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "42"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 17,
									"value": "102"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 17,
									"value": "98"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 17,
									"value": "45"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "106"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 17,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 17,
									"value": "106"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 17,
									"value": "46"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "108"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "45"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 17,
									"value": "108"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 17,
									"value": "9"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "110"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "27"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 17,
									"value": "110"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "111"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "112"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "28"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 17,
									"value": "112"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 17,
									"value": "111"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "113"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "30"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 17,
									"value": "113"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "114"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "43"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 17,
									"value": "114"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "116"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "117"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 17,
									"value": "117"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "118"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "46"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 17,
									"value": "118"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "115"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 17,
									"value": "116"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "119"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "31"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 17,
									"value": "119"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 17,
									"value": "120"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 17
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "120"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 17,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "123"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 17
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "124"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 17
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "45"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 17,
									"value": "124"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 17,
									"value": "123"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 17,
									"value": "115"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 17,
									"value": "47"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "126"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 17,
									"value": "126"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 17,
									"value": "14"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "128"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "47"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 17,
									"value": "128"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 305,
									"end": 1170,
									"name": "tag",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 305,
									"end": 1170,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 305,
									"end": 1170,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 305,
									"end": 1170,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 305,
									"end": 1170,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 305,
									"end": 1170,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 1170,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 305,
									"end": 1170,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 1170,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cb09cc4a52c60f618203a3a2e6af79b2389f2ad9f025f261e62a09fd1a583f4b64736f6c63430008130033",
									".code": [
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "tag",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "715018A6"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "B88D4FDE"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "B88D4FDE"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "C87B56DD"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "CD279C7C"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "E985E9C5"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "F2FDE38B"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "tag",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "715018A6"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "8DA5CB5B"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "95D89B41"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "A22CB465"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "tag",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "23B872DD"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "23B872DD"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "42842E0E"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "6352211E"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "70A08231"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "tag",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "1FFC9A7"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "6FDDE03"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "81812FC"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "95EA7B3"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "tag",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 305,
											"end": 1170,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "tag",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 955,
											"end": 1167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "tag",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 955,
											"end": 1167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "tag",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 955,
											"end": 1167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "tag",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2364,
											"end": 2453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2364,
											"end": 2453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3496,
											"end": 3650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3496,
											"end": 3650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3496,
											"end": 3650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3322,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3322,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4142,
											"end": 4720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4142,
											"end": 4720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4786,
											"end": 4918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4786,
											"end": 4918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2184,
											"end": 2302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2184,
											"end": 2302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2184,
											"end": 2302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1919,
											"end": 2127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1919,
											"end": 2127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1919,
											"end": 2127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2292,
											"end": 2393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1637,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1637,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2517,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2517,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 3717,
											"end": 3861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3717,
											"end": 3861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 4984,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4984,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 751,
											"end": 947,
											"name": "tag",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 751,
											"end": 947,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 751,
											"end": 947,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 751,
											"end": 947,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 751,
											"end": 947,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 751,
											"end": 947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "tag",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 751,
											"end": 947,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 751,
											"end": 947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "tag",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 751,
											"end": 947,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 947,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 751,
											"end": 947,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 751,
											"end": 947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "tag",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 751,
											"end": 947,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 947,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 489,
											"end": 673,
											"name": "tag",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 489,
											"end": 673,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 489,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 489,
											"end": 673,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 489,
											"end": 673,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 489,
											"end": 673,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 489,
											"end": 673,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 489,
											"end": 673,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 489,
											"end": 673,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 489,
											"end": 673,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 489,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "81"
										},
										{
											"begin": 489,
											"end": 673,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 489,
											"end": 673,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 489,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "82"
										},
										{
											"begin": 489,
											"end": 673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 489,
											"end": 673,
											"name": "tag",
											"source": 16,
											"value": "81"
										},
										{
											"begin": 489,
											"end": 673,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 489,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "83"
										},
										{
											"begin": 489,
											"end": 673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 489,
											"end": 673,
											"name": "tag",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 489,
											"end": 673,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 489,
											"end": 673,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3927,
											"end": 4080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3927,
											"end": 4080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3927,
											"end": 4080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2542,
											"end": 2757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2542,
											"end": 2757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "tag",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1094,
											"end": 1098,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "93"
										},
										{
											"begin": 1147,
											"end": 1158,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1123,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "94"
										},
										{
											"begin": 1123,
											"end": 1159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1123,
											"end": 1159,
											"name": "tag",
											"source": 16,
											"value": "93"
										},
										{
											"begin": 1123,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1116,
											"end": 1159,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1116,
											"end": 1159,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 955,
											"end": 1167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2409,
											"end": 2422,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2441,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2434,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2434,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2453,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3563,
											"end": 3570,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3582,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3582,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3582,
											"end": 3604,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3582,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3582,
											"end": 3604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3622,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3635,
											"end": 3642,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3622,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3622,
											"end": 3643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3622,
											"end": 3643,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3622,
											"end": 3643,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3643,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3393,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3402,
											"end": 3404,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3406,
											"end": 3413,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3415,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3415,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3415,
											"end": 3427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3415,
											"end": 3427,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3415,
											"end": 3427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3393,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3393,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3393,
											"end": 3428,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3393,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3435,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4251,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4236,
											"end": 4252,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4236,
											"end": 4252,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4236,
											"end": 4238,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4236,
											"end": 4252,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4236,
											"end": 4252,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4236,
											"end": 4252,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4232,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4232,
											"end": 4319,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4305,
											"end": 4306,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 4275,
											"end": 4308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4232,
											"end": 4319,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4232,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4537,
											"end": 4558,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4561,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4569,
											"end": 4571,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4573,
											"end": 4580,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4582,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4582,
											"end": 4592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4582,
											"end": 4594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4582,
											"end": 4594,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4582,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4561,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4561,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4561,
											"end": 4595,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4561,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4537,
											"end": 4595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4537,
											"end": 4595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4626,
											"end": 4630,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4609,
											"end": 4630,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4609,
											"end": 4630,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4609,
											"end": 4630,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4609,
											"end": 4630,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4609,
											"end": 4630,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4605,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 4605,
											"end": 4714,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4674,
											"end": 4678,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4687,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4689,
											"end": 4702,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "PUSH",
											"source": 5,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 4653,
											"end": 4703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4703,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4605,
											"end": 4714,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 4605,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 4889,
											"end": 4893,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4895,
											"end": 4897,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4899,
											"end": 4906,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4872,
											"end": 4911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4786,
											"end": 4918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2254,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2287,
											"end": 2294,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2273,
											"end": 2295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2295,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2273,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2295,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2266,
											"end": 2295,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1982,
											"end": 1989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2024,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2005,
											"end": 2024,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2024,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2005,
											"end": 2024,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2024,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2001,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2001,
											"end": 2088,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "PUSH",
											"source": 5,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2047,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2077,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2001,
											"end": 2088,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2001,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2113,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2119,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2120,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1919,
											"end": 2127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1530,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1530,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2383,
											"end": 2384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2374,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2356,
											"end": 2386,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2386,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2356,
											"end": 2386,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2564,
											"end": 2577,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2596,
											"end": 2603,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2589,
											"end": 2603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2589,
											"end": 2603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2603,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2610,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3802,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3821,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3821,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3821,
											"end": 3833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3821,
											"end": 3833,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3821,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3835,
											"end": 3843,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3853,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3802,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 3802,
											"end": 3854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3802,
											"end": 3854,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3802,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5097,
											"end": 5128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 5110,
											"end": 5114,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5116,
											"end": 5118,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5120,
											"end": 5127,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 5097,
											"end": 5128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5097,
											"end": 5128,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 5097,
											"end": 5128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 5161,
											"end": 5165,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5167,
											"end": 5169,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5171,
											"end": 5178,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5184,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 5138,
											"end": 5185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5185,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 5138,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 751,
											"end": 947,
											"name": "tag",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 751,
											"end": 947,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 878,
											"end": 891,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 916,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "150"
										},
										{
											"begin": 931,
											"end": 938,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 916,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "151"
										},
										{
											"begin": 916,
											"end": 939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 916,
											"end": 939,
											"name": "tag",
											"source": 16,
											"value": "150"
										},
										{
											"begin": 916,
											"end": 939,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 909,
											"end": 939,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 909,
											"end": 939,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 751,
											"end": 947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 489,
											"end": 673,
											"name": "tag",
											"source": 16,
											"value": "83"
										},
										{
											"begin": 489,
											"end": 673,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1530,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1530,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 606,
											"end": 628,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "155"
										},
										{
											"begin": 616,
											"end": 618,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 620,
											"end": 627,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 606,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "156"
										},
										{
											"begin": 606,
											"end": 628,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 606,
											"end": 628,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "155"
										},
										{
											"begin": 606,
											"end": 628,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 639,
											"end": 665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "157"
										},
										{
											"begin": 652,
											"end": 659,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 661,
											"end": 664,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 639,
											"end": 651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "158"
										},
										{
											"begin": 639,
											"end": 665,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 639,
											"end": 665,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "157"
										},
										{
											"begin": 639,
											"end": 665,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 489,
											"end": 673,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 489,
											"end": 673,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 489,
											"end": 673,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 489,
											"end": 673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4015,
											"end": 4019,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4056,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4062,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4063,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4072,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4038,
											"end": 4073,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4031,
											"end": 4073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4031,
											"end": 4073,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 4080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1530,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1530,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2646,
											"end": 2647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2648,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2634,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2648,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2648,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2713,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2622,
											"end": 2713,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2671,
											"end": 2702,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2713,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2622,
											"end": 2713,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2741,
											"end": 2749,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2722,
											"end": 2750,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2750,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2722,
											"end": 2750,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 936,
											"end": 1143,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 936,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1038,
											"end": 1042,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH",
											"source": 8,
											"value": "49064906"
										},
										{
											"begin": 752,
											"end": 770,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 752,
											"end": 770,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1061,
											"end": 1096,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1061,
											"end": 1096,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1061,
											"end": 1096,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1061,
											"end": 1072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1061,
											"end": 1096,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1061,
											"end": 1096,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1061,
											"end": 1096,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1061,
											"end": 1096,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1061,
											"end": 1136,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1061,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 1061,
											"end": 1136,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1061,
											"end": 1136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1100,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 1124,
											"end": 1135,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1100,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 1100,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1100,
											"end": 1136,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 1100,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1061,
											"end": 1136,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 1061,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1054,
											"end": 1136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1054,
											"end": 1136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 936,
											"end": 1143,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 936,
											"end": 1143,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 936,
											"end": 1143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 936,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16137,
											"end": 16378,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 16137,
											"end": 16378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16200,
											"end": 16207,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16219,
											"end": 16232,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16235,
											"end": 16252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 16244,
											"end": 16251,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16235,
											"end": 16243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 16235,
											"end": 16252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16235,
											"end": 16252,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 16235,
											"end": 16252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16219,
											"end": 16252,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16219,
											"end": 16252,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16283,
											"end": 16284,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16266,
											"end": 16285,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16266,
											"end": 16285,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16266,
											"end": 16271,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16266,
											"end": 16285,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16266,
											"end": 16285,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16266,
											"end": 16285,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16262,
											"end": 16350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 16262,
											"end": 16350,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16331,
											"end": 16338,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16308,
											"end": 16339,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16308,
											"end": 16339,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16308,
											"end": 16339,
											"name": "PUSH",
											"source": 5,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16308,
											"end": 16339,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16308,
											"end": 16339,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16308,
											"end": 16339,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16308,
											"end": 16339,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16308,
											"end": 16339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 16308,
											"end": 16339,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16308,
											"end": 16339,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16308,
											"end": 16339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 16308,
											"end": 16339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16308,
											"end": 16339,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 16308,
											"end": 16339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16308,
											"end": 16339,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16308,
											"end": 16339,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16308,
											"end": 16339,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16308,
											"end": 16339,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16308,
											"end": 16339,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16308,
											"end": 16339,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16308,
											"end": 16339,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16262,
											"end": 16350,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 16262,
											"end": 16350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16366,
											"end": 16371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16359,
											"end": 16371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16359,
											"end": 16371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16359,
											"end": 16371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16137,
											"end": 16378,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16137,
											"end": 16378,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16137,
											"end": 16378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16137,
											"end": 16378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5937,
											"end": 6064,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 5937,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6007,
											"end": 6014,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6033,
											"end": 6048,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6033,
											"end": 6057,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6049,
											"end": 6056,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6057,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6057,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6057,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6033,
											"end": 6057,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6057,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6057,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6057,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6057,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6033,
											"end": 6057,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6057,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6033,
											"end": 6057,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6057,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6033,
											"end": 6057,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6057,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6057,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6057,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6033,
											"end": 6057,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6057,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6057,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6057,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6033,
											"end": 6057,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6026,
											"end": 6057,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6026,
											"end": 6057,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5937,
											"end": 6064,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5937,
											"end": 6064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5937,
											"end": 6064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5937,
											"end": 6064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 655,
											"end": 751,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 655,
											"end": 751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 708,
											"end": 715,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 727,
											"end": 744,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 727,
											"end": 744,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 655,
											"end": 751,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 655,
											"end": 751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14417,
											"end": 14537,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 14417,
											"end": 14537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14497,
											"end": 14530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 14506,
											"end": 14508,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14510,
											"end": 14517,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14519,
											"end": 14523,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14525,
											"end": 14529,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 14497,
											"end": 14505,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 14497,
											"end": 14530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14497,
											"end": 14530,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 14497,
											"end": 14530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14417,
											"end": 14537,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14417,
											"end": 14537,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14417,
											"end": 14537,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14417,
											"end": 14537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 9632,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 8837,
											"end": 9632,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8923,
											"end": 8930,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8954,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8957,
											"end": 8974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 8966,
											"end": 8973,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8957,
											"end": 8965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 8957,
											"end": 8974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8957,
											"end": 8974,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 8957,
											"end": 8974,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8974,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8974,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9050,
											"end": 9051,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9034,
											"end": 9052,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9034,
											"end": 9052,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9034,
											"end": 9038,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9034,
											"end": 9052,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9034,
											"end": 9052,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9034,
											"end": 9052,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9030,
											"end": 9116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 9030,
											"end": 9116,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9068,
											"end": 9105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 9085,
											"end": 9089,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9091,
											"end": 9095,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9097,
											"end": 9104,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9068,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 9068,
											"end": 9105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9068,
											"end": 9105,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 9068,
											"end": 9105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9030,
											"end": 9116,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 9030,
											"end": 9116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9176,
											"end": 9177,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9160,
											"end": 9164,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9156,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 9156,
											"end": 9412,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9276,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 9293,
											"end": 9294,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9297,
											"end": 9304,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9314,
											"end": 9315,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9318,
											"end": 9323,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9276,
											"end": 9284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 9276,
											"end": 9324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9276,
											"end": 9324,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 9276,
											"end": 9324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9386,
											"end": 9387,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9367,
											"end": 9376,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9367,
											"end": 9382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9377,
											"end": 9381,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9382,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9367,
											"end": 9382,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9382,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9367,
											"end": 9382,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9382,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9382,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9382,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9367,
											"end": 9382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9382,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9382,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9382,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9382,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9367,
											"end": 9382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9367,
											"end": 9382,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9367,
											"end": 9387,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9387,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9387,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9387,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9387,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9387,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9156,
											"end": 9412,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 9156,
											"end": 9412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9440,
											"end": 9441,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9426,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9426,
											"end": 9442,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9428,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9426,
											"end": 9442,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9442,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9422,
											"end": 9529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 9422,
											"end": 9529,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9503,
											"end": 9504,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9486,
											"end": 9495,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9486,
											"end": 9499,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9496,
											"end": 9498,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9499,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9486,
											"end": 9499,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9499,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9486,
											"end": 9499,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9499,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9499,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9499,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9486,
											"end": 9499,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9499,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9499,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9499,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9486,
											"end": 9499,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9499,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9486,
											"end": 9499,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9499,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9422,
											"end": 9529,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 9422,
											"end": 9529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9560,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9546,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9539,
											"end": 9555,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9547,
											"end": 9554,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9555,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9555,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9539,
											"end": 9555,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9555,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9555,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9539,
											"end": 9555,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9555,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9539,
											"end": 9555,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9555,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9539,
											"end": 9560,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 9539,
											"end": 9560,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9560,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9560,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9560,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9560,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9539,
											"end": 9560,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9560,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9560,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9560,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9560,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9539,
											"end": 9560,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9560,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9560,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9560,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9560,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9595,
											"end": 9602,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9591,
											"end": 9593,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9576,
											"end": 9603,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9576,
											"end": 9603,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9585,
											"end": 9589,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9576,
											"end": 9603,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9576,
											"end": 9603,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9576,
											"end": 9603,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9576,
											"end": 9603,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9576,
											"end": 9603,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9576,
											"end": 9603,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9576,
											"end": 9603,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9576,
											"end": 9603,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9576,
											"end": 9603,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9576,
											"end": 9603,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9576,
											"end": 9603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9576,
											"end": 9603,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 9621,
											"end": 9625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9614,
											"end": 9625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9614,
											"end": 9625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9614,
											"end": 9625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 9632,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 9632,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 9632,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 9632,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 9632,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 9632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1795,
											"end": 1957,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1795,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1865,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1865,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1877,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1865,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1877,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1854,
											"end": 1877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1854,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1854,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1861,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1854,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1877,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1854,
											"end": 1877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1877,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1850,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1850,
											"end": 1951,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1927,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1927,
											"end": 1939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1939,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1927,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1900,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1850,
											"end": 1951,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1850,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 3098,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2911,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 3098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 3098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 3098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15590,
											"end": 15902,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 15590,
											"end": 15902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15717,
											"end": 15718,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15697,
											"end": 15719,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15697,
											"end": 15719,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15697,
											"end": 15705,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15697,
											"end": 15719,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15697,
											"end": 15719,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15697,
											"end": 15719,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15693,
											"end": 15784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 15693,
											"end": 15784,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15764,
											"end": 15772,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15742,
											"end": 15773,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15742,
											"end": 15773,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15742,
											"end": 15773,
											"name": "PUSH",
											"source": 5,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15742,
											"end": 15773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15742,
											"end": 15773,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15742,
											"end": 15773,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15742,
											"end": 15773,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15742,
											"end": 15773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 15742,
											"end": 15773,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15742,
											"end": 15773,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15742,
											"end": 15773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 15742,
											"end": 15773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15742,
											"end": 15773,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 15742,
											"end": 15773,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15742,
											"end": 15773,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15742,
											"end": 15773,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15742,
											"end": 15773,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15742,
											"end": 15773,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15742,
											"end": 15773,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15742,
											"end": 15773,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15742,
											"end": 15773,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15693,
											"end": 15784,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 15693,
											"end": 15784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15831,
											"end": 15839,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15811,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 15793,
											"end": 15818,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15812,
											"end": 15817,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15818,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15793,
											"end": 15818,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15818,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15793,
											"end": 15818,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15818,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15818,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15818,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15793,
											"end": 15818,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15818,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15818,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15818,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15818,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15793,
											"end": 15818,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15818,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15793,
											"end": 15818,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15828,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15819,
											"end": 15827,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15828,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15793,
											"end": 15828,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15828,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15793,
											"end": 15828,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15828,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15828,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15793,
											"end": 15828,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15828,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15828,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15828,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15793,
											"end": 15828,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15828,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15793,
											"end": 15828,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15828,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15793,
											"end": 15839,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 15793,
											"end": 15839,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15839,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15839,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15839,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15839,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 15793,
											"end": 15839,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15839,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15839,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15839,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15839,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15839,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15839,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15839,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15839,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15839,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15839,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15793,
											"end": 15839,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15876,
											"end": 15884,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15854,
											"end": 15895,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15854,
											"end": 15895,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15869,
											"end": 15874,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15854,
											"end": 15895,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15854,
											"end": 15895,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15854,
											"end": 15895,
											"name": "PUSH",
											"source": 5,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15886,
											"end": 15894,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15854,
											"end": 15895,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15854,
											"end": 15895,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15854,
											"end": 15895,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 15854,
											"end": 15895,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15854,
											"end": 15895,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15854,
											"end": 15895,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 15854,
											"end": 15895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15854,
											"end": 15895,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 15854,
											"end": 15895,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15854,
											"end": 15895,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15854,
											"end": 15895,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15854,
											"end": 15895,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15854,
											"end": 15895,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15854,
											"end": 15895,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15854,
											"end": 15895,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15854,
											"end": 15895,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 15590,
											"end": 15902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15590,
											"end": 15902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15590,
											"end": 15902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15590,
											"end": 15902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16917,
											"end": 17699,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 16917,
											"end": 17699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17050,
											"end": 17051,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17033,
											"end": 17035,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17033,
											"end": 17047,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17033,
											"end": 17047,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17033,
											"end": 17047,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 17033,
											"end": 17051,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 17029,
											"end": 17693,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17029,
											"end": 17693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 17029,
											"end": 17693,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17087,
											"end": 17089,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17107,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17071,
											"end": 17107,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17107,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 17108,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 17108,
											"end": 17118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 17108,
											"end": 17120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17108,
											"end": 17120,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 17108,
											"end": 17120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17122,
											"end": 17126,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 17128,
											"end": 17135,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17137,
											"end": 17141,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 17071,
											"end": 17142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 17071,
											"end": 17142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 17071,
											"end": 17142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17397,
											"end": 17398,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17380,
											"end": 17386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17380,
											"end": 17393,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17380,
											"end": 17398,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17376,
											"end": 17669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 17376,
											"end": 17669,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17451,
											"end": 17453,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17429,
											"end": 17454,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17429,
											"end": 17454,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17429,
											"end": 17454,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17429,
											"end": 17454,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17429,
											"end": 17454,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17429,
											"end": 17454,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17429,
											"end": 17454,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17429,
											"end": 17454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 17429,
											"end": 17454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17429,
											"end": 17454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17429,
											"end": 17454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 17429,
											"end": 17454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17429,
											"end": 17454,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 17429,
											"end": 17454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17429,
											"end": 17454,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17429,
											"end": 17454,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17429,
											"end": 17454,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17429,
											"end": 17454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17429,
											"end": 17454,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17429,
											"end": 17454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17429,
											"end": 17454,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17376,
											"end": 17669,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 17376,
											"end": 17669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17621,
											"end": 17627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17615,
											"end": 17628,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17606,
											"end": 17612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17602,
											"end": 17604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17598,
											"end": 17613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17591,
											"end": 17629,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 17067,
											"end": 17683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17199,
											"end": 17240,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 17199,
											"end": 17240,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 17199,
											"end": 17240,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 17189,
											"end": 17240,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17189,
											"end": 17240,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17189,
											"end": 17240,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17189,
											"end": 17195,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17189,
											"end": 17240,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17189,
											"end": 17240,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17189,
											"end": 17240,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17189,
											"end": 17240,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17185,
											"end": 17315,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 17185,
											"end": 17315,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17293,
											"end": 17295,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17271,
											"end": 17296,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17271,
											"end": 17296,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17271,
											"end": 17296,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17271,
											"end": 17296,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17271,
											"end": 17296,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17271,
											"end": 17296,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17271,
											"end": 17296,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17271,
											"end": 17296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 17271,
											"end": 17296,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17271,
											"end": 17296,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17271,
											"end": 17296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 17271,
											"end": 17296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17271,
											"end": 17296,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 17271,
											"end": 17296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17271,
											"end": 17296,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17271,
											"end": 17296,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17271,
											"end": 17296,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17271,
											"end": 17296,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17271,
											"end": 17296,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17271,
											"end": 17296,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17271,
											"end": 17296,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17185,
											"end": 17315,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 17185,
											"end": 17315,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17143,
											"end": 17329,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17029,
											"end": 17693,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 17029,
											"end": 17693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16917,
											"end": 17699,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16917,
											"end": 17699,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16917,
											"end": 17699,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16917,
											"end": 17699,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16917,
											"end": 17699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1209,
											"end": 1802,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 1209,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1282,
											"end": 1295,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1307,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 1321,
											"end": 1328,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1307,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1307,
											"end": 1329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1307,
											"end": 1329,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 1307,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1307,
											"end": 1329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1376,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1366,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1384,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1366,
											"end": 1385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1366,
											"end": 1385,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1366,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1366,
											"end": 1385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1366,
											"end": 1385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1366,
											"end": 1385,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1366,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1366,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1385,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1340,
											"end": 1385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1340,
											"end": 1385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1395,
											"end": 1413,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1416,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 1416,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 1416,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1416,
											"end": 1426,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 1416,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1395,
											"end": 1426,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1395,
											"end": 1426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1522,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 1509,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1495,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1495,
											"end": 1565,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1545,
											"end": 1554,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1554,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1538,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 1538,
											"end": 1554,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1495,
											"end": 1565,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1495,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1690,
											"end": 1691,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1664,
											"end": 1687,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1664,
											"end": 1691,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1755,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1660,
											"end": 1755,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1728,
											"end": 1732,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1714,
											"end": 1744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1714,
											"end": 1744,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1744,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1744,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1744,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1744,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 1707,
											"end": 1744,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1755,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1660,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 1772,
											"end": 1795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1765,
											"end": 1795,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1765,
											"end": 1795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1765,
											"end": 1795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1765,
											"end": 1795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1209,
											"end": 1802,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 1209,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1209,
											"end": 1802,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1209,
											"end": 1802,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1209,
											"end": 1802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1209,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10632,
											"end": 10732,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 10632,
											"end": 10732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10699,
											"end": 10725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 10709,
											"end": 10711,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10713,
											"end": 10720,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10699,
											"end": 10725,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10699,
											"end": 10725,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10699,
											"end": 10725,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10699,
											"end": 10725,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10699,
											"end": 10725,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10699,
											"end": 10725,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10699,
											"end": 10725,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10699,
											"end": 10725,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10699,
											"end": 10725,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10699,
											"end": 10725,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10699,
											"end": 10725,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10699,
											"end": 10725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10699,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 10699,
											"end": 10725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10699,
											"end": 10725,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 10699,
											"end": 10725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10632,
											"end": 10732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10632,
											"end": 10732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10632,
											"end": 10732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2088,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 1921,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2034,
											"end": 2043,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2022,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2012,
											"end": 2031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2030,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2012,
											"end": 2031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2031,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2012,
											"end": 2031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2031,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2043,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 2012,
											"end": 2043,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2012,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2043,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 2012,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2043,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "PUSH",
											"source": 8,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 2073,
											"end": 2080,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 2058,
											"end": 2081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2081,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 1921,
											"end": 2088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1921,
											"end": 2088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1921,
											"end": 2088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1737,
											"name": "PUSH",
											"source": 5,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1697,
											"end": 1737,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1697,
											"end": 1737,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1737,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1708,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1737,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1697,
											"end": 1737,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1737,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1737,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1801,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 1697,
											"end": 1801,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1801,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1768,
											"end": 1801,
											"name": "PUSH",
											"source": 5,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1753,
											"end": 1801,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1753,
											"end": 1801,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1753,
											"end": 1801,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1753,
											"end": 1764,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1753,
											"end": 1801,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1753,
											"end": 1801,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1753,
											"end": 1801,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1753,
											"end": 1801,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1801,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 1697,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1853,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 1697,
											"end": 1853,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 1841,
											"end": 1852,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 1817,
											"end": 1853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1853,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 1817,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1853,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 1697,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1678,
											"end": 1853,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1678,
											"end": 1853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5706,
											"end": 5821,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 5706,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 5779,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5798,
											"end": 5805,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5806,
											"end": 5813,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5791,
											"end": 5814,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5791,
											"end": 5814,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5706,
											"end": 5821,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5706,
											"end": 5821,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5706,
											"end": 5821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5706,
											"end": 5821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14719,
											"end": 15381,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 14719,
											"end": 15381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14879,
											"end": 14888,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14879,
											"end": 14910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14879,
											"end": 14910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 14879,
											"end": 14910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14879,
											"end": 14910,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14908,
											"end": 14909,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14892,
											"end": 14910,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14892,
											"end": 14910,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14892,
											"end": 14896,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14892,
											"end": 14910,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14892,
											"end": 14910,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14892,
											"end": 14910,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14892,
											"end": 14910,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14879,
											"end": 14910,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 14879,
											"end": 14910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14875,
											"end": 15335,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14875,
											"end": 15335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 14875,
											"end": 15335,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14926,
											"end": 14939,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14942,
											"end": 14964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 14956,
											"end": 14963,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14942,
											"end": 14955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 14942,
											"end": 14964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14942,
											"end": 14964,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 14942,
											"end": 14964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14926,
											"end": 14964,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14926,
											"end": 14964,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15108,
											"end": 15109,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15092,
											"end": 15110,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15092,
											"end": 15110,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15092,
											"end": 15096,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15092,
											"end": 15110,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15092,
											"end": 15110,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15092,
											"end": 15110,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15092,
											"end": 15110,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15092,
											"end": 15127,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15092,
											"end": 15127,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15092,
											"end": 15127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 15092,
											"end": 15127,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15092,
											"end": 15127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15123,
											"end": 15127,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15114,
											"end": 15127,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15114,
											"end": 15127,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15114,
											"end": 15119,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15114,
											"end": 15127,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15114,
											"end": 15127,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15114,
											"end": 15127,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15114,
											"end": 15127,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15092,
											"end": 15127,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 15092,
											"end": 15127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15092,
											"end": 15161,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15092,
											"end": 15161,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15092,
											"end": 15161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 15092,
											"end": 15161,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15092,
											"end": 15161,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15132,
											"end": 15161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 15149,
											"end": 15154,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15156,
											"end": 15160,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15132,
											"end": 15148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 15132,
											"end": 15161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15132,
											"end": 15161,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 15132,
											"end": 15161,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15131,
											"end": 15161,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15092,
											"end": 15161,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 15092,
											"end": 15161,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15088,
											"end": 15230,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15088,
											"end": 15230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 15088,
											"end": 15230,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15210,
											"end": 15214,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "PUSH",
											"source": 5,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 15188,
											"end": 15215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15188,
											"end": 15215,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15088,
											"end": 15230,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 15088,
											"end": 15230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15248,
											"end": 15257,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15244,
											"end": 15325,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15244,
											"end": 15325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 15244,
											"end": 15325,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15302,
											"end": 15309,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15298,
											"end": 15300,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15282,
											"end": 15310,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15282,
											"end": 15310,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15291,
											"end": 15296,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15282,
											"end": 15310,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15282,
											"end": 15310,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15282,
											"end": 15310,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15282,
											"end": 15310,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15282,
											"end": 15310,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15282,
											"end": 15310,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15282,
											"end": 15310,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15282,
											"end": 15310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15282,
											"end": 15310,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15282,
											"end": 15310,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15282,
											"end": 15310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15282,
											"end": 15310,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 15244,
											"end": 15325,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 15244,
											"end": 15325,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14912,
											"end": 15335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14875,
											"end": 15335,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 14875,
											"end": 15335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15372,
											"end": 15374,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15360,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15345,
											"end": 15369,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15361,
											"end": 15368,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15369,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15369,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15369,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15345,
											"end": 15369,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15369,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15369,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15369,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15369,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15345,
											"end": 15369,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15369,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15345,
											"end": 15369,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15369,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15345,
											"end": 15374,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 15345,
											"end": 15374,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15374,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15374,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15374,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15374,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15345,
											"end": 15374,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15374,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15374,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15374,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15374,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15374,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15345,
											"end": 15374,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15374,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15374,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15374,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15374,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15345,
											"end": 15374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14719,
											"end": 15381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14719,
											"end": 15381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14719,
											"end": 15381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14719,
											"end": 15381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14719,
											"end": 15381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7081,
											"end": 7449,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 7081,
											"end": 7449,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7193,
											"end": 7231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 7207,
											"end": 7212,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7214,
											"end": 7221,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7223,
											"end": 7230,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7193,
											"end": 7206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 7193,
											"end": 7231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7193,
											"end": 7231,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 7193,
											"end": 7231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7188,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 7188,
											"end": 7443,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7268,
											"end": 7269,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7251,
											"end": 7270,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7251,
											"end": 7270,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7251,
											"end": 7256,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7251,
											"end": 7270,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7251,
											"end": 7270,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7251,
											"end": 7270,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 7247,
											"end": 7433,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7320,
											"end": 7327,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7297,
											"end": 7328,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7297,
											"end": 7328,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7297,
											"end": 7328,
											"name": "PUSH",
											"source": 5,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7297,
											"end": 7328,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7297,
											"end": 7328,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7297,
											"end": 7328,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7297,
											"end": 7328,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7297,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 7297,
											"end": 7328,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7297,
											"end": 7328,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7297,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 7297,
											"end": 7328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7297,
											"end": 7328,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 7297,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7297,
											"end": 7328,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7297,
											"end": 7328,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7297,
											"end": 7328,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7297,
											"end": 7328,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7297,
											"end": 7328,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7297,
											"end": 7328,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7297,
											"end": 7328,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7247,
											"end": 7433,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 7247,
											"end": 7433,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7401,
											"end": 7408,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7417,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7418,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7374,
											"end": 7418,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7418,
											"name": "PUSH",
											"source": 5,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7374,
											"end": 7418,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7418,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7418,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7374,
											"end": 7418,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 7374,
											"end": 7418,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7418,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7418,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 7374,
											"end": 7418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7418,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 7374,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7418,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7374,
											"end": 7418,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7418,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7418,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7418,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7418,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7418,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7188,
											"end": 7443,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 7188,
											"end": 7443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7081,
											"end": 7449,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7081,
											"end": 7449,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7081,
											"end": 7449,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7081,
											"end": 7449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3265,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 3173,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3237,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3249,
											"end": 3258,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3173,
											"end": 3265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2740,
											"end": 2753,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2765,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 2779,
											"end": 2786,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2765,
											"end": 2787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2787,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 2765,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 2822,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2822,
											"end": 2832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2832,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2832,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2873,
											"end": 2874,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2874,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2891,
											"end": 2898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 2900,
											"end": 2907,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 2900,
											"end": 2918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2877,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 2919,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 2849,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2842,
											"end": 2924,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2842,
											"end": 2924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2842,
											"end": 2924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2931,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10953,
											"end": 11135,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 10953,
											"end": 11135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11047,
											"end": 11065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 11053,
											"end": 11055,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11057,
											"end": 11064,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11047,
											"end": 11052,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 11047,
											"end": 11065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11047,
											"end": 11065,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 11047,
											"end": 11065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11075,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 11106,
											"end": 11107,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11110,
											"end": 11112,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11114,
											"end": 11121,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11123,
											"end": 11127,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11075,
											"end": 11097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 11075,
											"end": 11128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11075,
											"end": 11128,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 11075,
											"end": 11128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10953,
											"end": 11135,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10953,
											"end": 11135,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10953,
											"end": 11135,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10953,
											"end": 11135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 761,
											"end": 907,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 761,
											"end": 907,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 875,
											"end": 900,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 860,
											"end": 900,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 860,
											"end": 900,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 860,
											"end": 900,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 860,
											"end": 871,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 860,
											"end": 900,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 860,
											"end": 900,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 860,
											"end": 900,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 860,
											"end": 900,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 853,
											"end": 900,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 853,
											"end": 900,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 761,
											"end": 907,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 761,
											"end": 907,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 761,
											"end": 907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 761,
											"end": 907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6375,
											"end": 6647,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 6375,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6478,
											"end": 6482,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6532,
											"end": 6533,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6513,
											"end": 6534,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6513,
											"end": 6534,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6513,
											"end": 6520,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6513,
											"end": 6534,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6513,
											"end": 6534,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6513,
											"end": 6534,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6513,
											"end": 6534,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6513,
											"end": 6640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6513,
											"end": 6640,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6513,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 6513,
											"end": 6640,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6513,
											"end": 6640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6560,
											"end": 6567,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6556,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6603,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 6551,
											"end": 6603,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6603,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 6588,
											"end": 6593,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6595,
											"end": 6602,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 6571,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6603,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 6571,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6603,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 6551,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6639,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 6551,
											"end": 6639,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6632,
											"end": 6639,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6607,
											"end": 6639,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6607,
											"end": 6639,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6607,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 6620,
											"end": 6627,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6607,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 6607,
											"end": 6628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6607,
											"end": 6628,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 6607,
											"end": 6628,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6607,
											"end": 6639,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6607,
											"end": 6639,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6607,
											"end": 6639,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6551,
											"end": 6639,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 6551,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6513,
											"end": 6640,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 6513,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6494,
											"end": 6640,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6494,
											"end": 6640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6375,
											"end": 6647,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6375,
											"end": 6647,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6375,
											"end": 6647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6375,
											"end": 6647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6375,
											"end": 6647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6375,
											"end": 6647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 636,
											"end": 1334,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 636,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 692,
											"end": 705,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 741,
											"end": 755,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 779,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 758,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 769,
											"end": 774,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 758,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 758,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 775,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 758,
											"end": 775,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 758,
											"end": 779,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 741,
											"end": 779,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 741,
											"end": 779,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 793,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 816,
											"end": 834,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 816,
											"end": 834,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 816,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 816,
											"end": 834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 816,
											"end": 834,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 816,
											"end": 834,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 816,
											"end": 834,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 816,
											"end": 834,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 816,
											"end": 834,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 816,
											"end": 834,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 816,
											"end": 834,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 816,
											"end": 834,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 816,
											"end": 834,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 816,
											"end": 834,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 816,
											"end": 834,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 834,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 793,
											"end": 834,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 793,
											"end": 834,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 848,
											"end": 859,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 974,
											"end": 980,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 970,
											"end": 972,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 966,
											"end": 981,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 958,
											"end": 964,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 954,
											"end": 982,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 947,
											"end": 982,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 947,
											"end": 982,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1009,
											"end": 1291,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 1009,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1009,
											"end": 1291,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1009,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 1009,
											"end": 1291,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1045,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1045,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1045,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1040,
											"end": 1045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1045,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1045,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1045,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1045,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1179,
											"end": 1189,
											"name": "PUSH",
											"source": 11,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1174,
											"end": 1176,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 1167,
											"end": 1172,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1177,
											"name": "MOD",
											"source": 11
										},
										{
											"begin": 1158,
											"end": 1190,
											"name": "BYTE",
											"source": 11
										},
										{
											"begin": 1153,
											"end": 1156,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1145,
											"end": 1191,
											"name": "MSTORE8",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1237,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 1226,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1226,
											"end": 1237,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1264,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1009,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 1255,
											"end": 1276,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1009,
											"end": 1291,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 1009,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1311,
											"end": 1317,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1304,
											"end": 1317,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1304,
											"end": 1317,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1304,
											"end": 1317,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1304,
											"end": 1317,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1304,
											"end": 1317,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 636,
											"end": 1334,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 636,
											"end": 1334,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 636,
											"end": 1334,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 636,
											"end": 1334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9954,
											"end": 10281,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 9954,
											"end": 10281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10035,
											"end": 10036,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10021,
											"end": 10037,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10021,
											"end": 10037,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10021,
											"end": 10023,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10021,
											"end": 10037,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10021,
											"end": 10037,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10021,
											"end": 10037,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10017,
											"end": 10104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 10017,
											"end": 10104,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10090,
											"end": 10091,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10060,
											"end": 10093,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10060,
											"end": 10093,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10060,
											"end": 10093,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10060,
											"end": 10093,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10060,
											"end": 10093,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10060,
											"end": 10093,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10060,
											"end": 10093,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10060,
											"end": 10093,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 10060,
											"end": 10093,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10060,
											"end": 10093,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10060,
											"end": 10093,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 10060,
											"end": 10093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10060,
											"end": 10093,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 10060,
											"end": 10093,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10060,
											"end": 10093,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10060,
											"end": 10093,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10060,
											"end": 10093,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10060,
											"end": 10093,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10060,
											"end": 10093,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10060,
											"end": 10093,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10060,
											"end": 10093,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10017,
											"end": 10104,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 10017,
											"end": 10104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 10134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10137,
											"end": 10169,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 10145,
											"end": 10147,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10149,
											"end": 10156,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10166,
											"end": 10167,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10137,
											"end": 10144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 10137,
											"end": 10169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10137,
											"end": 10169,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 10137,
											"end": 10169,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 10169,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 10169,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10209,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10183,
											"end": 10210,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10183,
											"end": 10210,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10183,
											"end": 10196,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10183,
											"end": 10210,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10183,
											"end": 10210,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10183,
											"end": 10210,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10179,
											"end": 10275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 10179,
											"end": 10275,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10261,
											"end": 10262,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10233,
											"end": 10264,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10233,
											"end": 10264,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10264,
											"name": "PUSH",
											"source": 5,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10233,
											"end": 10264,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10264,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10264,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10233,
											"end": 10264,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 10233,
											"end": 10264,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10264,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 10233,
											"end": 10264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10264,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 10233,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10264,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10233,
											"end": 10264,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10264,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10264,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10264,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10264,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10264,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10179,
											"end": 10275,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 10179,
											"end": 10275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10007,
											"end": 10281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9954,
											"end": 10281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9954,
											"end": 10281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9954,
											"end": 10281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12213,
											"end": 13129,
											"name": "tag",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 12213,
											"end": 13129,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12266,
											"end": 12273,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12285,
											"end": 12299,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12302,
											"end": 12303,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12285,
											"end": 12303,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12285,
											"end": 12303,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12350,
											"end": 12358,
											"name": "PUSH",
											"source": 14,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12341,
											"end": 12346,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12341,
											"end": 12358,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12337,
											"end": 12440,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 12337,
											"end": 12440,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12387,
											"end": 12395,
											"name": "PUSH",
											"source": 14,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12378,
											"end": 12395,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12378,
											"end": 12395,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12378,
											"end": 12395,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 12378,
											"end": 12395,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12378,
											"end": 12395,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 12378,
											"end": 12395,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 12378,
											"end": 12395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12378,
											"end": 12395,
											"name": "tag",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 12378,
											"end": 12395,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12378,
											"end": 12395,
											"name": "tag",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 12378,
											"end": 12395,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12378,
											"end": 12395,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12378,
											"end": 12395,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12378,
											"end": 12395,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12423,
											"end": 12425,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12413,
											"end": 12425,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12413,
											"end": 12425,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12413,
											"end": 12425,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12413,
											"end": 12425,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12337,
											"end": 12440,
											"name": "tag",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 12337,
											"end": 12440,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12466,
											"end": 12474,
											"name": "PUSH",
											"source": 14,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12457,
											"end": 12462,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12457,
											"end": 12474,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12453,
											"end": 12556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 12453,
											"end": 12556,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12503,
											"end": 12511,
											"name": "PUSH",
											"source": 14,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12494,
											"end": 12511,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12494,
											"end": 12511,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12494,
											"end": 12511,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 12494,
											"end": 12511,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12494,
											"end": 12511,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 12494,
											"end": 12511,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 12494,
											"end": 12511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12494,
											"end": 12511,
											"name": "tag",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 12494,
											"end": 12511,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12494,
											"end": 12511,
											"name": "tag",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 12494,
											"end": 12511,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12494,
											"end": 12511,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12494,
											"end": 12511,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12494,
											"end": 12511,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12539,
											"end": 12541,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12529,
											"end": 12541,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12529,
											"end": 12541,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12529,
											"end": 12541,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12529,
											"end": 12541,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12453,
											"end": 12556,
											"name": "tag",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 12453,
											"end": 12556,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12582,
											"end": 12590,
											"name": "PUSH",
											"source": 14,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12573,
											"end": 12578,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12573,
											"end": 12590,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12569,
											"end": 12672,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 12569,
											"end": 12672,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12619,
											"end": 12627,
											"name": "PUSH",
											"source": 14,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12610,
											"end": 12627,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12610,
											"end": 12627,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12610,
											"end": 12627,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 12610,
											"end": 12627,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12610,
											"end": 12627,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 12610,
											"end": 12627,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 12610,
											"end": 12627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12610,
											"end": 12627,
											"name": "tag",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 12610,
											"end": 12627,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12610,
											"end": 12627,
											"name": "tag",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 12610,
											"end": 12627,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12610,
											"end": 12627,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12610,
											"end": 12627,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12610,
											"end": 12627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12655,
											"end": 12657,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 12645,
											"end": 12657,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12645,
											"end": 12657,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12645,
											"end": 12657,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12645,
											"end": 12657,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12569,
											"end": 12672,
											"name": "tag",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 12569,
											"end": 12672,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12698,
											"end": 12705,
											"name": "PUSH",
											"source": 14,
											"value": "5F5E100"
										},
										{
											"begin": 12689,
											"end": 12694,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12689,
											"end": 12705,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12685,
											"end": 12785,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 12685,
											"end": 12785,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12734,
											"end": 12741,
											"name": "PUSH",
											"source": 14,
											"value": "5F5E100"
										},
										{
											"begin": 12725,
											"end": 12741,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12725,
											"end": 12741,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12725,
											"end": 12741,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 12725,
											"end": 12741,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12725,
											"end": 12741,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 12725,
											"end": 12741,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 12725,
											"end": 12741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12725,
											"end": 12741,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 12725,
											"end": 12741,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12725,
											"end": 12741,
											"name": "tag",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 12725,
											"end": 12741,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12725,
											"end": 12741,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12725,
											"end": 12741,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12725,
											"end": 12741,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12769,
											"end": 12770,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 12759,
											"end": 12770,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12759,
											"end": 12770,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12759,
											"end": 12770,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12759,
											"end": 12770,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12685,
											"end": 12785,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 12685,
											"end": 12785,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12811,
											"end": 12818,
											"name": "PUSH",
											"source": 14,
											"value": "2710"
										},
										{
											"begin": 12802,
											"end": 12807,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12802,
											"end": 12818,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12798,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 12798,
											"end": 12898,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12847,
											"end": 12854,
											"name": "PUSH",
											"source": 14,
											"value": "2710"
										},
										{
											"begin": 12838,
											"end": 12854,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12838,
											"end": 12854,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12838,
											"end": 12854,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 12838,
											"end": 12854,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12838,
											"end": 12854,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 12838,
											"end": 12854,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 12838,
											"end": 12854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12838,
											"end": 12854,
											"name": "tag",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 12838,
											"end": 12854,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12838,
											"end": 12854,
											"name": "tag",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 12838,
											"end": 12854,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12838,
											"end": 12854,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12838,
											"end": 12854,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12838,
											"end": 12854,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12882,
											"end": 12883,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12872,
											"end": 12883,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12872,
											"end": 12883,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12872,
											"end": 12883,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12872,
											"end": 12883,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12798,
											"end": 12898,
											"name": "tag",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 12798,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12924,
											"end": 12931,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 12915,
											"end": 12920,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12915,
											"end": 12931,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12911,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 12911,
											"end": 13011,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12960,
											"end": 12967,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 12951,
											"end": 12967,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12951,
											"end": 12967,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12951,
											"end": 12967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 12951,
											"end": 12967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12951,
											"end": 12967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 12951,
											"end": 12967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 12951,
											"end": 12967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12951,
											"end": 12967,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 12951,
											"end": 12967,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12951,
											"end": 12967,
											"name": "tag",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 12951,
											"end": 12967,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12951,
											"end": 12967,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12951,
											"end": 12967,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12951,
											"end": 12967,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12995,
											"end": 12996,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 12985,
											"end": 12996,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12985,
											"end": 12996,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12985,
											"end": 12996,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12985,
											"end": 12996,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12911,
											"end": 13011,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 12911,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 13028,
											"end": 13033,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13028,
											"end": 13044,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 13024,
											"end": 13090,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 13024,
											"end": 13090,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13074,
											"end": 13075,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 13064,
											"end": 13075,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13064,
											"end": 13075,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13064,
											"end": 13075,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13064,
											"end": 13075,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13024,
											"end": 13090,
											"name": "tag",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 13024,
											"end": 13090,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13116,
											"end": 13122,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13109,
											"end": 13122,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13109,
											"end": 13122,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13109,
											"end": 13122,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12213,
											"end": 13129,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12213,
											"end": 13129,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12213,
											"end": 13129,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12213,
											"end": 13129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 17,
											"value": "327"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 17,
											"value": "328"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "388"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "328"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 17,
											"value": "388"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "389"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 17,
											"value": "389"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "391"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 17,
											"value": "391"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "393"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "394"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 17,
											"value": "394"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 17,
											"value": "393"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "395"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 17,
											"value": "395"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 17,
											"value": "331"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 17,
											"value": "332"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "398"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "331"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 17,
											"value": "398"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "400"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "332"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 17,
											"value": "400"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 17,
											"value": "333"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 17,
											"value": "335"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 17,
											"value": "404"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "406"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "404"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 17,
											"value": "406"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 17,
											"value": "337"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "333"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "410"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 17,
											"value": "410"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "335"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "412"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 17,
											"value": "412"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "414"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "337"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 17,
											"value": "414"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 17,
											"value": "339"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "417"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 17,
											"value": "417"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "420"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "339"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 17,
											"value": "420"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "422"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "423"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 17,
											"value": "423"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 17,
											"value": "422"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "424"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 17,
											"value": "424"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 17,
											"value": "341"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 17,
											"value": "342"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "427"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "341"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 17,
											"value": "427"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "429"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "342"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 17,
											"value": "429"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "431"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 17,
											"value": "431"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "342"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "434"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 17,
											"value": "434"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "441"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 17,
											"value": "441"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 17,
											"value": "45"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "444"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 17,
											"value": "444"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "445"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 17,
											"value": "445"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "tag",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5598,
											"end": 5621,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 5629,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "tag",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "tag",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "451"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 5774,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 17,
											"value": "451"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5515,
											"end": 5844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "tag",
											"source": 17,
											"value": "346"
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 5937,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "tag",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5932,
											"end": 5935,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5925,
											"end": 5962,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5850,
											"end": 5968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "tag",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "455"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6171,
											"end": 6188,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "346"
										},
										{
											"begin": 6118,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "tag",
											"source": 17,
											"value": "455"
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5974,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 17,
											"value": "347"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "331"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "458"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 17,
											"value": "458"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 17,
											"value": "348"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "347"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 17,
											"value": "70"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "462"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "463"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 17,
											"value": "463"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 17,
											"value": "462"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "464"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 17,
											"value": "464"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "465"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "348"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 17,
											"value": "465"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 17,
											"value": "349"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 17,
											"value": "351"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "470"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 17,
											"value": "470"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "471"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 17,
											"value": "471"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 17,
											"value": "352"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "474"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 17,
											"value": "474"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "351"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 17,
											"value": "353"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "477"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 17,
											"value": "477"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 17,
											"value": "354"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 17,
											"value": "355"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "482"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "483"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "353"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 17,
											"value": "483"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "352"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 17,
											"value": "482"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "485"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 17,
											"value": "485"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "354"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 17,
											"value": "356"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "488"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "349"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 17,
											"value": "488"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "490"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "355"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 17,
											"value": "490"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "492"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "493"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 17,
											"value": "493"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 17,
											"value": "492"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "494"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 17,
											"value": "494"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "495"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 17,
											"value": "495"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "497"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "327"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 17,
											"value": "497"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "499"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "356"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 17,
											"value": "499"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "tag",
											"source": 17,
											"value": "357"
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10053,
											"end": 10057,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10143,
											"end": 10161,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10135,
											"end": 10141,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10132,
											"end": 10162,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 10165,
											"end": 10183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "tag",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "tag",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "503"
										},
										{
											"begin": 10225,
											"end": 10231,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 10203,
											"end": 10232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "tag",
											"source": 17,
											"value": "503"
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10195,
											"end": 10232,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10195,
											"end": 10232,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10287,
											"end": 10291,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10281,
											"end": 10285,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10277,
											"end": 10292,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10269,
											"end": 10292,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10269,
											"end": 10292,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9991,
											"end": 10299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "tag",
											"source": 17,
											"value": "358"
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10383,
											"end": 10388,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 10466,
											"end": 10472,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "357"
										},
										{
											"begin": 10424,
											"end": 10473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "tag",
											"source": 17,
											"value": "506"
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "352"
										},
										{
											"begin": 10408,
											"end": 10474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "tag",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10399,
											"end": 10474,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10399,
											"end": 10474,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10497,
											"end": 10503,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10490,
											"end": 10495,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10483,
											"end": 10504,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10535,
											"end": 10539,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10528,
											"end": 10533,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10524,
											"end": 10540,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10573,
											"end": 10576,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10564,
											"end": 10570,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10559,
											"end": 10562,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10555,
											"end": 10571,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10552,
											"end": 10577,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "507"
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 10580,
											"end": 10659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "tag",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "tag",
											"source": 17,
											"value": "507"
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "509"
										},
										{
											"begin": 10717,
											"end": 10723,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10712,
											"end": 10715,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10707,
											"end": 10710,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "354"
										},
										{
											"begin": 10670,
											"end": 10724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "tag",
											"source": 17,
											"value": "509"
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10389,
											"end": 10730,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10305,
											"end": 10730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "tag",
											"source": 17,
											"value": "359"
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10806,
											"end": 10811,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10855,
											"end": 10858,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10848,
											"end": 10852,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 10840,
											"end": 10846,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10836,
											"end": 10853,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10832,
											"end": 10859,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "512"
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "349"
										},
										{
											"begin": 10863,
											"end": 10942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "tag",
											"source": 17,
											"value": "512"
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "tag",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10980,
											"end": 10986,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10967,
											"end": 10987,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "513"
										},
										{
											"begin": 11080,
											"end": 11083,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11072,
											"end": 11078,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11065,
											"end": 11069,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11057,
											"end": 11063,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 11053,
											"end": 11070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "358"
										},
										{
											"begin": 11005,
											"end": 11084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "tag",
											"source": 17,
											"value": "513"
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10996,
											"end": 11084,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10996,
											"end": 11084,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10812,
											"end": 11090,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10750,
											"end": 11090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11096,
											"end": 11895,
											"name": "tag",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 11096,
											"end": 11895,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11183,
											"end": 11189,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11191,
											"end": 11197,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11199,
											"end": 11205,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11248,
											"end": 11250,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 11236,
											"end": 11245,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11227,
											"end": 11234,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 11223,
											"end": 11246,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 11219,
											"end": 11251,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 11216,
											"end": 11335,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11216,
											"end": 11335,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "515"
										},
										{
											"begin": 11216,
											"end": 11335,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11254,
											"end": 11333,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "516"
										},
										{
											"begin": 11254,
											"end": 11333,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 11254,
											"end": 11333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11254,
											"end": 11333,
											"name": "tag",
											"source": 17,
											"value": "516"
										},
										{
											"begin": 11254,
											"end": 11333,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11216,
											"end": 11335,
											"name": "tag",
											"source": 17,
											"value": "515"
										},
										{
											"begin": 11216,
											"end": 11335,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11374,
											"end": 11375,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11399,
											"end": 11452,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "517"
										},
										{
											"begin": 11444,
											"end": 11451,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 11435,
											"end": 11441,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11424,
											"end": 11433,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 11420,
											"end": 11442,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11399,
											"end": 11452,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 11399,
											"end": 11452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11399,
											"end": 11452,
											"name": "tag",
											"source": 17,
											"value": "517"
										},
										{
											"begin": 11399,
											"end": 11452,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11389,
											"end": 11452,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 11389,
											"end": 11452,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11345,
											"end": 11462,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11501,
											"end": 11503,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11527,
											"end": 11580,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "518"
										},
										{
											"begin": 11572,
											"end": 11579,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 11563,
											"end": 11569,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11552,
											"end": 11561,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 11548,
											"end": 11570,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11527,
											"end": 11580,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 11527,
											"end": 11580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11527,
											"end": 11580,
											"name": "tag",
											"source": 17,
											"value": "518"
										},
										{
											"begin": 11527,
											"end": 11580,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11517,
											"end": 11580,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11517,
											"end": 11580,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11472,
											"end": 11590,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11657,
											"end": 11659,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 11646,
											"end": 11655,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11629,
											"end": 11661,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 11688,
											"end": 11706,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11680,
											"end": 11686,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11677,
											"end": 11707,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 11674,
											"end": 11791,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11674,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "519"
										},
										{
											"begin": 11674,
											"end": 11791,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11710,
											"end": 11789,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 11710,
											"end": 11789,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "327"
										},
										{
											"begin": 11710,
											"end": 11789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11710,
											"end": 11789,
											"name": "tag",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 11710,
											"end": 11789,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11674,
											"end": 11791,
											"name": "tag",
											"source": 17,
											"value": "519"
										},
										{
											"begin": 11674,
											"end": 11791,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11815,
											"end": 11878,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "521"
										},
										{
											"begin": 11870,
											"end": 11877,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 11861,
											"end": 11867,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11850,
											"end": 11859,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 11846,
											"end": 11868,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11815,
											"end": 11878,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "359"
										},
										{
											"begin": 11815,
											"end": 11878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11815,
											"end": 11878,
											"name": "tag",
											"source": 17,
											"value": "521"
										},
										{
											"begin": 11815,
											"end": 11878,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11805,
											"end": 11878,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11805,
											"end": 11878,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11600,
											"end": 11888,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11096,
											"end": 11895,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11096,
											"end": 11895,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11096,
											"end": 11895,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11096,
											"end": 11895,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11096,
											"end": 11895,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11096,
											"end": 11895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11901,
											"end": 12375,
											"name": "tag",
											"source": 17,
											"value": "86"
										},
										{
											"begin": 11901,
											"end": 12375,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11969,
											"end": 11975,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11977,
											"end": 11983,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12026,
											"end": 12028,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12005,
											"end": 12012,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12001,
											"end": 12024,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 11997,
											"end": 12029,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 11994,
											"end": 12113,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11994,
											"end": 12113,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "523"
										},
										{
											"begin": 11994,
											"end": 12113,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12032,
											"end": 12111,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "524"
										},
										{
											"begin": 12032,
											"end": 12111,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 12032,
											"end": 12111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12032,
											"end": 12111,
											"name": "tag",
											"source": 17,
											"value": "524"
										},
										{
											"begin": 12032,
											"end": 12111,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11994,
											"end": 12113,
											"name": "tag",
											"source": 17,
											"value": "523"
										},
										{
											"begin": 11994,
											"end": 12113,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12152,
											"end": 12153,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12177,
											"end": 12230,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "525"
										},
										{
											"begin": 12222,
											"end": 12229,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12213,
											"end": 12219,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12202,
											"end": 12211,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 12198,
											"end": 12220,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12177,
											"end": 12230,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 12177,
											"end": 12230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12177,
											"end": 12230,
											"name": "tag",
											"source": 17,
											"value": "525"
										},
										{
											"begin": 12177,
											"end": 12230,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12167,
											"end": 12230,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12167,
											"end": 12230,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12123,
											"end": 12240,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12279,
											"end": 12281,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12305,
											"end": 12358,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "526"
										},
										{
											"begin": 12350,
											"end": 12357,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12341,
											"end": 12347,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12330,
											"end": 12339,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 12326,
											"end": 12348,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12305,
											"end": 12358,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 12305,
											"end": 12358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12305,
											"end": 12358,
											"name": "tag",
											"source": 17,
											"value": "526"
										},
										{
											"begin": 12305,
											"end": 12358,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12295,
											"end": 12358,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12295,
											"end": 12358,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12250,
											"end": 12368,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11901,
											"end": 12375,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11901,
											"end": 12375,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11901,
											"end": 12375,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11901,
											"end": 12375,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11901,
											"end": 12375,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11901,
											"end": 12375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12381,
											"end": 12561,
											"name": "tag",
											"source": 17,
											"value": "360"
										},
										{
											"begin": 12381,
											"end": 12561,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12429,
											"end": 12506,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12426,
											"end": 12427,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12419,
											"end": 12507,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12526,
											"end": 12530,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 12523,
											"end": 12524,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 12516,
											"end": 12531,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12550,
											"end": 12554,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 12547,
											"end": 12548,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12540,
											"end": 12555,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 12567,
											"end": 12887,
											"name": "tag",
											"source": 17,
											"value": "97"
										},
										{
											"begin": 12567,
											"end": 12887,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12611,
											"end": 12617,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12648,
											"end": 12649,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 12642,
											"end": 12646,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12638,
											"end": 12650,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 12628,
											"end": 12650,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12628,
											"end": 12650,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12695,
											"end": 12696,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 12689,
											"end": 12693,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12685,
											"end": 12697,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 12716,
											"end": 12734,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12706,
											"end": 12787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "529"
										},
										{
											"begin": 12706,
											"end": 12787,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12772,
											"end": 12776,
											"name": "PUSH",
											"source": 17,
											"value": "7F"
										},
										{
											"begin": 12764,
											"end": 12770,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12760,
											"end": 12777,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 12750,
											"end": 12777,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12750,
											"end": 12777,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12706,
											"end": 12787,
											"name": "tag",
											"source": 17,
											"value": "529"
										},
										{
											"begin": 12706,
											"end": 12787,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12834,
											"end": 12836,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12826,
											"end": 12832,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12823,
											"end": 12837,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 12803,
											"end": 12821,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12800,
											"end": 12838,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 12797,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "530"
										},
										{
											"begin": 12797,
											"end": 12881,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12853,
											"end": 12871,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 12853,
											"end": 12871,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "360"
										},
										{
											"begin": 12853,
											"end": 12871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12853,
											"end": 12871,
											"name": "tag",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 12853,
											"end": 12871,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12797,
											"end": 12881,
											"name": "tag",
											"source": 17,
											"value": "530"
										},
										{
											"begin": 12797,
											"end": 12881,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12618,
											"end": 12887,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12567,
											"end": 12887,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12567,
											"end": 12887,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12567,
											"end": 12887,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12567,
											"end": 12887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12893,
											"end": 13335,
											"name": "tag",
											"source": 17,
											"value": "120"
										},
										{
											"begin": 12893,
											"end": 13335,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13042,
											"end": 13046,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13080,
											"end": 13082,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 13069,
											"end": 13078,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13065,
											"end": 13083,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13057,
											"end": 13083,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13057,
											"end": 13083,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13093,
											"end": 13164,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 13161,
											"end": 13162,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13150,
											"end": 13159,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13146,
											"end": 13163,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13137,
											"end": 13143,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 13093,
											"end": 13164,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 13093,
											"end": 13164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13093,
											"end": 13164,
											"name": "tag",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 13093,
											"end": 13164,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13174,
											"end": 13246,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "534"
										},
										{
											"begin": 13242,
											"end": 13244,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13231,
											"end": 13240,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13227,
											"end": 13245,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13218,
											"end": 13224,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 13174,
											"end": 13246,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "346"
										},
										{
											"begin": 13174,
											"end": 13246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13174,
											"end": 13246,
											"name": "tag",
											"source": 17,
											"value": "534"
										},
										{
											"begin": 13174,
											"end": 13246,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13256,
											"end": 13328,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "535"
										},
										{
											"begin": 13324,
											"end": 13326,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 13313,
											"end": 13322,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13309,
											"end": 13327,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13300,
											"end": 13306,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13256,
											"end": 13328,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 13256,
											"end": 13328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13256,
											"end": 13328,
											"name": "tag",
											"source": 17,
											"value": "535"
										},
										{
											"begin": 13256,
											"end": 13328,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12893,
											"end": 13335,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 12893,
											"end": 13335,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 12893,
											"end": 13335,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12893,
											"end": 13335,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12893,
											"end": 13335,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12893,
											"end": 13335,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12893,
											"end": 13335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13341,
											"end": 13439,
											"name": "tag",
											"source": 17,
											"value": "361"
										},
										{
											"begin": 13341,
											"end": 13439,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13392,
											"end": 13398,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13426,
											"end": 13431,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13420,
											"end": 13432,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 13410,
											"end": 13432,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13410,
											"end": 13432,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13341,
											"end": 13439,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13341,
											"end": 13439,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13341,
											"end": 13439,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13341,
											"end": 13439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13445,
											"end": 13613,
											"name": "tag",
											"source": 17,
											"value": "362"
										},
										{
											"begin": 13445,
											"end": 13613,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13528,
											"end": 13539,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13562,
											"end": 13568,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13557,
											"end": 13560,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13550,
											"end": 13569,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13602,
											"end": 13606,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13597,
											"end": 13600,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13593,
											"end": 13607,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13578,
											"end": 13607,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13578,
											"end": 13607,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13445,
											"end": 13613,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13445,
											"end": 13613,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13445,
											"end": 13613,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13445,
											"end": 13613,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13445,
											"end": 13613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13619,
											"end": 13992,
											"name": "tag",
											"source": 17,
											"value": "363"
										},
										{
											"begin": 13619,
											"end": 13992,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13705,
											"end": 13708,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13733,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "539"
										},
										{
											"begin": 13765,
											"end": 13770,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13733,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "361"
										},
										{
											"begin": 13733,
											"end": 13771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13733,
											"end": 13771,
											"name": "tag",
											"source": 17,
											"value": "539"
										},
										{
											"begin": 13733,
											"end": 13771,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13787,
											"end": 13857,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "540"
										},
										{
											"begin": 13850,
											"end": 13856,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13845,
											"end": 13848,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 13787,
											"end": 13857,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "362"
										},
										{
											"begin": 13787,
											"end": 13857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13787,
											"end": 13857,
											"name": "tag",
											"source": 17,
											"value": "540"
										},
										{
											"begin": 13787,
											"end": 13857,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13780,
											"end": 13857,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 13780,
											"end": 13857,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13866,
											"end": 13931,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 13924,
											"end": 13930,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13919,
											"end": 13922,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 13912,
											"end": 13916,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13905,
											"end": 13910,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 13901,
											"end": 13917,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13866,
											"end": 13931,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "335"
										},
										{
											"begin": 13866,
											"end": 13931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13866,
											"end": 13931,
											"name": "tag",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 13866,
											"end": 13931,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13956,
											"end": 13985,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "542"
										},
										{
											"begin": 13978,
											"end": 13984,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13956,
											"end": 13985,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 13956,
											"end": 13985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13956,
											"end": 13985,
											"name": "tag",
											"source": 17,
											"value": "542"
										},
										{
											"begin": 13956,
											"end": 13985,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13951,
											"end": 13954,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13947,
											"end": 13986,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13940,
											"end": 13986,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13940,
											"end": 13986,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13709,
											"end": 13992,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13619,
											"end": 13992,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13619,
											"end": 13992,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13619,
											"end": 13992,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13619,
											"end": 13992,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13619,
											"end": 13992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13998,
											"end": 14638,
											"name": "tag",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 13998,
											"end": 14638,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14193,
											"end": 14197,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14231,
											"end": 14234,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 14220,
											"end": 14229,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14216,
											"end": 14235,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14208,
											"end": 14235,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14208,
											"end": 14235,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14245,
											"end": 14316,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "544"
										},
										{
											"begin": 14313,
											"end": 14314,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14302,
											"end": 14311,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14298,
											"end": 14315,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14289,
											"end": 14295,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 14245,
											"end": 14316,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 14245,
											"end": 14316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14245,
											"end": 14316,
											"name": "tag",
											"source": 17,
											"value": "544"
										},
										{
											"begin": 14245,
											"end": 14316,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14326,
											"end": 14398,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "545"
										},
										{
											"begin": 14394,
											"end": 14396,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14383,
											"end": 14392,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14379,
											"end": 14397,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14370,
											"end": 14376,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 14326,
											"end": 14398,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 14326,
											"end": 14398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14326,
											"end": 14398,
											"name": "tag",
											"source": 17,
											"value": "545"
										},
										{
											"begin": 14326,
											"end": 14398,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14408,
											"end": 14480,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 14476,
											"end": 14478,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 14465,
											"end": 14474,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14461,
											"end": 14479,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14452,
											"end": 14458,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 14408,
											"end": 14480,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "346"
										},
										{
											"begin": 14408,
											"end": 14480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14408,
											"end": 14480,
											"name": "tag",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 14408,
											"end": 14480,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14527,
											"end": 14536,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14521,
											"end": 14525,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14517,
											"end": 14537,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 14512,
											"end": 14514,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 14501,
											"end": 14510,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14497,
											"end": 14515,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14490,
											"end": 14538,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14555,
											"end": 14631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "547"
										},
										{
											"begin": 14626,
											"end": 14630,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14617,
											"end": 14623,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14555,
											"end": 14631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "363"
										},
										{
											"begin": 14555,
											"end": 14631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14555,
											"end": 14631,
											"name": "tag",
											"source": 17,
											"value": "547"
										},
										{
											"begin": 14555,
											"end": 14631,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14547,
											"end": 14631,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14547,
											"end": 14631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13998,
											"end": 14638,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 13998,
											"end": 14638,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 13998,
											"end": 14638,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13998,
											"end": 14638,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13998,
											"end": 14638,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13998,
											"end": 14638,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13998,
											"end": 14638,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13998,
											"end": 14638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14644,
											"end": 14785,
											"name": "tag",
											"source": 17,
											"value": "364"
										},
										{
											"begin": 14644,
											"end": 14785,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14700,
											"end": 14705,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14731,
											"end": 14737,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14725,
											"end": 14738,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 14716,
											"end": 14738,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14716,
											"end": 14738,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14747,
											"end": 14779,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 14773,
											"end": 14778,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14747,
											"end": 14779,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 14747,
											"end": 14779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14747,
											"end": 14779,
											"name": "tag",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 14747,
											"end": 14779,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14644,
											"end": 14785,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 14644,
											"end": 14785,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14644,
											"end": 14785,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14644,
											"end": 14785,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14644,
											"end": 14785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14791,
											"end": 15140,
											"name": "tag",
											"source": 17,
											"value": "206"
										},
										{
											"begin": 14791,
											"end": 15140,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14860,
											"end": 14866,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14909,
											"end": 14911,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14897,
											"end": 14906,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14888,
											"end": 14895,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14884,
											"end": 14907,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 14880,
											"end": 14912,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 14877,
											"end": 14996,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 14877,
											"end": 14996,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 14877,
											"end": 14996,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14915,
											"end": 14994,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 14915,
											"end": 14994,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 14915,
											"end": 14994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14915,
											"end": 14994,
											"name": "tag",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 14915,
											"end": 14994,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14877,
											"end": 14996,
											"name": "tag",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 14877,
											"end": 14996,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15035,
											"end": 15036,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15060,
											"end": 15123,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 15115,
											"end": 15122,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15106,
											"end": 15112,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15095,
											"end": 15104,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 15091,
											"end": 15113,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15060,
											"end": 15123,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "364"
										},
										{
											"begin": 15060,
											"end": 15123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15060,
											"end": 15123,
											"name": "tag",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 15060,
											"end": 15123,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15050,
											"end": 15123,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15050,
											"end": 15123,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15006,
											"end": 15133,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14791,
											"end": 15140,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 14791,
											"end": 15140,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14791,
											"end": 15140,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14791,
											"end": 15140,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14791,
											"end": 15140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15146,
											"end": 15294,
											"name": "tag",
											"source": 17,
											"value": "365"
										},
										{
											"begin": 15146,
											"end": 15294,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15248,
											"end": 15259,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15285,
											"end": 15288,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15270,
											"end": 15288,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15270,
											"end": 15288,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15146,
											"end": 15294,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 15146,
											"end": 15294,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15146,
											"end": 15294,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15146,
											"end": 15294,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15146,
											"end": 15294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15300,
											"end": 15690,
											"name": "tag",
											"source": 17,
											"value": "366"
										},
										{
											"begin": 15300,
											"end": 15690,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15406,
											"end": 15409,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15434,
											"end": 15473,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 15467,
											"end": 15472,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15434,
											"end": 15473,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "333"
										},
										{
											"begin": 15434,
											"end": 15473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15434,
											"end": 15473,
											"name": "tag",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 15434,
											"end": 15473,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15489,
											"end": 15578,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "557"
										},
										{
											"begin": 15571,
											"end": 15577,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15566,
											"end": 15569,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 15489,
											"end": 15578,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "365"
										},
										{
											"begin": 15489,
											"end": 15578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15489,
											"end": 15578,
											"name": "tag",
											"source": 17,
											"value": "557"
										},
										{
											"begin": 15489,
											"end": 15578,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15482,
											"end": 15578,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 15482,
											"end": 15578,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15587,
											"end": 15652,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "558"
										},
										{
											"begin": 15645,
											"end": 15651,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15640,
											"end": 15643,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 15633,
											"end": 15637,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15626,
											"end": 15631,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 15622,
											"end": 15638,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15587,
											"end": 15652,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "335"
										},
										{
											"begin": 15587,
											"end": 15652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15587,
											"end": 15652,
											"name": "tag",
											"source": 17,
											"value": "558"
										},
										{
											"begin": 15587,
											"end": 15652,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15677,
											"end": 15683,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 15672,
											"end": 15675,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15668,
											"end": 15684,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15661,
											"end": 15684,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15661,
											"end": 15684,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15410,
											"end": 15690,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15300,
											"end": 15690,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 15300,
											"end": 15690,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15300,
											"end": 15690,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15300,
											"end": 15690,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15300,
											"end": 15690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15696,
											"end": 16131,
											"name": "tag",
											"source": 17,
											"value": "231"
										},
										{
											"begin": 15696,
											"end": 16131,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15876,
											"end": 15879,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15898,
											"end": 15993,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "560"
										},
										{
											"begin": 15989,
											"end": 15992,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15980,
											"end": 15986,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 15898,
											"end": 15993,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "366"
										},
										{
											"begin": 15898,
											"end": 15993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15898,
											"end": 15993,
											"name": "tag",
											"source": 17,
											"value": "560"
										},
										{
											"begin": 15898,
											"end": 15993,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15891,
											"end": 15993,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15891,
											"end": 15993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16010,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "561"
										},
										{
											"begin": 16101,
											"end": 16104,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16092,
											"end": 16098,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16010,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "366"
										},
										{
											"begin": 16010,
											"end": 16105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16010,
											"end": 16105,
											"name": "tag",
											"source": 17,
											"value": "561"
										},
										{
											"begin": 16010,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16003,
											"end": 16105,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16003,
											"end": 16105,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16122,
											"end": 16125,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16115,
											"end": 16125,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16115,
											"end": 16125,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15696,
											"end": 16131,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 15696,
											"end": 16131,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 15696,
											"end": 16131,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15696,
											"end": 16131,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15696,
											"end": 16131,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15696,
											"end": 16131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16137,
											"end": 16278,
											"name": "tag",
											"source": 17,
											"value": "367"
										},
										{
											"begin": 16137,
											"end": 16278,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16186,
											"end": 16190,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16209,
											"end": 16212,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16201,
											"end": 16212,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16201,
											"end": 16212,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16232,
											"end": 16235,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16229,
											"end": 16230,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16222,
											"end": 16236,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16266,
											"end": 16270,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16263,
											"end": 16264,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16253,
											"end": 16271,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 16245,
											"end": 16271,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16245,
											"end": 16271,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16137,
											"end": 16278,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16137,
											"end": 16278,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16137,
											"end": 16278,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16137,
											"end": 16278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16284,
											"end": 16377,
											"name": "tag",
											"source": 17,
											"value": "368"
										},
										{
											"begin": 16284,
											"end": 16377,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16321,
											"end": 16327,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16368,
											"end": 16370,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16363,
											"end": 16365,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 16356,
											"end": 16361,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16352,
											"end": 16366,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16348,
											"end": 16371,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 16338,
											"end": 16371,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16338,
											"end": 16371,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16284,
											"end": 16377,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16284,
											"end": 16377,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16284,
											"end": 16377,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16284,
											"end": 16377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16383,
											"end": 16490,
											"name": "tag",
											"source": 17,
											"value": "369"
										},
										{
											"begin": 16383,
											"end": 16490,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16427,
											"end": 16435,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16477,
											"end": 16482,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16471,
											"end": 16475,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16467,
											"end": 16483,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 16446,
											"end": 16483,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16446,
											"end": 16483,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16383,
											"end": 16490,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 16383,
											"end": 16490,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16383,
											"end": 16490,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16383,
											"end": 16490,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16383,
											"end": 16490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16496,
											"end": 16889,
											"name": "tag",
											"source": 17,
											"value": "370"
										},
										{
											"begin": 16496,
											"end": 16889,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16565,
											"end": 16571,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16615,
											"end": 16616,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 16603,
											"end": 16613,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16599,
											"end": 16617,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 16638,
											"end": 16735,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "566"
										},
										{
											"begin": 16668,
											"end": 16734,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16657,
											"end": 16666,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16638,
											"end": 16735,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "369"
										},
										{
											"begin": 16638,
											"end": 16735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16638,
											"end": 16735,
											"name": "tag",
											"source": 17,
											"value": "566"
										},
										{
											"begin": 16638,
											"end": 16735,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16756,
											"end": 16795,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "567"
										},
										{
											"begin": 16786,
											"end": 16794,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 16775,
											"end": 16784,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16756,
											"end": 16795,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "369"
										},
										{
											"begin": 16756,
											"end": 16795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16756,
											"end": 16795,
											"name": "tag",
											"source": 17,
											"value": "567"
										},
										{
											"begin": 16756,
											"end": 16795,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16744,
											"end": 16795,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 16744,
											"end": 16795,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16828,
											"end": 16832,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 16824,
											"end": 16833,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 16817,
											"end": 16822,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16813,
											"end": 16834,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 16804,
											"end": 16834,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 16804,
											"end": 16834,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16877,
											"end": 16881,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 16867,
											"end": 16875,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 16863,
											"end": 16882,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 16856,
											"end": 16861,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16853,
											"end": 16883,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 16843,
											"end": 16883,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 16843,
											"end": 16883,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16572,
											"end": 16889,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16572,
											"end": 16889,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16496,
											"end": 16889,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 16496,
											"end": 16889,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 16496,
											"end": 16889,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16496,
											"end": 16889,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16496,
											"end": 16889,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16496,
											"end": 16889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16895,
											"end": 16955,
											"name": "tag",
											"source": 17,
											"value": "371"
										},
										{
											"begin": 16895,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16923,
											"end": 16926,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16944,
											"end": 16949,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16937,
											"end": 16949,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16937,
											"end": 16949,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16895,
											"end": 16955,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16895,
											"end": 16955,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16895,
											"end": 16955,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16895,
											"end": 16955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16961,
											"end": 17103,
											"name": "tag",
											"source": 17,
											"value": "372"
										},
										{
											"begin": 16961,
											"end": 17103,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17011,
											"end": 17020,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17044,
											"end": 17097,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 17062,
											"end": 17096,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "571"
										},
										{
											"begin": 17071,
											"end": 17095,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 17089,
											"end": 17094,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 17071,
											"end": 17095,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 17071,
											"end": 17095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17071,
											"end": 17095,
											"name": "tag",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 17071,
											"end": 17095,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17062,
											"end": 17096,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "371"
										},
										{
											"begin": 17062,
											"end": 17096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17062,
											"end": 17096,
											"name": "tag",
											"source": 17,
											"value": "571"
										},
										{
											"begin": 17062,
											"end": 17096,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17044,
											"end": 17097,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 17044,
											"end": 17097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17044,
											"end": 17097,
											"name": "tag",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 17044,
											"end": 17097,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17031,
											"end": 17097,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17031,
											"end": 17097,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16961,
											"end": 17103,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16961,
											"end": 17103,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16961,
											"end": 17103,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16961,
											"end": 17103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17109,
											"end": 17184,
											"name": "tag",
											"source": 17,
											"value": "373"
										},
										{
											"begin": 17109,
											"end": 17184,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17152,
											"end": 17155,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17173,
											"end": 17178,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17166,
											"end": 17178,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17166,
											"end": 17178,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17109,
											"end": 17184,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17109,
											"end": 17184,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17109,
											"end": 17184,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17109,
											"end": 17184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17190,
											"end": 17459,
											"name": "tag",
											"source": 17,
											"value": "374"
										},
										{
											"begin": 17190,
											"end": 17459,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17300,
											"end": 17339,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 17331,
											"end": 17338,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17300,
											"end": 17339,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "372"
										},
										{
											"begin": 17300,
											"end": 17339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17300,
											"end": 17339,
											"name": "tag",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 17300,
											"end": 17339,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17361,
											"end": 17452,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 17410,
											"end": 17451,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 17434,
											"end": 17450,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17410,
											"end": 17451,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "373"
										},
										{
											"begin": 17410,
											"end": 17451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17410,
											"end": 17451,
											"name": "tag",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 17410,
											"end": 17451,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17402,
											"end": 17408,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 17395,
											"end": 17399,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 17389,
											"end": 17400,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 17361,
											"end": 17452,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "370"
										},
										{
											"begin": 17361,
											"end": 17452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17361,
											"end": 17452,
											"name": "tag",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 17361,
											"end": 17452,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17355,
											"end": 17359,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17348,
											"end": 17453,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 17266,
											"end": 17459,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17190,
											"end": 17459,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17190,
											"end": 17459,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17190,
											"end": 17459,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17190,
											"end": 17459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17465,
											"end": 17538,
											"name": "tag",
											"source": 17,
											"value": "375"
										},
										{
											"begin": 17465,
											"end": 17538,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17510,
											"end": 17513,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17465,
											"end": 17538,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17465,
											"end": 17538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17544,
											"end": 17733,
											"name": "tag",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 17544,
											"end": 17733,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17621,
											"end": 17653,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "580"
										},
										{
											"begin": 17621,
											"end": 17653,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "375"
										},
										{
											"begin": 17621,
											"end": 17653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17621,
											"end": 17653,
											"name": "tag",
											"source": 17,
											"value": "580"
										},
										{
											"begin": 17621,
											"end": 17653,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17662,
											"end": 17727,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 17720,
											"end": 17726,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17712,
											"end": 17718,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 17706,
											"end": 17710,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 17662,
											"end": 17727,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "374"
										},
										{
											"begin": 17662,
											"end": 17727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17662,
											"end": 17727,
											"name": "tag",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 17662,
											"end": 17727,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17597,
											"end": 17733,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17544,
											"end": 17733,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17544,
											"end": 17733,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17544,
											"end": 17733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17739,
											"end": 17925,
											"name": "tag",
											"source": 17,
											"value": "377"
										},
										{
											"begin": 17739,
											"end": 17925,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17799,
											"end": 17919,
											"name": "tag",
											"source": 17,
											"value": "583"
										},
										{
											"begin": 17799,
											"end": 17919,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17816,
											"end": 17819,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17809,
											"end": 17814,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17806,
											"end": 17820,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 17799,
											"end": 17919,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 17799,
											"end": 17919,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "585"
										},
										{
											"begin": 17799,
											"end": 17919,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 17870,
											"end": 17909,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 17907,
											"end": 17908,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17900,
											"end": 17905,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17870,
											"end": 17909,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 17870,
											"end": 17909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17870,
											"end": 17909,
											"name": "tag",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 17870,
											"end": 17909,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17843,
											"end": 17844,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 17836,
											"end": 17841,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17832,
											"end": 17845,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17823,
											"end": 17845,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17823,
											"end": 17845,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17799,
											"end": 17919,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "583"
										},
										{
											"begin": 17799,
											"end": 17919,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17799,
											"end": 17919,
											"name": "tag",
											"source": 17,
											"value": "585"
										},
										{
											"begin": 17799,
											"end": 17919,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17739,
											"end": 17925,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17739,
											"end": 17925,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17739,
											"end": 17925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17931,
											"end": 18474,
											"name": "tag",
											"source": 17,
											"value": "378"
										},
										{
											"begin": 17931,
											"end": 18474,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18032,
											"end": 18034,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 18027,
											"end": 18030,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18024,
											"end": 18035,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 18021,
											"end": 18467,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 18021,
											"end": 18467,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "588"
										},
										{
											"begin": 18021,
											"end": 18467,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 18066,
											"end": 18104,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "589"
										},
										{
											"begin": 18098,
											"end": 18103,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18066,
											"end": 18104,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "367"
										},
										{
											"begin": 18066,
											"end": 18104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18066,
											"end": 18104,
											"name": "tag",
											"source": 17,
											"value": "589"
										},
										{
											"begin": 18066,
											"end": 18104,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18150,
											"end": 18179,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "590"
										},
										{
											"begin": 18168,
											"end": 18178,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 18150,
											"end": 18179,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "368"
										},
										{
											"begin": 18150,
											"end": 18179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18150,
											"end": 18179,
											"name": "tag",
											"source": 17,
											"value": "590"
										},
										{
											"begin": 18150,
											"end": 18179,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18140,
											"end": 18148,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18136,
											"end": 18180,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18333,
											"end": 18335,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 18321,
											"end": 18331,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 18318,
											"end": 18336,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 18315,
											"end": 18364,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 18315,
											"end": 18364,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "591"
										},
										{
											"begin": 18315,
											"end": 18364,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 18354,
											"end": 18362,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18339,
											"end": 18362,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18339,
											"end": 18362,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18315,
											"end": 18364,
											"name": "tag",
											"source": 17,
											"value": "591"
										},
										{
											"begin": 18315,
											"end": 18364,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18377,
											"end": 18457,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 18433,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "593"
										},
										{
											"begin": 18451,
											"end": 18454,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 18433,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "368"
										},
										{
											"begin": 18433,
											"end": 18455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18433,
											"end": 18455,
											"name": "tag",
											"source": 17,
											"value": "593"
										},
										{
											"begin": 18433,
											"end": 18455,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18423,
											"end": 18431,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 18419,
											"end": 18456,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18406,
											"end": 18417,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18377,
											"end": 18457,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "377"
										},
										{
											"begin": 18377,
											"end": 18457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18377,
											"end": 18457,
											"name": "tag",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 18377,
											"end": 18457,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18036,
											"end": 18467,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18036,
											"end": 18467,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18021,
											"end": 18467,
											"name": "tag",
											"source": 17,
											"value": "588"
										},
										{
											"begin": 18021,
											"end": 18467,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17931,
											"end": 18474,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17931,
											"end": 18474,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17931,
											"end": 18474,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17931,
											"end": 18474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18480,
											"end": 18597,
											"name": "tag",
											"source": 17,
											"value": "379"
										},
										{
											"begin": 18480,
											"end": 18597,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18534,
											"end": 18542,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18584,
											"end": 18589,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18578,
											"end": 18582,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18574,
											"end": 18590,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 18553,
											"end": 18590,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18553,
											"end": 18590,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18480,
											"end": 18597,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 18480,
											"end": 18597,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18480,
											"end": 18597,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18480,
											"end": 18597,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18480,
											"end": 18597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18603,
											"end": 18772,
											"name": "tag",
											"source": 17,
											"value": "380"
										},
										{
											"begin": 18603,
											"end": 18772,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18647,
											"end": 18653,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18680,
											"end": 18731,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "596"
										},
										{
											"begin": 18728,
											"end": 18729,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18724,
											"end": 18730,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 18716,
											"end": 18721,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 18713,
											"end": 18714,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 18709,
											"end": 18722,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 18680,
											"end": 18731,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "379"
										},
										{
											"begin": 18680,
											"end": 18731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18680,
											"end": 18731,
											"name": "tag",
											"source": 17,
											"value": "596"
										},
										{
											"begin": 18680,
											"end": 18731,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18676,
											"end": 18732,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 18761,
											"end": 18765,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 18755,
											"end": 18759,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 18751,
											"end": 18766,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 18741,
											"end": 18766,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18741,
											"end": 18766,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18654,
											"end": 18772,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18603,
											"end": 18772,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 18603,
											"end": 18772,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18603,
											"end": 18772,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18603,
											"end": 18772,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18603,
											"end": 18772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18777,
											"end": 19072,
											"name": "tag",
											"source": 17,
											"value": "381"
										},
										{
											"begin": 18777,
											"end": 19072,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18853,
											"end": 18857,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18999,
											"end": 19028,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 19024,
											"end": 19027,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19018,
											"end": 19022,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 18999,
											"end": 19028,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "380"
										},
										{
											"begin": 18999,
											"end": 19028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18999,
											"end": 19028,
											"name": "tag",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 18999,
											"end": 19028,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18991,
											"end": 19028,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18991,
											"end": 19028,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19061,
											"end": 19064,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19058,
											"end": 19059,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 19054,
											"end": 19065,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 19048,
											"end": 19052,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19045,
											"end": 19066,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 19037,
											"end": 19066,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19037,
											"end": 19066,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18777,
											"end": 19072,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 18777,
											"end": 19072,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18777,
											"end": 19072,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18777,
											"end": 19072,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18777,
											"end": 19072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19077,
											"end": 20472,
											"name": "tag",
											"source": 17,
											"value": "239"
										},
										{
											"begin": 19077,
											"end": 20472,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19194,
											"end": 19231,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "600"
										},
										{
											"begin": 19227,
											"end": 19230,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19194,
											"end": 19231,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "333"
										},
										{
											"begin": 19194,
											"end": 19231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19194,
											"end": 19231,
											"name": "tag",
											"source": 17,
											"value": "600"
										},
										{
											"begin": 19194,
											"end": 19231,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19296,
											"end": 19314,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19288,
											"end": 19294,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19285,
											"end": 19315,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 19282,
											"end": 19338,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 19282,
											"end": 19338,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "601"
										},
										{
											"begin": 19282,
											"end": 19338,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 19318,
											"end": 19336,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 19318,
											"end": 19336,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 19318,
											"end": 19336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19318,
											"end": 19336,
											"name": "tag",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 19318,
											"end": 19336,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19282,
											"end": 19338,
											"name": "tag",
											"source": 17,
											"value": "601"
										},
										{
											"begin": 19282,
											"end": 19338,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19362,
											"end": 19400,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 19394,
											"end": 19398,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19388,
											"end": 19399,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 19362,
											"end": 19400,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "97"
										},
										{
											"begin": 19362,
											"end": 19400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19362,
											"end": 19400,
											"name": "tag",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 19362,
											"end": 19400,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19447,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "604"
										},
										{
											"begin": 19507,
											"end": 19513,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19499,
											"end": 19505,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19493,
											"end": 19497,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 19447,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "378"
										},
										{
											"begin": 19447,
											"end": 19514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19447,
											"end": 19514,
											"name": "tag",
											"source": 17,
											"value": "604"
										},
										{
											"begin": 19447,
											"end": 19514,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19541,
											"end": 19542,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19565,
											"end": 19569,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19552,
											"end": 19569,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19552,
											"end": 19569,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19597,
											"end": 19599,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 19589,
											"end": 19595,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19586,
											"end": 19600,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 19614,
											"end": 19615,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 19609,
											"end": 20227,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19609,
											"end": 20227,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 19609,
											"end": 20227,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "606"
										},
										{
											"begin": 19609,
											"end": 20227,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 20271,
											"end": 20272,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20288,
											"end": 20294,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 20285,
											"end": 20362,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 20285,
											"end": 20362,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "607"
										},
										{
											"begin": 20285,
											"end": 20362,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 20337,
											"end": 20346,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20332,
											"end": 20335,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 20328,
											"end": 20347,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20322,
											"end": 20348,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 20313,
											"end": 20348,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20313,
											"end": 20348,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20285,
											"end": 20362,
											"name": "tag",
											"source": 17,
											"value": "607"
										},
										{
											"begin": 20285,
											"end": 20362,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20388,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "608"
										},
										{
											"begin": 20448,
											"end": 20454,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 20441,
											"end": 20446,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20388,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "381"
										},
										{
											"begin": 20388,
											"end": 20455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20388,
											"end": 20455,
											"name": "tag",
											"source": 17,
											"value": "608"
										},
										{
											"begin": 20388,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20382,
											"end": 20386,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 20375,
											"end": 20456,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 20244,
											"end": 20466,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19579,
											"end": 20466,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "605"
										},
										{
											"begin": 19579,
											"end": 20466,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19609,
											"end": 20227,
											"name": "tag",
											"source": 17,
											"value": "606"
										},
										{
											"begin": 19609,
											"end": 20227,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19661,
											"end": 19665,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 19657,
											"end": 19666,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 19649,
											"end": 19655,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 19645,
											"end": 19667,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 19695,
											"end": 19732,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "609"
										},
										{
											"begin": 19727,
											"end": 19731,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 19695,
											"end": 19732,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "367"
										},
										{
											"begin": 19695,
											"end": 19732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19695,
											"end": 19732,
											"name": "tag",
											"source": 17,
											"value": "609"
										},
										{
											"begin": 19695,
											"end": 19732,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19754,
											"end": 19755,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19768,
											"end": 19976,
											"name": "tag",
											"source": 17,
											"value": "610"
										},
										{
											"begin": 19768,
											"end": 19976,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19782,
											"end": 19789,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19779,
											"end": 19780,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19776,
											"end": 19790,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 19768,
											"end": 19976,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 19768,
											"end": 19976,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "612"
										},
										{
											"begin": 19768,
											"end": 19976,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 19861,
											"end": 19870,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 19856,
											"end": 19859,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 19852,
											"end": 19871,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19846,
											"end": 19872,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 19838,
											"end": 19844,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19831,
											"end": 19873,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 19912,
											"end": 19913,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 19904,
											"end": 19910,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19900,
											"end": 19914,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19890,
											"end": 19914,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19890,
											"end": 19914,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19959,
											"end": 19961,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19948,
											"end": 19957,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 19944,
											"end": 19962,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19931,
											"end": 19962,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 19931,
											"end": 19962,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19805,
											"end": 19809,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19802,
											"end": 19803,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19798,
											"end": 19810,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19793,
											"end": 19810,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19793,
											"end": 19810,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19768,
											"end": 19976,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "610"
										},
										{
											"begin": 19768,
											"end": 19976,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19768,
											"end": 19976,
											"name": "tag",
											"source": 17,
											"value": "612"
										},
										{
											"begin": 19768,
											"end": 19976,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20004,
											"end": 20010,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 19995,
											"end": 20002,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19992,
											"end": 20011,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 19989,
											"end": 20168,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 19989,
											"end": 20168,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "613"
										},
										{
											"begin": 19989,
											"end": 20168,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 20062,
											"end": 20071,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 20057,
											"end": 20060,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 20053,
											"end": 20072,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20047,
											"end": 20073,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 20105,
											"end": 20153,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "614"
										},
										{
											"begin": 20147,
											"end": 20151,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 20139,
											"end": 20145,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 20135,
											"end": 20152,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 20124,
											"end": 20133,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20105,
											"end": 20153,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "380"
										},
										{
											"begin": 20105,
											"end": 20153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20105,
											"end": 20153,
											"name": "tag",
											"source": 17,
											"value": "614"
										},
										{
											"begin": 20105,
											"end": 20153,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20097,
											"end": 20103,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20090,
											"end": 20154,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 20012,
											"end": 20168,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19989,
											"end": 20168,
											"name": "tag",
											"source": 17,
											"value": "613"
										},
										{
											"begin": 19989,
											"end": 20168,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20214,
											"end": 20215,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 20210,
											"end": 20211,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 20202,
											"end": 20208,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 20198,
											"end": 20212,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 20194,
											"end": 20216,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20188,
											"end": 20192,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 20181,
											"end": 20217,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 19616,
											"end": 20227,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19616,
											"end": 20227,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19616,
											"end": 20227,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19579,
											"end": 20466,
											"name": "tag",
											"source": 17,
											"value": "605"
										},
										{
											"begin": 19579,
											"end": 20466,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19579,
											"end": 20466,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19169,
											"end": 20472,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19169,
											"end": 20472,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19169,
											"end": 20472,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19077,
											"end": 20472,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19077,
											"end": 20472,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19077,
											"end": 20472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20478,
											"end": 20810,
											"name": "tag",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 20478,
											"end": 20810,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20599,
											"end": 20603,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20637,
											"end": 20639,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 20626,
											"end": 20635,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20622,
											"end": 20640,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20614,
											"end": 20640,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20614,
											"end": 20640,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20650,
											"end": 20721,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "616"
										},
										{
											"begin": 20718,
											"end": 20719,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20707,
											"end": 20716,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20703,
											"end": 20720,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20694,
											"end": 20700,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 20650,
											"end": 20721,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 20650,
											"end": 20721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20650,
											"end": 20721,
											"name": "tag",
											"source": 17,
											"value": "616"
										},
										{
											"begin": 20650,
											"end": 20721,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20731,
											"end": 20803,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "617"
										},
										{
											"begin": 20799,
											"end": 20801,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 20788,
											"end": 20797,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20784,
											"end": 20802,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20775,
											"end": 20781,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 20731,
											"end": 20803,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "346"
										},
										{
											"begin": 20731,
											"end": 20803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20731,
											"end": 20803,
											"name": "tag",
											"source": 17,
											"value": "617"
										},
										{
											"begin": 20731,
											"end": 20803,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20478,
											"end": 20810,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 20478,
											"end": 20810,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 20478,
											"end": 20810,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20478,
											"end": 20810,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20478,
											"end": 20810,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20478,
											"end": 20810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20816,
											"end": 20996,
											"name": "tag",
											"source": 17,
											"value": "297"
										},
										{
											"begin": 20816,
											"end": 20996,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20864,
											"end": 20941,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20861,
											"end": 20862,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20854,
											"end": 20942,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20961,
											"end": 20965,
											"name": "PUSH",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 20958,
											"end": 20959,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 20951,
											"end": 20966,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20985,
											"end": 20989,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 20982,
											"end": 20983,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20975,
											"end": 20990,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"MNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeMint(address,uint256,string)": "cd279c7c",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MNFT.sol\":\"MalluCrypto\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xde13f6ab310a659b9732f7f7ea3eed7c4d9925cc72e77e6554b2126563a143f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2176f1c5e871613bd6502558cc98d268e92167dcd546d15941587a670a48d4eb\",\"dweb:/ipfs/QmboYR7jbENha8ahFbWeHu2pHr5jjA9PuDzRDJHLvGDCBh\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0660592b105270f9166bbb80f18a3fd6506cfc4ab08a55909d374f4b584010d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbff0f7bd26d2a81e10bdac898eb6e887140103c87c1771b62ba1d4c8598896e\",\"dweb:/ipfs/QmSPznUTUWUD54WAbZFi84E4X8iVSNQTBJzYVBk9Ais7u5\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x79c59ccbed8a827ff823b63ffbf20d71b75e7710d01156f5632b94c4d963d26a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf5ad5707327ba21cb3629644525e4cbc2c0dfabc58131bf109c5d04dde9c4e\",\"dweb:/ipfs/Qmf99yZjMv7195AeoajfK57iPU2hyDWJbkwiXJYTmYnqfg\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0x8f3785d1308dee180265e23c7501c570ff1d83435788effbef6fa0ad9be97aae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d90f91cd654d621d6ca8e72ed2cd30e3b4004aac74f4229d500dfac695a98cc4\",\"dweb:/ipfs/QmdhuoZMkj2KY8AKfKSKWgL2bGHfv5Rui6oYb8U6tV2ePo\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbb8e61c91d4c2998ab2728541b5b0648f1c2887adc40320d05f2e59dfcd7b26f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17e87f4d08a4d91ed894c5dfd908c6940c2676456e1ca5f273e3bb2626b3949f\",\"dweb:/ipfs/QmbxfRXFKBGKEqQZjKX3MbKgQHjZBftUASUiAgBcak4W6p\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xcca838cc7c9ece1bf590cb2ddbfec56171605fa1763a4f23e8c8f8521a777220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64f2ffdf9a7f245af33220e7f6162c3013f429536057037418fb0f3e21d1aaab\",\"dweb:/ipfs/QmWDqgsUBSJDejsac8NwgdzqGbGhweFCigWz1UcKnGVqez\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x55017a91345ea407d28848575fec7577a10d4025f3e5f206d78e52074534c617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dc01ad2a60e330da1e8b61bf73ede01c65ff8e1077bf4b79367363583761946\",\"dweb:/ipfs/QmdA8SvocYva7PU6aUTygUfvHFQfEKvnVjJWQcLnqEdY1G\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa277a1f3d75b36598450617aaf1202affc99cadf7f162c90080875cf98f92930\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8eb967d37ca4b5103583257804478c1506c9a27ff339af2ed0f80481f0f4a354\",\"dweb:/ipfs/QmT95ws5ZxHtrEsqHUK6brBA4eRGtae6ggYf6vyMVX49JM\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xff8cc11100e2d530082b23fbf0bf74e4b182df8f2d33d31f13d9a33d060c0a6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d451b2e9b617f3ac651ce78bcb37bc32368621a7e98b92c69e2073e74cc7247b\",\"dweb:/ipfs/QmYnWcbAPkwg2w5cxN8D4UnTwgsrAxAG92QGXnwjVH8VGW\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x8097ab0621db02404597f6a74654b835035a3df43392c7c1de12fe3702d3b613\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d554004601f2cba955ed5c9c1537dab564a9c98258403d8b78d8ad4b3d2d245\",\"dweb:/ipfs/QmU5V1CFikeVzqaKBDc18bHPnroDhAh1Z5gHWgwo17gwFf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x32f1faf405d9d68f67d407d817ef8f4262be6e21223c04fa371b8c7a63762890\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e15ded8a8dfeaf5d5f6ab45c2520910f2f98381bc3136d64fc76894e0db49d1\",\"dweb:/ipfs/QmTYQqvbNnAjTB4hfQHMgnj3u9kNqkykfdCBY5TkXe6zp1\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x503f7cbbead49954851aa35f94e210b3b9adb4e003bc0cb4f838854802770dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfc2a1e5c6e329b0a83422342ea02773eb5ef1891c9c1caeab1bbfa4d5b26d52\",\"dweb:/ipfs/QmQaNcoCBijM5rQpHi53q5S9u5wnwsy8XwMeeEWbHgBoBq\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xce4e0bf91fc3bc1fb74403096ed7b80777df28e03154c9f64b049a862cef6557\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d8897ef365caecb89711a78a510a283a0faa56980e3048234c70ea8e43993ab\",\"dweb:/ipfs/QmZqX4RzBFMyJGYSTpDB5b2Fi2qzyicKTRNL2ozYi212Hb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xbc6690e09b5c0729776d3af9161cebf6e92fd7e7e1396ce9d542f69c8f04282c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d0ba319335c98b76bf697a19c59134284cc48c7e2b2d95bd958352b5955b566\",\"dweb:/ipfs/QmXxCoGxsEN4oAVjNtoD6LosFMSJGifVcSzVH5pKV6ushD\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x9c9194a1f6fbb7b8a837dc16686626b2093a9c6e46c812e14b0b09c8497b0213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542cb8cbe77cbb740d42beef23fe7a496711879c5ec843b89a8738e200a38e0b\",\"dweb:/ipfs/QmVpxj9wyTThYJWpoTc9mLWieiWj453h6b8mkLn8w2MdPG\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x95262f508a95ba186f276d838bfa43a58d27f479e016366e2115b8c075c907c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b060659a09a7e2a8f0c5cc4ce73c8d92e94a0a9ec54ea8860087137960b8ddb8\",\"dweb:/ipfs/QmSkoQ72fHYECah3MKDpqFu3CNgWGnGYiHYtXZDwDhzRM5\"]},\"MNFT.sol\":{\"keccak256\":\"0xb0f4a21f1a26a61df7e0f7d94f26722860273687a3fe509c1fe3e26969bf6d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f42646b4025bc0bbeebf09fac3a2cc16b9b9652d5ad5faa34767fac89b8f313f\",\"dweb:/ipfs/QmYmfM9mSJwzAoqo15GKRPsBonfUrLjcbVvVejvN69LN11\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "MNFT.sol:MalluCrypto",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "MNFT.sol:MalluCrypto",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "MNFT.sol:MalluCrypto",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "MNFT.sol:MalluCrypto",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "MNFT.sol:MalluCrypto",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "MNFT.sol:MalluCrypto",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1488,
								"contract": "MNFT.sol:MalluCrypto",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 8,
								"contract": "MNFT.sol:MalluCrypto",
								"label": "_owner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1644
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1645,
							"src": "127:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1644,
										"src": "135:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"691:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1644,
										"src": "691:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "691:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "174:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1644
							],
							"name": "Ownable",
							"nameLocation": "680:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "721:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "705:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "705:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "734:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "830:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "865:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "857:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "857:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:17:0"
									},
									"src": "824:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "880:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "973:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1001:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "993:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:15:0"
									},
									"src": "967:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1020:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1057:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1041:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1088:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1072:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1072:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1040:57:0"
									},
									"src": "1014:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1258:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1272:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1296:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1288:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1288:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1288:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1272:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1268:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1300:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1349:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1341:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1341:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1341:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1321:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1321:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1314:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1391:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1372:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1372:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1372:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1104:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1244:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1236:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1235:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1258:0:0"
									},
									"scope": 147,
									"src": "1224:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1520:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1530:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1530:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1530:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1553:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1417:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1508:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1517:2:0"
									},
									"src": "1499:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1692:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1709:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1702:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1567:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1646:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1651:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1683:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:9:0"
									},
									"scope": 147,
									"src": "1637:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1840:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1854:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1854:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "1865:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1865:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1854:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1850:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1879:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "1927:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1927:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1900:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1900:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1893:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1728:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1804:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1815:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1840:0:0"
									},
									"scope": 147,
									"src": "1795:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2346:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2383:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2375:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2375:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2375:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2356:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2356:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1963:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2336:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2336:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2336:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2301:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2318:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2346:0:0"
									},
									"scope": 147,
									"src": "2292:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2612:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2626:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2646:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2638:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2638:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2638:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2626:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2622:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2650:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2699:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2691:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2691:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2691:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2671:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2671:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2664:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2741:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2722:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2722:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2722:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2399:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2602:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2602:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2602:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2551:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2577:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2569:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2569:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2568:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2612:0:0"
									},
									"scope": 147,
									"src": "2542:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2974:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2992:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2984:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2984:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3003:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2984:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3019:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3028:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3019:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3019:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3072:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3082:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3051:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3051:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3046:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2763:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2920:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2947:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2939:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2939:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2938:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2974:0:0"
									},
									"scope": 147,
									"src": "2911:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "662:2438:0",
							"usedErrors": [
								13,
								18
							]
						}
					],
					"src": "102:2999:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1935
						]
					},
					"id": 152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 152,
							"sourceUnit": 1936,
							"src": "131:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1935,
										"src": "139:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:85:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							1935
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1442
						]
					},
					"id": 176,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 152,
							"src": "132:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 154,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1935,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 180,
							"src": "171:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 156,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "179:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 159,
										"name": "IERC165",
										"nameLocations": [
											"278:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1935,
										"src": "278:7:2"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "278:7:2"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721",
										"nameLocations": [
											"287:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "287:7:2"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:2"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 158,
								"nodeType": "StructuredDocumentation",
								"src": "211:45:2",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								1442,
								1935
							],
							"name": "IERC4906",
							"nameLocation": "266:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "301:201:2",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 167,
									"name": "MetadataUpdate",
									"nameLocation": "513:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "536:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "528:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "527:18:2"
									},
									"src": "507:39:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "552:212:2",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 174,
									"name": "BatchMetadataUpdate",
									"nameLocation": "775:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "803:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "795:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "825:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "817:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "794:42:2"
									},
									"src": "769:68:2"
								}
							],
							"scope": 176,
							"src": "256:583:2",
							"usedErrors": []
						}
					],
					"src": "107:733:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						]
					},
					"id": 180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 180,
							"sourceUnit": 1443,
							"src": "131:52:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 178,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "139:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:78:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							316
						],
						"IERC20Errors": [
							221
						],
						"IERC721Errors": [
							269
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 182,
								"nodeType": "StructuredDocumentation",
								"src": "137:139:4",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 221,
							"linearizedBaseContracts": [
								221
							],
							"name": "IERC20Errors",
							"nameLocation": "287:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "306:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 191,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "626:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "659:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "651:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "667:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "692:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "684:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:49:4"
									},
									"src": "620:80:4"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "706:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 196,
									"name": "ERC20InvalidSender",
									"nameLocation": "869:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "896:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "888:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:16:4"
									},
									"src": "863:41:4"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "910:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 201,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1080:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1109:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1101:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1101:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1100:18:4"
									},
									"src": "1074:45:4"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1125:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 210,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1481:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1516:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1508:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1508:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1533:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1525:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1525:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1552:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1544:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1507:52:4"
									},
									"src": "1475:85:4"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "1566:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 215,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1751:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1780:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1772:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1772:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1771:18:4"
									},
									"src": "1745:45:4"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "1796:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 220,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2002:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2030:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2022:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2021:17:4"
									},
									"src": "1996:43:4"
								}
							],
							"scope": 317,
							"src": "277:1764:4",
							"usedErrors": [
								191,
								196,
								201,
								210,
								215,
								220
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 222,
								"nodeType": "StructuredDocumentation",
								"src": "2043:141:4",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 269,
							"linearizedBaseContracts": [
								269
							],
							"name": "IERC721Errors",
							"nameLocation": "2195:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2215:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 227,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2445:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2472:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2464:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2464:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:15:4"
									},
									"src": "2439:40:4"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "2485:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 232,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2628:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2659:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2651:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2651:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2650:17:4"
									},
									"src": "2622:46:4"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "2674:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 241,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2974:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3003:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2995:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2995:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3019:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3011:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3011:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3036:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3028:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3028:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2994:48:4"
									},
									"src": "2968:75:4"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3049:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 246,
									"name": "ERC721InvalidSender",
									"nameLocation": "3212:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3240:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3232:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3232:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3231:16:4"
									},
									"src": "3206:42:4"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3254:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 251,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3424:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3454:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3446:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:18:4"
									},
									"src": "3418:46:4"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3470:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 258,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3728:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3763:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3755:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3755:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3781:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3773:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3773:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3754:35:4"
									},
									"src": "3722:68:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "3796:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 263,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3981:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4011:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4003:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4003:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4002:18:4"
									},
									"src": "3975:46:4"
								},
								{
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "4027:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 268,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4235:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4265:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "4257:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4257:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4256:18:4"
									},
									"src": "4229:46:4"
								}
							],
							"scope": 317,
							"src": "2185:2092:4",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "4279:143:4",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "IERC1155Errors",
							"nameLocation": "4433:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "4454:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 281,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4826:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4861:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4853:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4853:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4877:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4869:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4869:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4894:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4886:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4886:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4910:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4902:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4902:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4852:66:4"
									},
									"src": "4820:99:4"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4925:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 286,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5088:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5117:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5109:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5109:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5108:16:4"
									},
									"src": "5082:43:4"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "5131:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 291,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5301:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5332:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "5324:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5324:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5323:18:4"
									},
									"src": "5295:47:4"
								},
								{
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "5348:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 298,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5615:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5652:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5644:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5644:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5670:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5662:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5662:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5643:33:4"
									},
									"src": "5609:68:4"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "5683:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 303,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5868:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5899:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "5891:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5891:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5890:18:4"
									},
									"src": "5862:47:4"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "5915:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 308,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6123:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6154:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "6146:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6146:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6145:18:4"
									},
									"src": "6117:47:4"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "6170:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 315,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6461:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6495:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6487:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6487:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6514:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6506:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6506:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6486:41:4"
									},
									"src": "6455:73:4"
								}
							],
							"scope": 317,
							"src": "4423:2107:4",
							"usedErrors": [
								281,
								286,
								291,
								298,
								303,
								308,
								315
							]
						}
					],
					"src": "112:6419:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1644
						],
						"ERC165": [
							1923
						],
						"ERC721": [
							1325
						],
						"IERC165": [
							1935
						],
						"IERC721": [
							1442
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							1614
						],
						"IERC721Receiver": [
							1460
						],
						"Strings": [
							1899
						]
					},
					"id": 1326,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1443,
							"src": "132:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 319,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "140:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1461,
							"src": "171:54:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 321,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1460,
										"src": "179:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1615,
							"src": "226:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 323,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1614,
										"src": "234:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1645,
							"src": "292:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 325,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1644,
										"src": "300:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1900,
							"src": "341:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 327,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1899,
										"src": "349:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1924,
							"src": "390:69:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 329,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1935,
										"src": "398:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 330,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1923,
										"src": "407:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 333,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 317,
							"src": "460:66:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 332,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 269,
										"src": "468:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 335,
										"name": "Context",
										"nameLocations": [
											"803:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1644,
										"src": "803:7:5"
									},
									"id": 336,
									"nodeType": "InheritanceSpecifier",
									"src": "803:7:5"
								},
								{
									"baseName": {
										"id": 337,
										"name": "ERC165",
										"nameLocations": [
											"812:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1923,
										"src": "812:6:5"
									},
									"id": 338,
									"nodeType": "InheritanceSpecifier",
									"src": "812:6:5"
								},
								{
									"baseName": {
										"id": 339,
										"name": "IERC721",
										"nameLocations": [
											"820:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "820:7:5"
									},
									"id": 340,
									"nodeType": "InheritanceSpecifier",
									"src": "820:7:5"
								},
								{
									"baseName": {
										"id": 341,
										"name": "IERC721Metadata",
										"nameLocations": [
											"829:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1614,
										"src": "829:15:5"
									},
									"id": 342,
									"nodeType": "InheritanceSpecifier",
									"src": "829:15:5"
								},
								{
									"baseName": {
										"id": 343,
										"name": "IERC721Errors",
										"nameLocations": [
											"846:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 269,
										"src": "846:13:5"
									},
									"id": 344,
									"nodeType": "InheritanceSpecifier",
									"src": "846:13:5"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 334,
								"nodeType": "StructuredDocumentation",
								"src": "528:246:5",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1325,
							"linearizedBaseContracts": [
								1325,
								269,
								1614,
								1442,
								1923,
								1935,
								1644
							],
							"name": "ERC721",
							"nameLocation": "793:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 347,
									"libraryName": {
										"id": 345,
										"name": "Strings",
										"nameLocations": [
											"872:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1899,
										"src": "872:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "866:26:5",
									"typeName": {
										"id": 346,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "884:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 349,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "931:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "916:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 348,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "916:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 351,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "978:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "963:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 350,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "963:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 355,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1036:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "992:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 354,
										"keyName": "tokenId",
										"keyNameLocation": "1008:7:5",
										"keyType": {
											"id": 352,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1000:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "992:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 353,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1019:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 359,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1092:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1050:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 358,
										"keyName": "owner",
										"keyNameLocation": "1066:5:5",
										"keyType": {
											"id": 356,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1058:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1050:33:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 357,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1075:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 363,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1152:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1108:59:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 362,
										"keyName": "tokenId",
										"keyNameLocation": "1124:7:5",
										"keyType": {
											"id": 360,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1116:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1108:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 361,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1135:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 369,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1242:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1174:86:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 368,
										"keyName": "owner",
										"keyNameLocation": "1190:5:5",
										"keyType": {
											"id": 364,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1182:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1174:59:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 367,
											"keyName": "operator",
											"keyNameLocation": "1215:8:5",
											"keyType": {
												"id": 365,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1207:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1199:33:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 366,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1227:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "1436:57:5",
										"statements": [
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1446:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 378,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "1454:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1446:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1446:13:5"
											},
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1469:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 382,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "1479:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1469:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1469:17:5"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "1267:108:5",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 386,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1392:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1392:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1427:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1413:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1413:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1391:44:5"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1436:0:5"
									},
									"scope": 1325,
									"src": "1380:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1922,
										1934
									],
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "1668:192:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 397,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1697:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 399,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1442,
																			"src": "1717:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1442_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1442_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 398,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1712:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1712:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1442",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1726:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1712:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1697:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1753:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 405,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1614,
																			"src": "1773:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1614_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1614_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 404,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1768:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1768:21:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1614",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1790:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1768:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1753:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1697:104:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 412,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1841:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 410,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1817:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1325_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1823:17:5",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1922,
															"src": "1817:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1817:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1697:156:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 396,
												"id": 415,
												"nodeType": "Return",
												"src": "1678:175:5"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "1499:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1569:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 393,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 391,
												"name": "ERC165",
												"nameLocations": [
													"1636:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1923,
												"src": "1636:6:5"
											},
											{
												"id": 392,
												"name": "IERC165",
												"nameLocations": [
													"1644:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1935,
												"src": "1644:7:5"
											}
										],
										"src": "1627:25:5"
									},
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1594:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1587:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 388,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1587:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1586:20:5"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1662:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:5"
									},
									"scope": 1325,
									"src": "1560:300:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1367
									],
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "1991:136:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 425,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2005:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2022:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2014:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 426,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2014:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2014:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2005:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "2001:87:5",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "2026:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2074:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2066:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 432,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2066:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2066:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 431,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2047:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2047:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "2040:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 440,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "2104:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 442,
													"indexExpression": {
														"id": 441,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2114:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2104:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 424,
												"id": 443,
												"nodeType": "Return",
												"src": "2097:23:5"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "1866:48:5",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1928:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1946:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1938:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:15:5"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1982:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1981:9:5"
									},
									"scope": 1325,
									"src": "1919:208:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2256:46:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 454,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "2287:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2273:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2273:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 452,
												"id": 456,
												"nodeType": "Return",
												"src": "2266:29:5"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "2133:46:5",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2193:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2209:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2201:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2200:17:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2247:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2247:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2246:9:5"
									},
									"scope": 1325,
									"src": "2184:118:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1599
									],
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "2424:29:5",
										"statements": [
											{
												"expression": {
													"id": 464,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 349,
													"src": "2441:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 463,
												"id": 465,
												"nodeType": "Return",
												"src": "2434:12:5"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2308:51:5",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2373:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2377:2:5"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "2409:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 461,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2409:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2408:15:5"
									},
									"scope": 1325,
									"src": "2364:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1605
									],
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "2579:31:5",
										"statements": [
											{
												"expression": {
													"id": 473,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 351,
													"src": "2596:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 472,
												"id": 474,
												"nodeType": "Return",
												"src": "2589:14:5"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "2459:53:5",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2526:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2532:2:5"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2564:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 470,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2564:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:15:5"
									},
									"scope": 1325,
									"src": "2517:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1613
									],
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "2755:176:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 485,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "2779:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 484,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2765:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2765:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2765:22:5"
											},
											{
												"assignments": [
													489
												],
												"declarations": [
													{
														"constant": false,
														"id": 489,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2812:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "2798:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 488,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2798:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 490,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2822:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2822:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2798:34:5"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 495,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "2855:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2849:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 493,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2849:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2849:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2864:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2849:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2873:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2849:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2922:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2849:75:5",
													"trueExpression": {
														"arguments": [
															{
																"id": 503,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "2891:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 504,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "2900:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2908:8:5",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1712,
																	"src": "2900:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2900:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2877:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 500,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2877:6:5",
																	"typeDescriptions": {}
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2884:6:5",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2877:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2877:42:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 483,
												"id": 510,
												"nodeType": "Return",
												"src": "2842:82:5"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "2616:55:5",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2685:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2702:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2694:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:17:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2740:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2740:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:15:5"
									},
									"scope": 1325,
									"src": "2676:255:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "3239:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3256:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 517,
												"id": 519,
												"nodeType": "Return",
												"src": "3249:9:5"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "2937:231:5",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3182:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3190:2:5"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "3224:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3224:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3223:15:5"
									},
									"scope": 1325,
									"src": "3173:92:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1415
									],
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "3383:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "3402:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3406:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 532,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "3415:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3415:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 529,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128,
															1194
														],
														"referencedDeclaration": 1128,
														"src": "3393:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3393:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "3393:35:5"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "3271:46:5",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3331:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3347:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3339:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3339:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3359:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3351:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3351:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3338:29:5"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3383:0:5"
									},
									"scope": 1325,
									"src": "3322:113:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1431
									],
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "3572:78:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 546,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3596:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 545,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "3582:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3582:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "3582:22:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3635:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "3622:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3622:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 544,
												"id": 552,
												"nodeType": "Return",
												"src": "3615:28:5"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "3441:50:5",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3505:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3525:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3517:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3517:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:17:5"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3563:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3563:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3562:9:5"
									},
									"scope": 1325,
									"src": "3496:154:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1423
									],
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "3792:69:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 563,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "3821:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3821:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3835:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "3845:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 562,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "3802:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3802:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "3802:52:5"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "3656:56:5",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3726:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3752:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3744:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3744:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3767:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3762:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 558,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3762:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3743:33:5"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3792:0:5"
									},
									"scope": 1325,
									"src": "3717:144:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "4021:59:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 580,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "4038:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 582,
														"indexExpression": {
															"id": 581,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "4057:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4038:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 584,
													"indexExpression": {
														"id": 583,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "4064:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4038:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 579,
												"id": 585,
												"nodeType": "Return",
												"src": "4031:42:5"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "3867:55:5",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3936:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3961:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3953:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3953:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3976:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3968:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3968:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3952:33:5"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "4015:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4015:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:6:5"
									},
									"scope": 1325,
									"src": "3927:153:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1407
									],
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "4222:498:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 597,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "4236:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4250:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 598,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4242:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4242:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4236:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "4232:87:5",
												"trueBody": {
													"id": 610,
													"nodeType": "Block",
													"src": "4254:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4305:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4297:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 604,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4297:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4297:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 603,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "4275:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4275:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 609,
															"nodeType": "RevertStatement",
															"src": "4268:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4545:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4537:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 612,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4537:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "4569:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "4573:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 617,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "4582:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4582:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "4561:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4561:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4537:58:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 621,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "4609:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 622,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "4626:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4609:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 631,
												"nodeType": "IfStatement",
												"src": "4605:109:5",
												"trueBody": {
													"id": 630,
													"nodeType": "Block",
													"src": "4632:82:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 625,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "4674:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 626,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "4680:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 627,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "4689:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 624,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "4653:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4653:50:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 629,
															"nodeType": "RevertStatement",
															"src": "4646:57:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "4086:51:5",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4151:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4172:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4164:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4164:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4186:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4178:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4178:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4198:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4190:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4163:43:5"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4222:0:5"
									},
									"scope": 1325,
									"src": "4142:578:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1397
									],
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "4862:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4889:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4895:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "4899:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4908:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 643,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															651,
															677
														],
														"referencedDeclaration": 677,
														"src": "4872:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4872:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "4872:39:5"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "4726:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4795:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4820:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4812:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4834:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4826:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4826:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4846:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4838:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4838:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4811:43:5"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4862:0:5"
									},
									"scope": 1325,
									"src": "4786:132:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1387
									],
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "5087:105:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 664,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5110:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5116:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5120:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 663,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "5097:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5097:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "5097:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5161:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 671,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5167:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 672,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5171:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 673,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "5180:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 669,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "5138:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5138:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "5138:47:5"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "4924:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4993:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5018:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5010:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5010:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5032:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5024:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5024:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5044:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5036:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5036:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5066:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5053:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5053:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5009:62:5"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5087:0:5"
									},
									"scope": 1325,
									"src": "4984:208:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "5781:40:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 685,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "5798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 687,
													"indexExpression": {
														"id": 686,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "5806:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5798:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 684,
												"id": 688,
												"nodeType": "Return",
												"src": "5791:23:5"
											}
										]
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "5198:503:5",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5715:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5732:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5724:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5724:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5723:17:5"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5772:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5772:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5771:9:5"
									},
									"scope": 1325,
									"src": "5706:115:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "6016:48:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 698,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "6033:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 700,
													"indexExpression": {
														"id": 699,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "6049:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6033:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 697,
												"id": 701,
												"nodeType": "Return",
												"src": "6026:31:5"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "5827:105:5",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5946:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "5959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5959:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5958:17:5"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "6007:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6007:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6006:9:5"
									},
									"scope": 1325,
									"src": "5937:127:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "6484:163:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 715,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "6513:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6532:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6524:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 716,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6524:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6524:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6513:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 721,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 706,
																			"src": "6551:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 722,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 708,
																			"src": "6560:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6551:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 725,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 706,
																				"src": "6588:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 726,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 708,
																				"src": "6595:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 724,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "6571:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6571:32:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6551:52:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 730,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "6620:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 729,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 703,
																			"src": "6607:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6607:21:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 732,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 708,
																		"src": "6632:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6607:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6551:88:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 735,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6550:90:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6513:127:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 714,
												"id": 737,
												"nodeType": "Return",
												"src": "6494:146:5"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "6070:300:5",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6384:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6398:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6398:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6421:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6413:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6413:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6438:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6430:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6430:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6397:49:5"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6478:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 712,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6478:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6477:6:5"
									},
									"scope": 1325,
									"src": "6375:272:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "7178:271:5",
										"statements": [
											{
												"condition": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7192:39:5",
													"subExpression": {
														"arguments": [
															{
																"id": 750,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "7207:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 751,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "7214:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 752,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "7223:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 749,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "7193:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7193:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "IfStatement",
												"src": "7188:255:5",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "7233:210:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 755,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "7251:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7268:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7260:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 756,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7260:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7260:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7251:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 771,
																"nodeType": "Block",
																"src": "7349:84:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 767,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 744,
																					"src": "7401:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 768,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7410:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 766,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7374:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7374:44:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 770,
																		"nodeType": "RevertStatement",
																		"src": "7367:51:5"
																	}
																]
															},
															"id": 772,
															"nodeType": "IfStatement",
															"src": "7247:186:5",
															"trueBody": {
																"id": 765,
																"nodeType": "Block",
																"src": "7272:71:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 762,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7320:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 761,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 232,
																				"src": "7297:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7297:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 764,
																		"nodeType": "RevertStatement",
																		"src": "7290:38:5"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "6653:423:5",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7090:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7115:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7107:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7107:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7130:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7122:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7122:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7147:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7139:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7139:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7106:49:5"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7178:0:5"
									},
									"scope": 1325,
									"src": "7081:368:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "8166:78:5",
										"statements": [
											{
												"id": 790,
												"nodeType": "UncheckedBlock",
												"src": "8176:62:5",
												"statements": [
													{
														"expression": {
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 784,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "8200:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 786,
																"indexExpression": {
																	"id": 785,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "8210:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8200:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 787,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "8222:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8200:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 789,
														"nodeType": "ExpressionStatement",
														"src": "8200:27:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "7455:631:5",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8100:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8125:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8117:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8117:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8142:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8134:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 780,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8134:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8116:32:5"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8166:0:5"
									},
									"scope": 1325,
									"src": "8091:153:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "8932:700:5",
										"statements": [
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8950:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 881,
														"src": "8942:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 804,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8942:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"arguments": [
														{
															"id": 807,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "8966:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "8957:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8957:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8942:32:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 810,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "9034:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9050:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9042:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 811,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9042:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9042:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9034:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 823,
												"nodeType": "IfStatement",
												"src": "9030:86:5",
												"trueBody": {
													"id": 822,
													"nodeType": "Block",
													"src": "9054:62:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 817,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "9085:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 818,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "9091:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 819,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "9097:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 816,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "9068:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9068:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 821,
															"nodeType": "ExpressionStatement",
															"src": "9068:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 824,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "9160:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9176:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9168:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 825,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9168:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9168:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9160:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "9156:256:5",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "9180:232:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9293:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9285:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 831,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9285:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9285:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 835,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "9297:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9314:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9306:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 836,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9306:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9306:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9318:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 830,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1128,
																		1194
																	],
																	"referencedDeclaration": 1194,
																	"src": "9276:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9276:48:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 842,
															"nodeType": "ExpressionStatement",
															"src": "9276:48:5"
														},
														{
															"id": 849,
															"nodeType": "UncheckedBlock",
															"src": "9339:63:5",
															"statements": [
																{
																	"expression": {
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 843,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9367:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 845,
																			"indexExpression": {
																				"id": 844,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 805,
																				"src": "9377:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9367:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9386:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9367:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 848,
																	"nodeType": "ExpressionStatement",
																	"src": "9367:20:5"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 852,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9426:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9440:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9432:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 853,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9432:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9432:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9426:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 866,
												"nodeType": "IfStatement",
												"src": "9422:107:5",
												"trueBody": {
													"id": 865,
													"nodeType": "Block",
													"src": "9444:85:5",
													"statements": [
														{
															"id": 864,
															"nodeType": "UncheckedBlock",
															"src": "9458:61:5",
															"statements": [
																{
																	"expression": {
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 858,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9486:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 860,
																			"indexExpression": {
																				"id": 859,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 795,
																				"src": "9496:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9486:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9503:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9486:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 863,
																	"nodeType": "ExpressionStatement",
																	"src": "9486:18:5"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 867,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "9539:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 869,
														"indexExpression": {
															"id": 868,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9547:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9539:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 870,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9558:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9539:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "9539:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 874,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "9585:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "9591:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9595:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 873,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "9576:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9576:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "EmitStatement",
												"src": "9571:32:5"
											},
											{
												"expression": {
													"id": 879,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 805,
													"src": "9621:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 803,
												"id": 880,
												"nodeType": "Return",
												"src": "9614:11:5"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "8250:582:5",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8846:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8862:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8854:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8854:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8874:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8866:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8866:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8891:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8883:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8883:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8853:43:5"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8923:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8923:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8922:9:5"
									},
									"scope": 1325,
									"src": "8837:795:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "10007:274:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "10021:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10035:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10027:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10027:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10027:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10021:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "10017:87:5",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "10039:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10090:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10082:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 897,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10082:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10082:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 896,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "10060:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10060:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 902,
															"nodeType": "RevertStatement",
															"src": "10053:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													906
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10121:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "10113:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 905,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10113:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"arguments": [
														{
															"id": 908,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "10145:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "10149:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10166:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10158:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 910,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10158:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10158:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 907,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "10137:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10137:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10113:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 916,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "10183:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10208:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10200:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 917,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10200:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10200:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10183:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "10179:96:5",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "10212:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10261:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10253:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 923,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10253:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10253:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 922,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "10233:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10233:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 928,
															"nodeType": "RevertStatement",
															"src": "10226:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "9638:311:5",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9963:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9977:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "9969:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9969:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9989:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "9981:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9981:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9968:29:5"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10007:0:5"
									},
									"scope": 1325,
									"src": "9954:327:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "10689:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "10709:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "10713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10722:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 940,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															947,
															973
														],
														"referencedDeclaration": 973,
														"src": "10699:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10699:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "10699:26:5"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "10287:340:5",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10641:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10659:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "10651:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10651:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10671:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "10663:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10663:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10650:29:5"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10689:0:5"
									},
									"scope": 1325,
									"src": "10632:100:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "11037:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 958,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11053:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11057:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 957,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "11047:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11047:18:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "11047:18:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11106:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11098:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 963,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11098:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11098:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 967,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11110:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11114:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 969,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "11123:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 962,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "11075:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11075:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "11075:53:5"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "10738:210:5",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10962:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10980:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "10972:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10972:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10992:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "10984:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10984:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11014:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "11001:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 953,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11001:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10971:48:5"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11037:0:5"
									},
									"scope": 1325,
									"src": "10953:182:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "11502:186:5",
										"statements": [
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11520:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1005,
														"src": "11512:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 979,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11512:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 992,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11552:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11544:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 982,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11544:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11544:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "11556:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11573:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11565:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 987,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11565:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11565:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 981,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "11536:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11536:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11512:64:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 993,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "11590:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11615:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11607:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 994,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11607:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11607:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11590:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1004,
												"nodeType": "IfStatement",
												"src": "11586:96:5",
												"trueBody": {
													"id": 1003,
													"nodeType": "Block",
													"src": "11619:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1000,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "11663:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 999,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "11640:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11640:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1002,
															"nodeType": "RevertStatement",
															"src": "11633:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "11141:315:5",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11470:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11484:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "11476:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11476:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11475:17:5"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11502:0:5"
									},
									"scope": 1325,
									"src": "11461:227:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "12083:389:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1016,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "12097:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12111:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12103:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1017,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12103:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12103:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12097:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "12093:87:5",
												"trueBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "12115:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12166:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12158:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1023,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12158:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12158:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1022,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "12136:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12136:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1028,
															"nodeType": "RevertStatement",
															"src": "12129:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													1032
												],
												"declarations": [
													{
														"constant": false,
														"id": 1032,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12197:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1065,
														"src": "12189:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1031,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12189:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"arguments": [
														{
															"id": 1034,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "12221:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1035,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "12225:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12242:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12234:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1036,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12234:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12234:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1033,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "12213:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12213:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12189:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "12259:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12284:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12276:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1043,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12276:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12276:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12259:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1053,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "12361:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1054,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "12378:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12361:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1063,
													"nodeType": "IfStatement",
													"src": "12357:109:5",
													"trueBody": {
														"id": 1062,
														"nodeType": "Block",
														"src": "12384:82:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1057,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1009,
																			"src": "12426:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1058,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1013,
																			"src": "12432:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1059,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1032,
																			"src": "12441:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1056,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "12405:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12405:50:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1061,
																"nodeType": "RevertStatement",
																"src": "12398:57:5"
															}
														]
													}
												},
												"id": 1064,
												"nodeType": "IfStatement",
												"src": "12255:211:5",
												"trueBody": {
													"id": 1052,
													"nodeType": "Block",
													"src": "12288:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1049,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "12332:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1048,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "12309:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12309:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1051,
															"nodeType": "RevertStatement",
															"src": "12302:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "11694:313:5",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12021:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12039:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12031:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12031:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12053:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12045:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12045:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12065:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12057:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12057:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12030:43:5"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12083:0:5"
									},
									"scope": 1325,
									"src": "12012:460:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "13480:53:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1077,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "13504:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "13510:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "13514:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13523:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1076,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1084,
															1110
														],
														"referencedDeclaration": 1110,
														"src": "13490:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13490:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "13490:36:5"
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "12478:922:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13414:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13436:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13428:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13450:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13442:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13442:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13462:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13454:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13454:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13427:43:5"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13480:0:5"
									},
									"scope": 1325,
									"src": "13405:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "13872:102:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1097,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "13892:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1098,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "13898:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1099,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "13902:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1096,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "13882:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13882:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "13882:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1103,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "13943:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "13949:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "13953:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1106,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "13962:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1102,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "13920:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13920:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "13920:47:5"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "13539:226:5",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13779:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13801:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13793:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13793:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13815:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13807:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13807:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13827:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13819:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13819:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13849:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13836:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1092,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13836:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13792:62:5"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13872:0:5"
									},
									"scope": 1325,
									"src": "13770:204:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "14487:50:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1121,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "14506:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "14510:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1123,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "14519:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14525:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1120,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128,
															1194
														],
														"referencedDeclaration": 1194,
														"src": "14497:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14497:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "14497:33:5"
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "13980:432:5",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14426:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14435:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14435:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14455:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14447:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14472:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14464:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14464:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14434:43:5"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14487:0:5"
									},
									"scope": 1325,
									"src": "14417:120:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "14813:568:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1140,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "14879:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1141,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "14892:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14908:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14900:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1142,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14900:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14900:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14892:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14879:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "14875:460:5",
												"trueBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "14912:423:5",
													"statements": [
														{
															"assignments": [
																1149
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1149,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14934:5:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1185,
																	"src": "14926:13:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1148,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14926:7:5",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1153,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1151,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1133,
																		"src": "14956:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1150,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "14942:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14942:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14926:38:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1154,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "15092:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15108:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15100:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1155,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15100:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15100:10:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15092:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1160,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1149,
																			"src": "15114:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1161,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "15123:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15114:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15092:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15131:30:5",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1165,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1149,
																				"src": "15149:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1166,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1135,
																				"src": "15156:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1164,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "15132:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15132:29:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15092:69:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1175,
															"nodeType": "IfStatement",
															"src": "15088:142:5",
															"trueBody": {
																"id": 1174,
																"nodeType": "Block",
																"src": "15163:67:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1171,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1135,
																					"src": "15210:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1170,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 263,
																				"src": "15188:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15188:27:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1173,
																		"nodeType": "RevertStatement",
																		"src": "15181:34:5"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1176,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "15248:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1184,
															"nodeType": "IfStatement",
															"src": "15244:81:5",
															"trueBody": {
																"id": 1183,
																"nodeType": "Block",
																"src": "15259:66:5",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1178,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1149,
																					"src": "15291:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1179,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1131,
																					"src": "15298:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1180,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1133,
																					"src": "15302:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1177,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "15282:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15282:28:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1182,
																		"nodeType": "EmitStatement",
																		"src": "15277:33:5"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1187,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "15345:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1189,
														"indexExpression": {
															"id": 1188,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "15361:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15345:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1190,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "15372:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15345:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "15345:29:5"
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "14543:171:5",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14728:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14745:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14737:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14737:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14757:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14749:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14749:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14774:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14766:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14766:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14785:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14780:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14780:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14736:59:5"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14813:0:5"
									},
									"scope": 1325,
									"src": "14719:662:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "15683:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1204,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "15697:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15717:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15709:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1205,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15709:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15709:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15697:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1215,
												"nodeType": "IfStatement",
												"src": "15693:91:5",
												"trueBody": {
													"id": 1214,
													"nodeType": "Block",
													"src": "15721:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1211,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1199,
																		"src": "15764:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1210,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "15742:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15742:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1213,
															"nodeType": "RevertStatement",
															"src": "15735:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1216,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "15793:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1219,
															"indexExpression": {
																"id": 1217,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "15812:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15793:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1220,
														"indexExpression": {
															"id": 1218,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "15819:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15793:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1221,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "15831:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15793:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "15793:46:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1225,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "15869:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1226,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "15876:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "15886:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1224,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "15854:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15854:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "EmitStatement",
												"src": "15849:46:5"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "15387:198:5",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15599:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15626:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15618:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15618:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15641:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15633:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15633:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15656:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15651:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15651:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15617:48:5"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15683:0:5"
									},
									"scope": 1325,
									"src": "15590:312:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "16209:169:5",
										"statements": [
											{
												"assignments": [
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16227:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "16219:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1239,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16219:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1244,
												"initialValue": {
													"arguments": [
														{
															"id": 1242,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "16244:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1241,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "16235:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16235:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16219:33:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1245,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "16266:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16283:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16275:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16275:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16275:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16266:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1256,
												"nodeType": "IfStatement",
												"src": "16262:88:5",
												"trueBody": {
													"id": 1255,
													"nodeType": "Block",
													"src": "16287:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1252,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "16331:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1251,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "16308:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16308:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1254,
															"nodeType": "RevertStatement",
															"src": "16301:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1257,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1240,
													"src": "16366:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1238,
												"id": 1258,
												"nodeType": "Return",
												"src": "16359:12:5"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "15908:224:5",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16146:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16168:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "16160:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16160:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16159:17:5"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "16200:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16200:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16199:9:5"
									},
									"scope": 1325,
									"src": "16137:241:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "17019:680:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1272,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "17033:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17036:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17033:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17041:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17033:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17050:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17033:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1322,
												"nodeType": "IfStatement",
												"src": "17029:664:5",
												"trueBody": {
													"id": 1321,
													"nodeType": "Block",
													"src": "17053:640:5",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1301,
																		"nodeType": "Block",
																		"src": "17167:162:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1294,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1290,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1288,
																						"src": "17189:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1291,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1460,
																								"src": "17199:15:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1460_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1292,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17215:16:5",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1459,
																							"src": "17199:32:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1293,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17232:8:5",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17199:41:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17189:51:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1300,
																				"nodeType": "IfStatement",
																				"src": "17185:130:5",
																				"trueBody": {
																					"id": 1299,
																					"nodeType": "Block",
																					"src": "17242:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1296,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1265,
																										"src": "17293:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1295,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17271:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1297,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17271:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1298,
																							"nodeType": "RevertStatement",
																							"src": "17264:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1302,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1289,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1288,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17159:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1302,
																				"src": "17152:13:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1287,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17152:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17151:15:5"
																	},
																	"src": "17143:186:5"
																},
																{
																	"block": {
																		"id": 1318,
																		"nodeType": "Block",
																		"src": "17358:325:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1309,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1306,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1304,
																							"src": "17380:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1307,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17387:6:5",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17380:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1308,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17397:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17380:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1316,
																					"nodeType": "Block",
																					"src": "17479:190:5",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "17565:86:5",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "17602:2:5",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "17606:6:5"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "17598:3:5"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "17598:15:5"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "17621:6:5"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "17615:5:5"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "17615:13:5"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "17591:6:5"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "17591:38:5"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "17591:38:5"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "paris",
																							"externalReferences": [
																								{
																									"declaration": 1304,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17606:6:5",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1304,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17621:6:5",
																									"valueSize": 1
																								}
																							],
																							"id": 1315,
																							"nodeType": "InlineAssembly",
																							"src": "17556:95:5"
																						}
																					]
																				},
																				"id": 1317,
																				"nodeType": "IfStatement",
																				"src": "17376:293:5",
																				"trueBody": {
																					"id": 1314,
																					"nodeType": "Block",
																					"src": "17400:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1311,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1265,
																										"src": "17451:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1310,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17429:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1312,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17429:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1313,
																							"nodeType": "RevertStatement",
																							"src": "17422:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1319,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1305,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1304,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17350:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1319,
																				"src": "17337:19:5",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1303,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17337:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17336:21:5"
																	},
																	"src": "17330:353:5"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1281,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "17108:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17108:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1283,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "17122:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1284,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1267,
																		"src": "17128:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1285,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "17137:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1278,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1265,
																				"src": "17087:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1277,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1460,
																			"src": "17071:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1460_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17071:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1460",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17091:16:5",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1459,
																	"src": "17071:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17071:71:5",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1320,
															"nodeType": "TryStatement",
															"src": "17067:616:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "16384:528:5",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16926:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16957:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16949:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16949:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16971:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16963:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16963:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16983:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16975:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16975:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17005:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16992:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16992:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16948:62:5"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17019:0:5"
									},
									"scope": 1325,
									"src": "16917:782:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1326,
							"src": "775:16926:5",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							]
						}
					],
					"src": "107:17595:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1935
						],
						"IERC721": [
							1442
						]
					},
					"id": 1443,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1327,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1329,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1443,
							"sourceUnit": 1936,
							"src": "133:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1328,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1935,
										"src": "141:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1331,
										"name": "IERC165",
										"nameLocations": [
											"286:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1935,
										"src": "286:7:6"
									},
									"id": 1332,
									"nodeType": "InheritanceSpecifier",
									"src": "286:7:6"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1330,
								"nodeType": "StructuredDocumentation",
								"src": "197:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1442,
							"linearizedBaseContracts": [
								1442,
								1935
							],
							"name": "IERC721",
							"nameLocation": "275:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "300:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1341,
									"name": "Transfer",
									"nameLocation": "399:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "424:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "408:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "446:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "430:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "466:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "450:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "407:67:6"
									},
									"src": "393:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "481:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1350,
									"name": "Approval",
									"nameLocation": "586:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "611:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "595:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "595:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "634:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "618:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "660:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "644:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "594:74:6"
									},
									"src": "580:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "675:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1359,
									"name": "ApprovalForAll",
									"nameLocation": "803:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "834:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "818:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "857:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "841:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "872:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "867:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "867:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:64:6"
									},
									"src": "797:85:6"
								},
								{
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "888:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "978:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "996:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "988:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:15:6"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1034:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "1026:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1025:17:6"
									},
									"scope": 1442,
									"src": "969:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "1049:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1194:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1210:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1202:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1201:17:6"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1250:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1242:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1241:15:6"
									},
									"scope": 1442,
									"src": "1185:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "1263:565:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1842:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1867:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1859:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1859:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1881:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1873:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1893:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1885:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1885:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1917:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1902:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1902:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1858:64:6"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1931:0:6"
									},
									"scope": 1442,
									"src": "1833:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "1938:705:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2657:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2682:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2674:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2674:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2696:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2688:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2688:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2708:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2700:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2673:43:6"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2725:0:6"
									},
									"scope": 1442,
									"src": "2648:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "2732:732:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3478:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3499:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3491:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3491:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3513:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3505:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3505:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3525:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3517:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3517:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:43:6"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3542:0:6"
									},
									"scope": 1442,
									"src": "3469:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "3549:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4015:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4031:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4023:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4023:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4043:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4035:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4035:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4022:29:6"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4060:0:6"
									},
									"scope": 1442,
									"src": "4006:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "4067:315:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4396:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4422:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "4414:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4414:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4437:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "4432:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4432:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4413:33:6"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4455:0:6"
									},
									"scope": 1442,
									"src": "4387:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "4462:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4615:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4635:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4627:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4627:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4626:17:6"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4675:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4667:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4667:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4666:18:6"
									},
									"scope": 1442,
									"src": "4606:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "4691:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4843:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4868:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4860:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4883:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4875:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4875:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:33:6"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4916:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1438,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4916:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4915:6:6"
									},
									"scope": 1442,
									"src": "4834:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1443,
							"src": "265:4659:6",
							"usedErrors": []
						}
					],
					"src": "108:4817:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1460
						]
					},
					"id": 1461,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1444,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1445,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:7",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1460,
							"linearizedBaseContracts": [
								1460
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "326:500:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "840:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "874:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "866:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "900:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "892:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "922:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "914:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "954:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "939:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "939:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:108:7"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "983:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1456,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "983:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "982:8:7"
									},
									"scope": 1460,
									"src": "831:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1461,
							"src": "294:699:7",
							"usedErrors": []
						}
					],
					"src": "116:878:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1325
						],
						"ERC721URIStorage": [
							1586
						],
						"IERC165": [
							1935
						],
						"IERC4906": [
							175
						],
						"Strings": [
							1899
						]
					},
					"id": 1587,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1462,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "128:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1464,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 1326,
							"src": "153:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1463,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1325,
										"src": "161:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 1900,
							"src": "191:51:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1465,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1899,
										"src": "199:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 176,
							"src": "243:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1467,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 175,
										"src": "251:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 152,
							"src": "302:56:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1469,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1935,
										"src": "310:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1472,
										"name": "IERC4906",
										"nameLocations": [
											"468:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "468:8:8"
									},
									"id": 1473,
									"nodeType": "InheritanceSpecifier",
									"src": "468:8:8"
								},
								{
									"baseName": {
										"id": 1474,
										"name": "ERC721",
										"nameLocations": [
											"478:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "478:6:8"
									},
									"id": 1475,
									"nodeType": "InheritanceSpecifier",
									"src": "478:6:8"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1471,
								"nodeType": "StructuredDocumentation",
								"src": "360:69:8",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1586,
							"linearizedBaseContracts": [
								1586,
								1325,
								269,
								1614,
								175,
								1442,
								1923,
								1935,
								1644
							],
							"name": "ERC721URIStorage",
							"nameLocation": "448:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1478,
									"libraryName": {
										"id": 1476,
										"name": "Strings",
										"nameLocations": [
											"497:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1899,
										"src": "497:7:8"
									},
									"nodeType": "UsingForDirective",
									"src": "491:26:8",
									"typeName": {
										"id": 1477,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "509:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1484,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "729:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 1586,
									"src": "705:65:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1479,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "705:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1482,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "759:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1481,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "752:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1480,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "752:6:8",
												"typeDescriptions": {}
											}
										},
										"id": 1483,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "752:18:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1488,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "859:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1586,
									"src": "816:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1487,
										"keyName": "tokenId",
										"keyNameLocation": "832:7:8",
										"keyType": {
											"id": 1485,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "824:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "816:34:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1486,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "843:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										417,
										1934
									],
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "1044:99:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1499,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "1061:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1500,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "1076:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1061:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1504,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "1124:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1502,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1100:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1586_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1106:17:8",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 417,
															"src": "1100:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1100:36:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1061:75:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1498,
												"id": 1507,
												"nodeType": "Return",
												"src": "1054:82:8"
											}
										]
									},
									"documentation": {
										"id": 1489,
										"nodeType": "StructuredDocumentation",
										"src": "876:55:8",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "945:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1495,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1493,
												"name": "ERC721",
												"nameLocations": [
													"1012:6:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "1012:6:8"
											},
											{
												"id": 1494,
												"name": "IERC165",
												"nameLocations": [
													"1020:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1935,
												"src": "1020:7:8"
											}
										],
										"src": "1003:25:8"
									},
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "970:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "963:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1490,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "963:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:20:8"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "1038:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1496,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1038:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1037:6:8"
									},
									"scope": 1586,
									"src": "936:207:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										512
									],
									"body": {
										"id": 1565,
										"nodeType": "Block",
										"src": "1297:505:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1519,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "1321:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1518,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "1307:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1307:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "1307:22:8"
											},
											{
												"assignments": [
													1523
												],
												"declarations": [
													{
														"constant": false,
														"id": 1523,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1354:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1565,
														"src": "1340:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1522,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1340:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1527,
												"initialValue": {
													"baseExpression": {
														"id": 1524,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1488,
														"src": "1366:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1526,
													"indexExpression": {
														"id": 1525,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "1377:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1366:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1340:45:8"
											},
											{
												"assignments": [
													1529
												],
												"declarations": [
													{
														"constant": false,
														"id": 1529,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1409:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1565,
														"src": "1395:18:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1528,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1395:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1532,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1530,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1416:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1416:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1395:31:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1535,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1529,
																	"src": "1505:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1499:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1533,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1499:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1499:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1511:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1499:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1521:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1499:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1543,
												"nodeType": "IfStatement",
												"src": "1495:70:8",
												"trueBody": {
													"id": 1542,
													"nodeType": "Block",
													"src": "1524:41:8",
													"statements": [
														{
															"expression": {
																"id": 1540,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "1545:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1517,
															"id": 1541,
															"nodeType": "Return",
															"src": "1538:16:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1546,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1523,
																	"src": "1670:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1664:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1544,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1664:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1664:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1681:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1664:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1690:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1664:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1559,
												"nodeType": "IfStatement",
												"src": "1660:95:8",
												"trueBody": {
													"id": 1558,
													"nodeType": "Block",
													"src": "1693:62:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1554,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1529,
																		"src": "1728:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1555,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "1734:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1714:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1551,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1714:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1721:6:8",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1714:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1714:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1517,
															"id": 1557,
															"nodeType": "Return",
															"src": "1707:37:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1562,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "1787:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1560,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1772:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1586_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1778:8:8",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 512,
														"src": "1772:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1772:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1517,
												"id": 1564,
												"nodeType": "Return",
												"src": "1765:30:8"
											}
										]
									},
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "1149:55:8",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1218:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1514,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1264:8:8"
									},
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1235:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1227:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:17:8"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1282:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1282:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1281:15:8"
									},
									"scope": 1586,
									"src": "1209:593:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1584,
										"nodeType": "Block",
										"src": "2002:86:8",
										"statements": [
											{
												"expression": {
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1574,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "2012:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1576,
														"indexExpression": {
															"id": 1575,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "2023:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2012:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1577,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1571,
														"src": "2034:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2012:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "2012:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1581,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "2073:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1580,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2058:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2058:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1583,
												"nodeType": "EmitStatement",
												"src": "2053:28:8"
											}
										]
									},
									"documentation": {
										"id": 1567,
										"nodeType": "StructuredDocumentation",
										"src": "1808:108:8",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1930:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1951:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "1943:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1943:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1974:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "1960:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1960:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1942:42:8"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2002:0:8"
									},
									"scope": 1586,
									"src": "1921:167:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1587,
							"src": "430:1660:8",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							]
						}
					],
					"src": "128:1963:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						],
						"IERC721Metadata": [
							1614
						]
					},
					"id": 1615,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1588,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "127:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1590,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1615,
							"sourceUnit": 1443,
							"src": "152:39:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1589,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "160:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1592,
										"name": "IERC721",
										"nameLocations": [
											"356:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "356:7:9"
									},
									"id": 1593,
									"nodeType": "InheritanceSpecifier",
									"src": "356:7:9"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1591,
								"nodeType": "StructuredDocumentation",
								"src": "193:133:9",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1614,
							"linearizedBaseContracts": [
								1614,
								1442,
								1935
							],
							"name": "IERC721Metadata",
							"nameLocation": "337:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1594,
										"nodeType": "StructuredDocumentation",
										"src": "370:58:9",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1599,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "442:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "446:2:9"
									},
									"returnParameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "472:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1596,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "472:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "471:15:9"
									},
									"scope": 1614,
									"src": "433:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1600,
										"nodeType": "StructuredDocumentation",
										"src": "493:60:9",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1605,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "567:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "573:2:9"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "599:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1602,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "599:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "598:15:9"
									},
									"scope": 1614,
									"src": "558:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1606,
										"nodeType": "StructuredDocumentation",
										"src": "620:90:9",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "724:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "741:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "733:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:17:9"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "773:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1610,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "773:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:15:9"
									},
									"scope": 1614,
									"src": "715:73:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1615,
							"src": "327:463:9",
							"usedErrors": []
						}
					],
					"src": "127:664:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1644
						]
					},
					"id": 1645,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1616,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1617,
								"nodeType": "StructuredDocumentation",
								"src": "126:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1644,
							"linearizedBaseContracts": [
								1644
							],
							"name": "Context",
							"nameLocation": "641:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "717:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1622,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "734:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "738:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "734:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1621,
												"id": 1624,
												"nodeType": "Return",
												"src": "727:17:10"
											}
										]
									},
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "664:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "674:2:10"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "708:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "707:9:10"
									},
									"scope": 1644,
									"src": "655:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "824:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1631,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "841:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "845:4:10",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "841:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1630,
												"id": 1633,
												"nodeType": "Return",
												"src": "834:15:10"
											}
										]
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "766:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "774:2:10"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "808:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1628,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "808:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "807:16:10"
									},
									"scope": 1644,
									"src": "757:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1642,
										"nodeType": "Block",
										"src": "934:25:10",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "951:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1639,
												"id": 1641,
												"nodeType": "Return",
												"src": "944:8:10"
											}
										]
									},
									"id": 1643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "871:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "891:2:10"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "925:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "924:9:10"
									},
									"scope": 1644,
									"src": "862:97:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1645,
							"src": "623:338:10",
							"usedErrors": []
						}
					],
					"src": "101:861:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2989
						],
						"SignedMath": [
							3094
						],
						"Strings": [
							1899
						]
					},
					"id": 1900,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1646,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1648,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1900,
							"sourceUnit": 2990,
							"src": "126:37:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1647,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2989,
										"src": "134:4:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1650,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1900,
							"sourceUnit": 3095,
							"src": "164:49:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1649,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3094,
										"src": "172:10:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1651,
								"nodeType": "StructuredDocumentation",
								"src": "215:34:11",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1899,
							"linearizedBaseContracts": [
								1899
							],
							"name": "Strings",
							"nameLocation": "258:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1654,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "297:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 1899,
									"src": "272:56:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1652,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "272:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1653,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "310:18:11",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1657,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "357:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 1899,
									"src": "334:42:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1655,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "334:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1656,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "374:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1658,
										"nodeType": "StructuredDocumentation",
										"src": "383:81:11",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1664,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "475:28:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "512:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "504:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "527:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "519:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "519:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:31:11"
									},
									"src": "469:66:11"
								},
								{
									"body": {
										"id": 1711,
										"nodeType": "Block",
										"src": "707:627:11",
										"statements": [
											{
												"id": 1710,
												"nodeType": "UncheckedBlock",
												"src": "717:611:11",
												"statements": [
													{
														"assignments": [
															1673
														],
														"declarations": [
															{
																"constant": false,
																"id": 1673,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "749:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 1710,
																"src": "741:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1672,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "741:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1680,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1676,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1667,
																		"src": "769:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1674,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2989,
																		"src": "758:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2989_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "763:5:11",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2809,
																	"src": "758:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "758:17:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "778:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "758:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "741:38:11"
													},
													{
														"assignments": [
															1682
														],
														"declarations": [
															{
																"constant": false,
																"id": 1682,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "807:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 1710,
																"src": "793:20:11",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1681,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "793:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1687,
														"initialValue": {
															"arguments": [
																{
																	"id": 1685,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1673,
																	"src": "827:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "816:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1683,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "820:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "816:18:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "793:41:11"
													},
													{
														"assignments": [
															1689
														],
														"declarations": [
															{
																"constant": false,
																"id": 1689,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "856:3:11",
																"nodeType": "VariableDeclaration",
																"scope": 1710,
																"src": "848:11:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1688,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "848:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1690,
														"nodeType": "VariableDeclarationStatement",
														"src": "848:11:11"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "929:67:11",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "947:35:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "958:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "970:2:11",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "974:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "966:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "966:15:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "954:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "954:28:11"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "947:3:11"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1682,
																"isOffset": false,
																"isSlot": false,
																"src": "958:6:11",
																"valueSize": 1
															},
															{
																"declaration": 1673,
																"isOffset": false,
																"isSlot": false,
																"src": "974:6:11",
																"valueSize": 1
															},
															{
																"declaration": 1689,
																"isOffset": false,
																"isSlot": false,
																"src": "947:3:11",
																"valueSize": 1
															}
														],
														"id": 1691,
														"nodeType": "InlineAssembly",
														"src": "920:76:11"
													},
													{
														"body": {
															"id": 1706,
															"nodeType": "Block",
															"src": "1022:269:11",
															"statements": [
																{
																	"expression": {
																		"id": 1694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1040:5:11",
																		"subExpression": {
																			"id": 1693,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1689,
																			"src": "1040:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1695,
																	"nodeType": "ExpressionStatement",
																	"src": "1040:5:11"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "1123:86:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "1153:3:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1167:5:11"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1174:2:11",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "1163:3:11"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1163:14:11"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nodeType": "YulIdentifier",
																									"src": "1179:10:11"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "1158:4:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1158:32:11"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "1145:7:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1145:46:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1145:46:11"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 1654,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1179:10:11",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1689,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1153:3:11",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1667,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1167:5:11",
																			"valueSize": 1
																		}
																	],
																	"id": 1696,
																	"nodeType": "InlineAssembly",
																	"src": "1114:95:11"
																},
																{
																	"expression": {
																		"id": 1699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1697,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1667,
																			"src": "1226:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1235:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1226:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1700,
																	"nodeType": "ExpressionStatement",
																	"src": "1226:11:11"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1701,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1667,
																			"src": "1259:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1268:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1259:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1705,
																	"nodeType": "IfStatement",
																	"src": "1255:21:11",
																	"trueBody": {
																		"id": 1704,
																		"nodeType": "Break",
																		"src": "1271:5:11"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1016:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1707,
														"nodeType": "WhileStatement",
														"src": "1009:282:11"
													},
													{
														"expression": {
															"id": 1708,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "1311:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1671,
														"id": 1709,
														"nodeType": "Return",
														"src": "1304:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1665,
										"nodeType": "StructuredDocumentation",
										"src": "541:90:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "645:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "662:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "654:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:15:11"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "692:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1669,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "692:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "691:15:11"
									},
									"scope": 1899,
									"src": "636:698:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1737,
										"nodeType": "Block",
										"src": "1510:92:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1723,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "1541:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1549:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1541:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1559:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1541:20:11",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1553:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1732,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1715,
																			"src": "1587:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1730,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3094,
																			"src": "1572:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3094_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1583:3:11",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3093,
																		"src": "1572:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1572:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1729,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1712,
																"src": "1563:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1563:31:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1527:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1720,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1527:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 1722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1534:6:11",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1527:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1527:68:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1719,
												"id": 1736,
												"nodeType": "Return",
												"src": "1520:75:11"
											}
										]
									},
									"documentation": {
										"id": 1713,
										"nodeType": "StructuredDocumentation",
										"src": "1340:89:11",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1443:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1465:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "1458:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1714,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1458:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1457:14:11"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "1495:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1717,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1495:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1494:15:11"
									},
									"scope": 1899,
									"src": "1434:168:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1757,
										"nodeType": "Block",
										"src": "1781:100:11",
										"statements": [
											{
												"id": 1756,
												"nodeType": "UncheckedBlock",
												"src": "1791:84:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1741,
																	"src": "1834:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1750,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1741,
																				"src": "1853:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1748,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2989,
																				"src": "1841:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2989_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1846:6:11",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2931,
																			"src": "1841:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1841:18:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1862:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1841:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1746,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1758,
																	1841,
																	1861
																],
																"referencedDeclaration": 1841,
																"src": "1822:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1822:42:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1745,
														"id": 1755,
														"nodeType": "Return",
														"src": "1815:49:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1739,
										"nodeType": "StructuredDocumentation",
										"src": "1608:94:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1716:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1736:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "1728:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:15:11"
									},
									"returnParameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "1766:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1743,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1766:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1765:15:11"
									},
									"scope": 1899,
									"src": "1707:174:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1840,
										"nodeType": "Block",
										"src": "2094:435:11",
										"statements": [
											{
												"assignments": [
													1769
												],
												"declarations": [
													{
														"constant": false,
														"id": 1769,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2112:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1840,
														"src": "2104:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1768,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2104:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1771,
												"initialValue": {
													"id": 1770,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1761,
													"src": "2125:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2104:26:11"
											},
											{
												"assignments": [
													1773
												],
												"declarations": [
													{
														"constant": false,
														"id": 1773,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2153:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1840,
														"src": "2140:19:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1772,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2140:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1782,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2172:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1777,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1763,
																	"src": "2176:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2172:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2185:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2172:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1775,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2162:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1774,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2166:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2140:47:11"
											},
											{
												"expression": {
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1783,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "2197:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1785,
														"indexExpression": {
															"hexValue": "30",
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2204:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2197:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2209:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2197:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1788,
												"nodeType": "ExpressionStatement",
												"src": "2197:15:11"
											},
											{
												"expression": {
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1789,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "2222:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1791,
														"indexExpression": {
															"hexValue": "31",
															"id": 1790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2229:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2222:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2234:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2222:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1794,
												"nodeType": "ExpressionStatement",
												"src": "2222:15:11"
											},
											{
												"body": {
													"id": 1823,
													"nodeType": "Block",
													"src": "2292:95:11",
													"statements": [
														{
															"expression": {
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1809,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1773,
																		"src": "2306:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1811,
																	"indexExpression": {
																		"id": 1810,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1796,
																		"src": "2313:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2306:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1812,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1654,
																		"src": "2318:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1816,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1813,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1769,
																			"src": "2329:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2342:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2329:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2318:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2306:40:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1818,
															"nodeType": "ExpressionStatement",
															"src": "2306:40:11"
														},
														{
															"expression": {
																"id": 1821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1819,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1769,
																	"src": "2360:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2375:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2360:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1822,
															"nodeType": "ExpressionStatement",
															"src": "2360:16:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1803,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1796,
														"src": "2280:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2284:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2280:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1824,
												"initializationExpression": {
													"assignments": [
														1796
													],
													"declarations": [
														{
															"constant": false,
															"id": 1796,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2260:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1824,
															"src": "2252:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1795,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2252:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1802,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2264:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1798,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1763,
																"src": "2268:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2264:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2277:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2264:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2252:26:11"
												},
												"loopExpression": {
													"expression": {
														"id": 1807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2287:3:11",
														"subExpression": {
															"id": 1806,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1796,
															"src": "2289:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1808,
													"nodeType": "ExpressionStatement",
													"src": "2287:3:11"
												},
												"nodeType": "ForStatement",
												"src": "2247:140:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1825,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "2400:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2414:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2400:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1834,
												"nodeType": "IfStatement",
												"src": "2396:96:11",
												"trueBody": {
													"id": 1833,
													"nodeType": "Block",
													"src": "2417:75:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1829,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1761,
																		"src": "2467:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1830,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1763,
																		"src": "2474:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1828,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1664,
																	"src": "2438:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2438:43:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1832,
															"nodeType": "RevertStatement",
															"src": "2431:50:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1837,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "2515:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2508:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1835,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2508:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2508:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1767,
												"id": 1839,
												"nodeType": "Return",
												"src": "2501:21:11"
											}
										]
									},
									"documentation": {
										"id": 1759,
										"nodeType": "StructuredDocumentation",
										"src": "1887:112:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2013:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2033:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "2025:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2048:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "2040:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2040:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:31:11"
									},
									"returnParameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "2079:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1765,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2079:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2078:15:11"
									},
									"scope": 1899,
									"src": "2004:525:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1860,
										"nodeType": "Block",
										"src": "2761:75:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1854,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1844,
																			"src": "2806:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2798:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1852,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2798:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2798:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2790:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1850,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2790:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2790:22:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1857,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "2814:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1849,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1758,
															1841,
															1861
														],
														"referencedDeclaration": 1841,
														"src": "2778:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2778:51:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1848,
												"id": 1859,
												"nodeType": "Return",
												"src": "2771:58:11"
											}
										]
									},
									"documentation": {
										"id": 1842,
										"nodeType": "StructuredDocumentation",
										"src": "2535:148:11",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2697:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2717:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "2709:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2709:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2708:14:11"
									},
									"returnParameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "2746:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1846,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2746:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2745:15:11"
									},
									"scope": 1899,
									"src": "2688:148:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1897,
										"nodeType": "Block",
										"src": "2991:104:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1873,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1864,
																		"src": "3014:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3008:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1871,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3008:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3008:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3017:6:11",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3008:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1878,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1866,
																		"src": "3033:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3027:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1876,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3027:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3027:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3036:6:11",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3027:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3008:34:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1885,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1864,
																			"src": "3062:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3056:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1883,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3056:5:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3056:8:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1882,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3046:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3046:19:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1891,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1866,
																			"src": "3085:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3079:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1889,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3079:5:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3079:8:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1888,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3069:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3069:19:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3046:42:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3008:80:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1870,
												"id": 1896,
												"nodeType": "Return",
												"src": "3001:87:11"
											}
										]
									},
									"documentation": {
										"id": 1862,
										"nodeType": "StructuredDocumentation",
										"src": "2842:66:11",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2922:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2942:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "2928:15:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1863,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2928:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2959:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "2945:15:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1865,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2945:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2927:34:11"
									},
									"returnParameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "2985:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1868,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2985:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2984:6:11"
									},
									"scope": 1899,
									"src": "2913:182:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1900,
							"src": "250:2847:11",
							"usedErrors": [
								1664
							]
						}
					],
					"src": "101:2997:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1923
						],
						"IERC165": [
							1935
						]
					},
					"id": 1924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1901,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1903,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1924,
							"sourceUnit": 1936,
							"src": "139:38:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1902,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1935,
										"src": "147:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1905,
										"name": "IERC165",
										"nameLocations": [
											"686:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1935,
										"src": "686:7:12"
									},
									"id": 1906,
									"nodeType": "InheritanceSpecifier",
									"src": "686:7:12"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1904,
								"nodeType": "StructuredDocumentation",
								"src": "179:478:12",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1923,
							"linearizedBaseContracts": [
								1923,
								1935
							],
							"name": "ERC165",
							"nameLocation": "676:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1934
									],
									"body": {
										"id": 1921,
										"nodeType": "Block",
										"src": "843:64:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1914,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "860:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1916,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1935,
																	"src": "880:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1935_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1935_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1915,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "875:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "875:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1935",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1918,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "889:11:12",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "875:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "860:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1913,
												"id": 1920,
												"nodeType": "Return",
												"src": "853:47:12"
											}
										]
									},
									"documentation": {
										"id": 1907,
										"nodeType": "StructuredDocumentation",
										"src": "700:56:12",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "770:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "795:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "788:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1908,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:20:12"
									},
									"returnParameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "837:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1911,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "837:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:6:12"
									},
									"scope": 1923,
									"src": "761:146:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1924,
							"src": "658:251:12",
							"usedErrors": []
						}
					],
					"src": "114:796:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1935
						]
					},
					"id": 1936,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1926,
								"nodeType": "StructuredDocumentation",
								"src": "140:279:13",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1935,
							"linearizedBaseContracts": [
								1935
							],
							"name": "IERC165",
							"nameLocation": "430:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1927,
										"nodeType": "StructuredDocumentation",
										"src": "444:340:13",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "798:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "823:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "816:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1928,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "816:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "815:20:13"
									},
									"returnParameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "859:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1931,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "859:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "858:6:13"
									},
									"scope": 1935,
									"src": "789:76:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1936,
							"src": "420:447:13",
							"usedErrors": []
						}
					],
					"src": "115:753:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2989
						]
					},
					"id": 2990,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1937,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1938,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:14",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2989,
							"linearizedBaseContracts": [
								2989
							],
							"name": "Math",
							"nameLocation": "210:4:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "221:50:14",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1941,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "282:20:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "302:2:14"
									},
									"src": "276:29:14"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1946,
									"members": [
										{
											"id": 1942,
											"name": "Floor",
											"nameLocation": "335:5:14",
											"nodeType": "EnumValue",
											"src": "335:5:14"
										},
										{
											"id": 1943,
											"name": "Ceil",
											"nameLocation": "378:4:14",
											"nodeType": "EnumValue",
											"src": "378:4:14"
										},
										{
											"id": 1944,
											"name": "Trunc",
											"nameLocation": "420:5:14",
											"nodeType": "EnumValue",
											"src": "420:5:14"
										},
										{
											"id": 1945,
											"name": "Expand",
											"nameLocation": "450:6:14",
											"nodeType": "EnumValue",
											"src": "450:6:14"
										}
									],
									"name": "Rounding",
									"nameLocation": "316:8:14",
									"nodeType": "EnumDefinition",
									"src": "311:169:14"
								},
								{
									"body": {
										"id": 1977,
										"nodeType": "Block",
										"src": "660:140:14",
										"statements": [
											{
												"id": 1976,
												"nodeType": "UncheckedBlock",
												"src": "670:124:14",
												"statements": [
													{
														"assignments": [
															1959
														],
														"declarations": [
															{
																"constant": false,
																"id": 1959,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "702:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 1976,
																"src": "694:9:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1958,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "694:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1963,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1960,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1949,
																"src": "706:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1961,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "710:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "706:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "694:17:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1964,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1959,
																"src": "729:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1965,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1949,
																"src": "733:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "729:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1971,
														"nodeType": "IfStatement",
														"src": "725:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "744:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "751:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1969,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "743:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1957,
															"id": 1970,
															"nodeType": "Return",
															"src": "736:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "775:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1973,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1959,
																	"src": "781:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1974,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "774:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1957,
														"id": 1975,
														"nodeType": "Return",
														"src": "767:16:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "486:93:14",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "593:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "608:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "600:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "600:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "619:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "611:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:22:14"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "645:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1953,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "645:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "651:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:15:14"
									},
									"scope": 2989,
									"src": "584:216:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2005,
										"nodeType": "Block",
										"src": "983:113:14",
										"statements": [
											{
												"id": 2004,
												"nodeType": "UncheckedBlock",
												"src": "993:97:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1990,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1983,
																"src": "1021:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1991,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1981,
																"src": "1025:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1021:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1997,
														"nodeType": "IfStatement",
														"src": "1017:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1036:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1043:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1995,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1035:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1989,
															"id": 1996,
															"nodeType": "Return",
															"src": "1028:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1067:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1999,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1981,
																		"src": "1073:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2000,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1983,
																		"src": "1077:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1073:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2002,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1066:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1989,
														"id": 2003,
														"nodeType": "Return",
														"src": "1059:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1979,
										"nodeType": "StructuredDocumentation",
										"src": "806:96:14",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "916:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "931:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "923:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "942:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "934:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "922:22:14"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "968:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1985,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "968:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "974:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:15:14"
									},
									"scope": 2989,
									"src": "907:189:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2047,
										"nodeType": "Block",
										"src": "1282:417:14",
										"statements": [
											{
												"id": 2046,
												"nodeType": "UncheckedBlock",
												"src": "1292:401:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2018,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2009,
																"src": "1550:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1555:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1550:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2025,
														"nodeType": "IfStatement",
														"src": "1546:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1566:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1572:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2023,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1565:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2017,
															"id": 2024,
															"nodeType": "Return",
															"src": "1558:16:14"
														}
													},
													{
														"assignments": [
															2027
														],
														"declarations": [
															{
																"constant": false,
																"id": 2027,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1596:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 2046,
																"src": "1588:9:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2026,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1588:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2031,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2028,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2009,
																"src": "1600:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2029,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2011,
																"src": "1604:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1600:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1588:17:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2032,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2027,
																	"src": "1623:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2033,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2009,
																	"src": "1627:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1623:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2035,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2011,
																"src": "1632:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1623:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2041,
														"nodeType": "IfStatement",
														"src": "1619:33:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1643:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1650:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2039,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1642:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2017,
															"id": 2040,
															"nodeType": "Return",
															"src": "1635:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1674:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2043,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2027,
																	"src": "1680:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2044,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1673:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2017,
														"id": 2045,
														"nodeType": "Return",
														"src": "1666:16:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2007,
										"nodeType": "StructuredDocumentation",
										"src": "1102:99:14",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1215:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1230:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "1222:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1241:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "1233:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:22:14"
									},
									"returnParameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "1267:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2013,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "1273:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1273:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:15:14"
									},
									"scope": 2989,
									"src": "1206:493:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2075,
										"nodeType": "Block",
										"src": "1886:114:14",
										"statements": [
											{
												"id": 2074,
												"nodeType": "UncheckedBlock",
												"src": "1896:98:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2060,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2053,
																"src": "1924:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1929:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1924:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2067,
														"nodeType": "IfStatement",
														"src": "1920:29:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1940:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1947:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2065,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1939:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2059,
															"id": 2066,
															"nodeType": "Return",
															"src": "1932:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1971:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2069,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2051,
																		"src": "1977:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2070,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2053,
																		"src": "1981:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1977:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2072,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1970:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2059,
														"id": 2073,
														"nodeType": "Return",
														"src": "1963:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2049,
										"nodeType": "StructuredDocumentation",
										"src": "1705:100:14",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1819:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1834:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "1826:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1826:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1845:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "1837:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1825:22:14"
									},
									"returnParameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "1871:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2055,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1871:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "1877:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1877:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:15:14"
									},
									"scope": 2989,
									"src": "1810:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2103,
										"nodeType": "Block",
										"src": "2197:114:14",
										"statements": [
											{
												"id": 2102,
												"nodeType": "UncheckedBlock",
												"src": "2207:98:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2088,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2081,
																"src": "2235:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2240:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2235:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2095,
														"nodeType": "IfStatement",
														"src": "2231:29:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2251:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2258:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2093,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2250:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2087,
															"id": 2094,
															"nodeType": "Return",
															"src": "2243:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2282:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2097,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2079,
																		"src": "2288:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2098,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2081,
																		"src": "2292:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2288:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2281:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2087,
														"id": 2101,
														"nodeType": "Return",
														"src": "2274:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2077,
										"nodeType": "StructuredDocumentation",
										"src": "2006:110:14",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2130:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2145:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "2137:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2137:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2156:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "2148:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2136:22:14"
									},
									"returnParameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "2182:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2083,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2182:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "2188:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2188:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2181:15:14"
									},
									"scope": 2989,
									"src": "2121:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2121,
										"nodeType": "Block",
										"src": "2448:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2114,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2107,
															"src": "2465:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2115,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "2469:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2465:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2118,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2109,
														"src": "2477:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2465:13:14",
													"trueExpression": {
														"id": 2117,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2107,
														"src": "2473:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2113,
												"id": 2120,
												"nodeType": "Return",
												"src": "2458:20:14"
											}
										]
									},
									"documentation": {
										"id": 2105,
										"nodeType": "StructuredDocumentation",
										"src": "2317:59:14",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2390:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2402:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "2394:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2394:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2413:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "2405:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2405:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2393:22:14"
									},
									"returnParameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "2439:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2439:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2438:9:14"
									},
									"scope": 2989,
									"src": "2381:104:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2139,
										"nodeType": "Block",
										"src": "2623:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2132,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2125,
															"src": "2640:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2133,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2127,
															"src": "2644:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2640:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2136,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2127,
														"src": "2652:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2640:13:14",
													"trueExpression": {
														"id": 2135,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2125,
														"src": "2648:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2131,
												"id": 2138,
												"nodeType": "Return",
												"src": "2633:20:14"
											}
										]
									},
									"documentation": {
										"id": 2123,
										"nodeType": "StructuredDocumentation",
										"src": "2491:60:14",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2565:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2577:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "2569:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2569:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2588:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "2580:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2580:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2568:22:14"
									},
									"returnParameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "2614:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2614:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2613:9:14"
									},
									"scope": 2989,
									"src": "2556:104:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2162,
										"nodeType": "Block",
										"src": "2844:82:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2150,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2143,
																	"src": "2899:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2151,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2145,
																	"src": "2903:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2899:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2153,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2898:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2154,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2143,
																		"src": "2909:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2155,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2145,
																		"src": "2913:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2909:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2157,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2908:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2918:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2908:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2898:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2149,
												"id": 2161,
												"nodeType": "Return",
												"src": "2891:28:14"
											}
										]
									},
									"documentation": {
										"id": 2141,
										"nodeType": "StructuredDocumentation",
										"src": "2666:102:14",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2782:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2798:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "2790:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2790:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2809:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "2801:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2801:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2789:22:14"
									},
									"returnParameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "2835:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2835:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2834:9:14"
									},
									"scope": 2989,
									"src": "2773:153:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2196,
										"nodeType": "Block",
										"src": "3218:260:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2173,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2168,
														"src": "3232:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3237:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3232:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2181,
												"nodeType": "IfStatement",
												"src": "3228:127:14",
												"trueBody": {
													"id": 2180,
													"nodeType": "Block",
													"src": "3240:115:14",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2176,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2166,
																	"src": "3339:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2177,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2168,
																	"src": "3343:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3339:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2172,
															"id": 2179,
															"nodeType": "Return",
															"src": "3332:12:14"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2182,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2166,
															"src": "3443:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3448:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3443:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2186,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2166,
																			"src": "3457:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3461:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3457:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2189,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3456:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2190,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2168,
																"src": "3466:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3456:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3470:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3456:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3443:28:14",
													"trueExpression": {
														"hexValue": "30",
														"id": 2185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3452:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2172,
												"id": 2195,
												"nodeType": "Return",
												"src": "3436:35:14"
											}
										]
									},
									"documentation": {
										"id": 2164,
										"nodeType": "StructuredDocumentation",
										"src": "2932:210:14",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3156:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3172:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "3164:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3164:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3183:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "3175:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3163:22:14"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "3209:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3209:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3208:9:14"
									},
									"scope": 2989,
									"src": "3147:331:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2322,
										"nodeType": "Block",
										"src": "3900:4018:14",
										"statements": [
											{
												"id": 2321,
												"nodeType": "UncheckedBlock",
												"src": "3910:4002:14",
												"statements": [
													{
														"assignments": [
															2210
														],
														"declarations": [
															{
																"constant": false,
																"id": 2210,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4239:5:14",
																"nodeType": "VariableDeclaration",
																"scope": 2321,
																"src": "4231:13:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2209,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4231:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2214,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2211,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "4247:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2212,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2202,
																"src": "4251:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4247:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4231:21:14"
													},
													{
														"assignments": [
															2216
														],
														"declarations": [
															{
																"constant": false,
																"id": 2216,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4319:5:14",
																"nodeType": "VariableDeclaration",
																"scope": 2321,
																"src": "4311:13:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2215,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4311:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2217,
														"nodeType": "VariableDeclarationStatement",
														"src": "4311:13:14"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4391:122:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4409:30:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4426:1:14"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4429:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4436:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4432:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4432:6:14"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "4419:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4419:20:14"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "4413:2:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4456:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4473:2:14"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4477:5:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4469:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4469:14:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4488:2:14"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4492:5:14"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4485:2:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4485:13:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4465:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4465:34:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "4456:5:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 2210,
																"isOffset": false,
																"isSlot": false,
																"src": "4477:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2210,
																"isOffset": false,
																"isSlot": false,
																"src": "4492:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2216,
																"isOffset": false,
																"isSlot": false,
																"src": "4456:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2200,
																"isOffset": false,
																"isSlot": false,
																"src": "4426:1:14",
																"valueSize": 1
															},
															{
																"declaration": 2202,
																"isOffset": false,
																"isSlot": false,
																"src": "4429:1:14",
																"valueSize": 1
															}
														],
														"id": 2218,
														"nodeType": "InlineAssembly",
														"src": "4382:131:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2219,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2216,
																"src": "4594:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4603:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4594:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2227,
														"nodeType": "IfStatement",
														"src": "4590:368:14",
														"trueBody": {
															"id": 2226,
															"nodeType": "Block",
															"src": "4606:352:14",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2222,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "4924:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2223,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2204,
																			"src": "4932:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4924:19:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2208,
																	"id": 2225,
																	"nodeType": "Return",
																	"src": "4917:26:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2228,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2204,
																"src": "5064:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2229,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2216,
																"src": "5079:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5064:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2235,
														"nodeType": "IfStatement",
														"src": "5060:88:14",
														"trueBody": {
															"id": 2234,
															"nodeType": "Block",
															"src": "5086:62:14",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2231,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1941,
																			"src": "5111:20:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5111:22:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2233,
																	"nodeType": "RevertStatement",
																	"src": "5104:29:14"
																}
															]
														}
													},
													{
														"assignments": [
															2237
														],
														"declarations": [
															{
																"constant": false,
																"id": 2237,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5411:9:14",
																"nodeType": "VariableDeclaration",
																"scope": 2321,
																"src": "5403:17:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2236,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5403:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2238,
														"nodeType": "VariableDeclarationStatement",
														"src": "5403:17:14"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5443:291:14",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5512:38:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5532:1:14"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5535:1:14"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "5538:11:14"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "5525:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5525:25:14"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "5512:9:14"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5632:41:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "5645:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "5655:9:14"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5666:5:14"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "5652:2:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5652:20:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5641:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5641:32:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "5632:5:14"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5690:30:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "5703:5:14"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "5710:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5699:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5699:21:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "5690:5:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 2204,
																"isOffset": false,
																"isSlot": false,
																"src": "5538:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2210,
																"isOffset": false,
																"isSlot": false,
																"src": "5666:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2210,
																"isOffset": false,
																"isSlot": false,
																"src": "5690:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2210,
																"isOffset": false,
																"isSlot": false,
																"src": "5703:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2216,
																"isOffset": false,
																"isSlot": false,
																"src": "5632:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2216,
																"isOffset": false,
																"isSlot": false,
																"src": "5645:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2237,
																"isOffset": false,
																"isSlot": false,
																"src": "5512:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2237,
																"isOffset": false,
																"isSlot": false,
																"src": "5655:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2237,
																"isOffset": false,
																"isSlot": false,
																"src": "5710:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2200,
																"isOffset": false,
																"isSlot": false,
																"src": "5532:1:14",
																"valueSize": 1
															},
															{
																"declaration": 2202,
																"isOffset": false,
																"isSlot": false,
																"src": "5535:1:14",
																"valueSize": 1
															}
														],
														"id": 2239,
														"nodeType": "InlineAssembly",
														"src": "5434:300:14"
													},
													{
														"assignments": [
															2241
														],
														"declarations": [
															{
																"constant": false,
																"id": 2241,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5946:4:14",
																"nodeType": "VariableDeclaration",
																"scope": 2321,
																"src": "5938:12:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2240,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5938:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2248,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2242,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2204,
																"src": "5953:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5968:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2244,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2204,
																			"src": "5972:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5968:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2246,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5967:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5953:31:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5938:46:14"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "6007:362:14",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6072:37:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6091:11:14"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6104:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6087:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6087:22:14"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "6072:11:14"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6176:25:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6189:5:14"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6196:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6185:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6185:16:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6176:5:14"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6316:39:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6336:1:14",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "6339:4:14"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6332:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6332:12:14"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "6346:4:14"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6328:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6328:23:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6353:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6324:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6324:31:14"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "6316:4:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 2204,
																"isOffset": false,
																"isSlot": false,
																"src": "6072:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2204,
																"isOffset": false,
																"isSlot": false,
																"src": "6091:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2210,
																"isOffset": false,
																"isSlot": false,
																"src": "6176:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2210,
																"isOffset": false,
																"isSlot": false,
																"src": "6189:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2241,
																"isOffset": false,
																"isSlot": false,
																"src": "6104:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2241,
																"isOffset": false,
																"isSlot": false,
																"src": "6196:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2241,
																"isOffset": false,
																"isSlot": false,
																"src": "6316:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2241,
																"isOffset": false,
																"isSlot": false,
																"src": "6339:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2241,
																"isOffset": false,
																"isSlot": false,
																"src": "6346:4:14",
																"valueSize": 1
															}
														],
														"id": 2249,
														"nodeType": "InlineAssembly",
														"src": "5998:371:14"
													},
													{
														"expression": {
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2250,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2210,
																"src": "6435:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2251,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2216,
																	"src": "6444:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2252,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2241,
																	"src": "6452:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6444:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6435:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2255,
														"nodeType": "ExpressionStatement",
														"src": "6435:21:14"
													},
													{
														"assignments": [
															2257
														],
														"declarations": [
															{
																"constant": false,
																"id": 2257,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6782:7:14",
																"nodeType": "VariableDeclaration",
																"scope": 2321,
																"src": "6774:15:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2256,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6774:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2264,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6793:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2259,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2204,
																			"src": "6797:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6793:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2261,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6792:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6812:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6792:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6774:39:14"
													},
													{
														"expression": {
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2265,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2257,
																"src": "7030:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7041:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2267,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2204,
																		"src": "7045:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2268,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "7059:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7045:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7041:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7030:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2272,
														"nodeType": "ExpressionStatement",
														"src": "7030:36:14"
													},
													{
														"expression": {
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2273,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2257,
																"src": "7099:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7110:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2275,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2204,
																		"src": "7114:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2276,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "7128:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7114:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7110:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7099:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2280,
														"nodeType": "ExpressionStatement",
														"src": "7099:36:14"
													},
													{
														"expression": {
															"id": 2287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2281,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2257,
																"src": "7169:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7180:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2283,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2204,
																		"src": "7184:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2284,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "7198:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7184:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7180:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7169:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2288,
														"nodeType": "ExpressionStatement",
														"src": "7169:36:14"
													},
													{
														"expression": {
															"id": 2295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2289,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2257,
																"src": "7239:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7250:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2291,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2204,
																		"src": "7254:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2292,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "7268:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7254:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7250:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7239:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2296,
														"nodeType": "ExpressionStatement",
														"src": "7239:36:14"
													},
													{
														"expression": {
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2297,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2257,
																"src": "7309:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7320:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2299,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2204,
																		"src": "7324:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2300,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "7338:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7324:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7320:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7309:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2304,
														"nodeType": "ExpressionStatement",
														"src": "7309:36:14"
													},
													{
														"expression": {
															"id": 2311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2305,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2257,
																"src": "7380:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7391:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2307,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2204,
																		"src": "7395:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2308,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2257,
																		"src": "7409:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7395:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7391:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7380:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2312,
														"nodeType": "ExpressionStatement",
														"src": "7380:36:14"
													},
													{
														"expression": {
															"id": 2317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2313,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "7850:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2314,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "7859:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2315,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2257,
																	"src": "7867:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7859:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7850:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2318,
														"nodeType": "ExpressionStatement",
														"src": "7850:24:14"
													},
													{
														"expression": {
															"id": 2319,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2207,
															"src": "7895:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2208,
														"id": 2320,
														"nodeType": "Return",
														"src": "7888:13:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2198,
										"nodeType": "StructuredDocumentation",
										"src": "3484:313:14",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3811:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3826:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "3818:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3818:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3837:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "3829:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3829:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3848:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "3840:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3840:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3817:43:14"
									},
									"returnParameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3892:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "3884:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3884:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3883:16:14"
									},
									"scope": 2989,
									"src": "3802:4116:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2365,
										"nodeType": "Block",
										"src": "8160:192:14",
										"statements": [
											{
												"assignments": [
													2339
												],
												"declarations": [
													{
														"constant": false,
														"id": 2339,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8178:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2365,
														"src": "8170:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8170:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2345,
												"initialValue": {
													"arguments": [
														{
															"id": 2341,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2326,
															"src": "8194:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2342,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2328,
															"src": "8197:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2343,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2330,
															"src": "8200:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2340,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2323,
															2366
														],
														"referencedDeclaration": 2323,
														"src": "8187:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8187:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8170:42:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2347,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2333,
																"src": "8243:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1946",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1946",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2346,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2988,
															"src": "8226:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1946_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8226:26:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2350,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "8263:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2351,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2328,
																	"src": "8266:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2352,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2330,
																	"src": "8269:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2349,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8256:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8256:25:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8284:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8256:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8226:59:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2362,
												"nodeType": "IfStatement",
												"src": "8222:101:14",
												"trueBody": {
													"id": 2361,
													"nodeType": "Block",
													"src": "8287:36:14",
													"statements": [
														{
															"expression": {
																"id": 2359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2357,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2339,
																	"src": "8301:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8311:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8301:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2360,
															"nodeType": "ExpressionStatement",
															"src": "8301:11:14"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2363,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2339,
													"src": "8339:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2337,
												"id": 2364,
												"nodeType": "Return",
												"src": "8332:13:14"
											}
										]
									},
									"documentation": {
										"id": 2324,
										"nodeType": "StructuredDocumentation",
										"src": "7924:121:14",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8059:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8074:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "8066:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8066:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8085:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "8077:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8077:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8096:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "8088:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8088:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8118:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "8109:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1946",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2332,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2331,
														"name": "Rounding",
														"nameLocations": [
															"8109:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "8109:8:14"
													},
													"referencedDeclaration": 1946,
													"src": "8109:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1946",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8065:62:14"
									},
									"returnParameters": {
										"id": 2337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "8151:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8151:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8150:9:14"
									},
									"scope": 2989,
									"src": "8050:302:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2477,
										"nodeType": "Block",
										"src": "8643:1585:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2374,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2369,
														"src": "8657:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2375,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8662:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8657:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2380,
												"nodeType": "IfStatement",
												"src": "8653:45:14",
												"trueBody": {
													"id": 2379,
													"nodeType": "Block",
													"src": "8665:33:14",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8686:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2373,
															"id": 2378,
															"nodeType": "Return",
															"src": "8679:8:14"
														}
													]
												}
											},
											{
												"assignments": [
													2382
												],
												"declarations": [
													{
														"constant": false,
														"id": 2382,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9385:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2477,
														"src": "9377:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2381,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9377:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2391,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9394:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2385,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2369,
																			"src": "9405:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2384,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2645,
																			2680
																		],
																		"referencedDeclaration": 2645,
																		"src": "9400:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9400:7:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9411:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9400:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2389,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9399:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9394:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9377:36:14"
											},
											{
												"id": 2476,
												"nodeType": "UncheckedBlock",
												"src": "9814:408:14",
												"statements": [
													{
														"expression": {
															"id": 2401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2392,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "9838:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2393,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "9848:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2394,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2369,
																					"src": "9857:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2395,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2382,
																					"src": "9861:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9857:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9848:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2398,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9847:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9872:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9847:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9838:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2402,
														"nodeType": "ExpressionStatement",
														"src": "9838:35:14"
													},
													{
														"expression": {
															"id": 2412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2403,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "9887:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2404,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "9897:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2407,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2405,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2369,
																					"src": "9906:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2406,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2382,
																					"src": "9910:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9906:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9897:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2409,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9896:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9921:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9896:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9887:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2413,
														"nodeType": "ExpressionStatement",
														"src": "9887:35:14"
													},
													{
														"expression": {
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2414,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "9936:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2415,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "9946:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2418,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2416,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2369,
																					"src": "9955:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2417,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2382,
																					"src": "9959:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9955:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9946:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9945:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9970:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9945:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9936:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2424,
														"nodeType": "ExpressionStatement",
														"src": "9936:35:14"
													},
													{
														"expression": {
															"id": 2434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2425,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "9985:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2426,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "9995:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2429,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2427,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2369,
																					"src": "10004:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2428,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2382,
																					"src": "10008:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10004:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9995:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2431,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9994:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10019:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9994:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9985:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2435,
														"nodeType": "ExpressionStatement",
														"src": "9985:35:14"
													},
													{
														"expression": {
															"id": 2445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2436,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "10034:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2437,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "10044:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2440,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2438,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2369,
																					"src": "10053:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2439,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2382,
																					"src": "10057:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10053:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10044:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2442,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10043:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10068:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10043:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10034:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2446,
														"nodeType": "ExpressionStatement",
														"src": "10034:35:14"
													},
													{
														"expression": {
															"id": 2456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2447,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "10083:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2448,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "10093:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2449,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2369,
																					"src": "10102:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2450,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2382,
																					"src": "10106:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10102:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10093:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2453,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10092:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10117:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10092:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10083:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2457,
														"nodeType": "ExpressionStatement",
														"src": "10083:35:14"
													},
													{
														"expression": {
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2458,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2382,
																"src": "10132:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2459,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "10142:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2460,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2369,
																					"src": "10151:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2461,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2382,
																					"src": "10155:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10151:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10142:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2464,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10141:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10166:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10141:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10132:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2468,
														"nodeType": "ExpressionStatement",
														"src": "10132:35:14"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2470,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2382,
																	"src": "10192:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2471,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2369,
																		"src": "10200:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2472,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2382,
																		"src": "10204:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10200:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2469,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "10188:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10188:23:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2373,
														"id": 2475,
														"nodeType": "Return",
														"src": "10181:30:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2367,
										"nodeType": "StructuredDocumentation",
										"src": "8358:223:14",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8595:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8608:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "8600:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8600:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8599:11:14"
									},
									"returnParameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "8634:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8634:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8633:9:14"
									},
									"scope": 2989,
									"src": "8586:1642:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2512,
										"nodeType": "Block",
										"src": "10404:164:14",
										"statements": [
											{
												"id": 2511,
												"nodeType": "UncheckedBlock",
												"src": "10414:148:14",
												"statements": [
													{
														"assignments": [
															2490
														],
														"declarations": [
															{
																"constant": false,
																"id": 2490,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10446:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2511,
																"src": "10438:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2489,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10438:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2494,
														"initialValue": {
															"arguments": [
																{
																	"id": 2492,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2481,
																	"src": "10460:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2491,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2478,
																	2513
																],
																"referencedDeclaration": 2478,
																"src": "10455:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10455:7:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10438:24:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2495,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2490,
																"src": "10483:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2497,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2484,
																						"src": "10510:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1946",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1946",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2496,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2988,
																					"src": "10493:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1946_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2498,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10493:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2501,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2499,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2490,
																						"src": "10523:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2500,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2490,
																						"src": "10532:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10523:15:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2502,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2481,
																					"src": "10541:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10523:19:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10493:49:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10549:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10493:57:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10545:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2508,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10492:59:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10483:68:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2488,
														"id": 2510,
														"nodeType": "Return",
														"src": "10476:75:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2479,
										"nodeType": "StructuredDocumentation",
										"src": "10234:89:14",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10337:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10350:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "10342:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10342:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10362:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "10353:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1946",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2483,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2482,
														"name": "Rounding",
														"nameLocations": [
															"10353:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "10353:8:14"
													},
													"referencedDeclaration": 1946,
													"src": "10353:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1946",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10341:30:14"
									},
									"returnParameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "10395:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10395:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10394:9:14"
									},
									"scope": 2989,
									"src": "10328:240:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2644,
										"nodeType": "Block",
										"src": "10759:922:14",
										"statements": [
											{
												"assignments": [
													2522
												],
												"declarations": [
													{
														"constant": false,
														"id": 2522,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10777:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2644,
														"src": "10769:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2521,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10769:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2524,
												"initialValue": {
													"hexValue": "30",
													"id": 2523,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10786:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10769:18:14"
											},
											{
												"id": 2641,
												"nodeType": "UncheckedBlock",
												"src": "10797:855:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2525,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2516,
																	"src": "10825:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10834:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10825:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10840:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10825:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2539,
														"nodeType": "IfStatement",
														"src": "10821:99:14",
														"trueBody": {
															"id": 2538,
															"nodeType": "Block",
															"src": "10843:77:14",
															"statements": [
																{
																	"expression": {
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2530,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2516,
																			"src": "10861:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10871:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10861:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2533,
																	"nodeType": "ExpressionStatement",
																	"src": "10861:13:14"
																},
																{
																	"expression": {
																		"id": 2536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2534,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2522,
																			"src": "10892:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10902:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10892:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2537,
																	"nodeType": "ExpressionStatement",
																	"src": "10892:13:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2540,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2516,
																	"src": "10937:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10946:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10937:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10951:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10937:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2554,
														"nodeType": "IfStatement",
														"src": "10933:96:14",
														"trueBody": {
															"id": 2553,
															"nodeType": "Block",
															"src": "10954:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2545,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2516,
																			"src": "10972:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10982:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10972:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2548,
																	"nodeType": "ExpressionStatement",
																	"src": "10972:12:14"
																},
																{
																	"expression": {
																		"id": 2551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2549,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2522,
																			"src": "11002:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11012:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11002:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2552,
																	"nodeType": "ExpressionStatement",
																	"src": "11002:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2555,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2516,
																	"src": "11046:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11055:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11046:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11060:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11046:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2569,
														"nodeType": "IfStatement",
														"src": "11042:96:14",
														"trueBody": {
															"id": 2568,
															"nodeType": "Block",
															"src": "11063:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2560,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2516,
																			"src": "11081:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11091:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11081:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2563,
																	"nodeType": "ExpressionStatement",
																	"src": "11081:12:14"
																},
																{
																	"expression": {
																		"id": 2566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2564,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2522,
																			"src": "11111:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11121:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11111:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2567,
																	"nodeType": "ExpressionStatement",
																	"src": "11111:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2570,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2516,
																	"src": "11155:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11164:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11155:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11169:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11155:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2584,
														"nodeType": "IfStatement",
														"src": "11151:96:14",
														"trueBody": {
															"id": 2583,
															"nodeType": "Block",
															"src": "11172:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2575,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2516,
																			"src": "11190:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11200:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11190:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2578,
																	"nodeType": "ExpressionStatement",
																	"src": "11190:12:14"
																},
																{
																	"expression": {
																		"id": 2581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2579,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2522,
																			"src": "11220:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11230:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11220:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2582,
																	"nodeType": "ExpressionStatement",
																	"src": "11220:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2585,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2516,
																	"src": "11264:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11273:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11264:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11277:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11264:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2599,
														"nodeType": "IfStatement",
														"src": "11260:93:14",
														"trueBody": {
															"id": 2598,
															"nodeType": "Block",
															"src": "11280:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2590,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2516,
																			"src": "11298:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11308:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11298:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2593,
																	"nodeType": "ExpressionStatement",
																	"src": "11298:11:14"
																},
																{
																	"expression": {
																		"id": 2596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2594,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2522,
																			"src": "11327:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11337:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11327:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2597,
																	"nodeType": "ExpressionStatement",
																	"src": "11327:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2600,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2516,
																	"src": "11370:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11379:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11370:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11383:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11370:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2614,
														"nodeType": "IfStatement",
														"src": "11366:93:14",
														"trueBody": {
															"id": 2613,
															"nodeType": "Block",
															"src": "11386:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2605,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2516,
																			"src": "11404:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11414:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11404:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2608,
																	"nodeType": "ExpressionStatement",
																	"src": "11404:11:14"
																},
																{
																	"expression": {
																		"id": 2611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2609,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2522,
																			"src": "11433:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11443:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11433:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2612,
																	"nodeType": "ExpressionStatement",
																	"src": "11433:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2615,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2516,
																	"src": "11476:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11485:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11476:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11489:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11476:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2629,
														"nodeType": "IfStatement",
														"src": "11472:93:14",
														"trueBody": {
															"id": 2628,
															"nodeType": "Block",
															"src": "11492:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2620,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2516,
																			"src": "11510:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11520:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11510:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2623,
																	"nodeType": "ExpressionStatement",
																	"src": "11510:11:14"
																},
																{
																	"expression": {
																		"id": 2626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2624,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2522,
																			"src": "11539:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11549:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11539:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2627,
																	"nodeType": "ExpressionStatement",
																	"src": "11539:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2630,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2516,
																	"src": "11582:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11591:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11582:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11595:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11582:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2640,
														"nodeType": "IfStatement",
														"src": "11578:64:14",
														"trueBody": {
															"id": 2639,
															"nodeType": "Block",
															"src": "11598:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2635,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2522,
																			"src": "11616:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11626:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11616:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2638,
																	"nodeType": "ExpressionStatement",
																	"src": "11616:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2642,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2522,
													"src": "11668:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2520,
												"id": 2643,
												"nodeType": "Return",
												"src": "11661:13:14"
											}
										]
									},
									"documentation": {
										"id": 2514,
										"nodeType": "StructuredDocumentation",
										"src": "10574:119:14",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10707:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10720:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "10712:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10712:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10711:15:14"
									},
									"returnParameters": {
										"id": 2520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "10750:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10750:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10749:9:14"
									},
									"scope": 2989,
									"src": "10698:983:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2679,
										"nodeType": "Block",
										"src": "11914:168:14",
										"statements": [
											{
												"id": 2678,
												"nodeType": "UncheckedBlock",
												"src": "11924:152:14",
												"statements": [
													{
														"assignments": [
															2657
														],
														"declarations": [
															{
																"constant": false,
																"id": 2657,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11956:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2678,
																"src": "11948:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2656,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11948:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2661,
														"initialValue": {
															"arguments": [
																{
																	"id": 2659,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2648,
																	"src": "11970:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2658,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2645,
																	2680
																],
																"referencedDeclaration": 2645,
																"src": "11965:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11965:11:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11948:28:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2662,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2657,
																"src": "11997:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2664,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2651,
																						"src": "12024:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1946",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1946",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2663,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2988,
																					"src": "12007:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1946_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2665,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12007:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2670,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2668,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2666,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12037:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2667,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2657,
																						"src": "12042:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12037:11:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2669,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2648,
																					"src": "12051:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12037:19:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12007:49:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12063:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12007:57:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12059:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2675,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12006:59:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11997:68:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2655,
														"id": 2677,
														"nodeType": "Return",
														"src": "11990:75:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2646,
										"nodeType": "StructuredDocumentation",
										"src": "11687:142:14",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11843:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2648,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11856:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "11848:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11848:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2651,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11872:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "11863:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1946",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2650,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2649,
														"name": "Rounding",
														"nameLocations": [
															"11863:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "11863:8:14"
													},
													"referencedDeclaration": 1946,
													"src": "11863:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1946",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11847:34:14"
									},
									"returnParameters": {
										"id": 2655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "11905:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11905:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11904:9:14"
									},
									"scope": 2989,
									"src": "11834:248:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2808,
										"nodeType": "Block",
										"src": "12275:854:14",
										"statements": [
											{
												"assignments": [
													2689
												],
												"declarations": [
													{
														"constant": false,
														"id": 2689,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12293:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2808,
														"src": "12285:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2688,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12285:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2691,
												"initialValue": {
													"hexValue": "30",
													"id": 2690,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12302:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12285:18:14"
											},
											{
												"id": 2805,
												"nodeType": "UncheckedBlock",
												"src": "12313:787:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2692,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2683,
																"src": "12341:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12350:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12356:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12350:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12341:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2708,
														"nodeType": "IfStatement",
														"src": "12337:103:14",
														"trueBody": {
															"id": 2707,
															"nodeType": "Block",
															"src": "12360:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2697,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2683,
																			"src": "12378:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12387:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2699,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12393:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12387:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12378:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2702,
																	"nodeType": "ExpressionStatement",
																	"src": "12378:17:14"
																},
																{
																	"expression": {
																		"id": 2705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2703,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "12413:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12423:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12413:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2706,
																	"nodeType": "ExpressionStatement",
																	"src": "12413:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2709,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2683,
																"src": "12457:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12466:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12472:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12466:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12457:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2725,
														"nodeType": "IfStatement",
														"src": "12453:103:14",
														"trueBody": {
															"id": 2724,
															"nodeType": "Block",
															"src": "12476:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2714,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2683,
																			"src": "12494:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2715,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12503:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2716,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12509:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12503:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12494:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2719,
																	"nodeType": "ExpressionStatement",
																	"src": "12494:17:14"
																},
																{
																	"expression": {
																		"id": 2722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2720,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "12529:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12539:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12529:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2723,
																	"nodeType": "ExpressionStatement",
																	"src": "12529:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2726,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2683,
																"src": "12573:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12582:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12588:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12582:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12573:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2742,
														"nodeType": "IfStatement",
														"src": "12569:103:14",
														"trueBody": {
															"id": 2741,
															"nodeType": "Block",
															"src": "12592:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2731,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2683,
																			"src": "12610:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12619:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2733,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12625:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12619:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12610:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2736,
																	"nodeType": "ExpressionStatement",
																	"src": "12610:17:14"
																},
																{
																	"expression": {
																		"id": 2739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2737,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "12645:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12655:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12645:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2740,
																	"nodeType": "ExpressionStatement",
																	"src": "12645:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2743,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2683,
																"src": "12689:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12698:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12704:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12698:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12689:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2759,
														"nodeType": "IfStatement",
														"src": "12685:100:14",
														"trueBody": {
															"id": 2758,
															"nodeType": "Block",
															"src": "12707:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2748,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2683,
																			"src": "12725:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12734:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2750,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12740:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12734:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12725:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2753,
																	"nodeType": "ExpressionStatement",
																	"src": "12725:16:14"
																},
																{
																	"expression": {
																		"id": 2756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2754,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "12759:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12769:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12759:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2757,
																	"nodeType": "ExpressionStatement",
																	"src": "12759:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2760,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2683,
																"src": "12802:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12811:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12817:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12811:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12802:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2776,
														"nodeType": "IfStatement",
														"src": "12798:100:14",
														"trueBody": {
															"id": 2775,
															"nodeType": "Block",
															"src": "12820:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2765,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2683,
																			"src": "12838:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2766,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12847:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2767,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12853:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12847:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12838:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2770,
																	"nodeType": "ExpressionStatement",
																	"src": "12838:16:14"
																},
																{
																	"expression": {
																		"id": 2773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2771,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "12872:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12882:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12872:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2774,
																	"nodeType": "ExpressionStatement",
																	"src": "12872:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2777,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2683,
																"src": "12915:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12924:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12930:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12924:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12915:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2793,
														"nodeType": "IfStatement",
														"src": "12911:100:14",
														"trueBody": {
															"id": 2792,
															"nodeType": "Block",
															"src": "12933:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2782,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2683,
																			"src": "12951:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2783,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12960:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12966:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12960:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12951:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2787,
																	"nodeType": "ExpressionStatement",
																	"src": "12951:16:14"
																},
																{
																	"expression": {
																		"id": 2790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2788,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "12985:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12995:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12985:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2791,
																	"nodeType": "ExpressionStatement",
																	"src": "12985:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2794,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2683,
																"src": "13028:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13037:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13043:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13037:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13028:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2804,
														"nodeType": "IfStatement",
														"src": "13024:66:14",
														"trueBody": {
															"id": 2803,
															"nodeType": "Block",
															"src": "13046:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2799,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "13064:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13074:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13064:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2802,
																	"nodeType": "ExpressionStatement",
																	"src": "13064:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2806,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2689,
													"src": "13116:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2687,
												"id": 2807,
												"nodeType": "Return",
												"src": "13109:13:14"
											}
										]
									},
									"documentation": {
										"id": 2681,
										"nodeType": "StructuredDocumentation",
										"src": "12088:120:14",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12222:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12236:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2809,
												"src": "12228:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12228:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12227:15:14"
									},
									"returnParameters": {
										"id": 2687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2809,
												"src": "12266:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12266:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12265:9:14"
									},
									"scope": 2989,
									"src": "12213:916:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2843,
										"nodeType": "Block",
										"src": "13364:170:14",
										"statements": [
											{
												"id": 2842,
												"nodeType": "UncheckedBlock",
												"src": "13374:154:14",
												"statements": [
													{
														"assignments": [
															2821
														],
														"declarations": [
															{
																"constant": false,
																"id": 2821,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13406:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2842,
																"src": "13398:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2820,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13398:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2825,
														"initialValue": {
															"arguments": [
																{
																	"id": 2823,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2812,
																	"src": "13421:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2822,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2809,
																	2844
																],
																"referencedDeclaration": 2809,
																"src": "13415:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13415:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13398:29:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2826,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2821,
																"src": "13448:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2828,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2815,
																						"src": "13475:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1946",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1946",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2827,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2988,
																					"src": "13458:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1946_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2829,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13458:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2834,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2832,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2830,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13488:2:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2831,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2821,
																						"src": "13494:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13488:12:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2833,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2812,
																					"src": "13503:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13488:20:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13458:50:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13515:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13458:58:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13511:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2839,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13457:60:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13448:69:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2819,
														"id": 2841,
														"nodeType": "Return",
														"src": "13441:76:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2810,
										"nodeType": "StructuredDocumentation",
										"src": "13135:143:14",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13292:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2812,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13306:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "13298:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13298:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13322:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "13313:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1946",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2814,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2813,
														"name": "Rounding",
														"nameLocations": [
															"13313:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "13313:8:14"
													},
													"referencedDeclaration": 1946,
													"src": "13313:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1946",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13297:34:14"
									},
									"returnParameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "13355:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13355:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13354:9:14"
									},
									"scope": 2989,
									"src": "13283:251:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2930,
										"nodeType": "Block",
										"src": "13854:600:14",
										"statements": [
											{
												"assignments": [
													2853
												],
												"declarations": [
													{
														"constant": false,
														"id": 2853,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13872:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2930,
														"src": "13864:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2852,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13864:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2855,
												"initialValue": {
													"hexValue": "30",
													"id": 2854,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13881:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13864:18:14"
											},
											{
												"id": 2927,
												"nodeType": "UncheckedBlock",
												"src": "13892:533:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2856,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2847,
																	"src": "13920:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13929:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13920:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13935:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13920:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2870,
														"nodeType": "IfStatement",
														"src": "13916:98:14",
														"trueBody": {
															"id": 2869,
															"nodeType": "Block",
															"src": "13938:76:14",
															"statements": [
																{
																	"expression": {
																		"id": 2863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2861,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2847,
																			"src": "13956:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13966:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13956:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2864,
																	"nodeType": "ExpressionStatement",
																	"src": "13956:13:14"
																},
																{
																	"expression": {
																		"id": 2867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2865,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2853,
																			"src": "13987:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13997:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13987:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2868,
																	"nodeType": "ExpressionStatement",
																	"src": "13987:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2871,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2847,
																	"src": "14031:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14040:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14031:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2874,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14045:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14031:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2885,
														"nodeType": "IfStatement",
														"src": "14027:95:14",
														"trueBody": {
															"id": 2884,
															"nodeType": "Block",
															"src": "14048:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2876,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2847,
																			"src": "14066:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14076:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14066:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2879,
																	"nodeType": "ExpressionStatement",
																	"src": "14066:12:14"
																},
																{
																	"expression": {
																		"id": 2882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2880,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2853,
																			"src": "14096:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14106:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14096:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2883,
																	"nodeType": "ExpressionStatement",
																	"src": "14096:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2886,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2847,
																	"src": "14139:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14148:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14139:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14153:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14139:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2900,
														"nodeType": "IfStatement",
														"src": "14135:95:14",
														"trueBody": {
															"id": 2899,
															"nodeType": "Block",
															"src": "14156:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2891,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2847,
																			"src": "14174:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14184:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14174:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2894,
																	"nodeType": "ExpressionStatement",
																	"src": "14174:12:14"
																},
																{
																	"expression": {
																		"id": 2897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2895,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2853,
																			"src": "14204:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14214:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14204:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2898,
																	"nodeType": "ExpressionStatement",
																	"src": "14204:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2901,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2847,
																	"src": "14247:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14256:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14247:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14261:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14247:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2915,
														"nodeType": "IfStatement",
														"src": "14243:95:14",
														"trueBody": {
															"id": 2914,
															"nodeType": "Block",
															"src": "14264:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2906,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2847,
																			"src": "14282:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14292:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14282:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2909,
																	"nodeType": "ExpressionStatement",
																	"src": "14282:12:14"
																},
																{
																	"expression": {
																		"id": 2912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2910,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2853,
																			"src": "14312:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14322:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14312:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2913,
																	"nodeType": "ExpressionStatement",
																	"src": "14312:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2916,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2847,
																	"src": "14355:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14364:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14355:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14368:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14355:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2926,
														"nodeType": "IfStatement",
														"src": "14351:64:14",
														"trueBody": {
															"id": 2925,
															"nodeType": "Block",
															"src": "14371:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2921,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2853,
																			"src": "14389:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14399:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14389:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2924,
																	"nodeType": "ExpressionStatement",
																	"src": "14389:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2928,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2853,
													"src": "14441:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2851,
												"id": 2929,
												"nodeType": "Return",
												"src": "14434:13:14"
											}
										]
									},
									"documentation": {
										"id": 2845,
										"nodeType": "StructuredDocumentation",
										"src": "13540:246:14",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13800:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2847,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13815:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2931,
												"src": "13807:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13807:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13806:15:14"
									},
									"returnParameters": {
										"id": 2851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2931,
												"src": "13845:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13845:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13844:9:14"
									},
									"scope": 2989,
									"src": "13791:663:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2968,
										"nodeType": "Block",
										"src": "14691:177:14",
										"statements": [
											{
												"id": 2967,
												"nodeType": "UncheckedBlock",
												"src": "14701:161:14",
												"statements": [
													{
														"assignments": [
															2943
														],
														"declarations": [
															{
																"constant": false,
																"id": 2943,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14733:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2967,
																"src": "14725:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2942,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14725:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2947,
														"initialValue": {
															"arguments": [
																{
																	"id": 2945,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2934,
																	"src": "14749:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2944,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2931,
																	2969
																],
																"referencedDeclaration": 2931,
																"src": "14742:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14742:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14725:30:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2948,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2943,
																"src": "14776:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2950,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2937,
																						"src": "14803:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1946",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1946",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2949,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2988,
																					"src": "14786:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1946_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2951,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14786:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2959,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2957,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2952,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14816:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2955,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2953,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2943,
																									"src": "14822:6:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2954,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14832:1:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14822:11:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2956,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14821:13:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14816:18:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2958,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2934,
																					"src": "14837:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14816:26:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14786:56:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14849:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14786:64:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14845:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2964,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14785:66:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14776:75:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2941,
														"id": 2966,
														"nodeType": "Return",
														"src": "14769:82:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2932,
										"nodeType": "StructuredDocumentation",
										"src": "14460:144:14",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14618:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2934,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14633:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "14625:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14625:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2937,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14649:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "14640:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1946",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2936,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2935,
														"name": "Rounding",
														"nameLocations": [
															"14640:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "14640:8:14"
													},
													"referencedDeclaration": 1946,
													"src": "14640:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1946",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14624:34:14"
									},
									"returnParameters": {
										"id": 2941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "14682:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14682:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14681:9:14"
									},
									"scope": 2989,
									"src": "14609:259:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2987,
										"nodeType": "Block",
										"src": "15066:48:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2980,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2973,
																	"src": "15089:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1946",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1946",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15083:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2978,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15083:5:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15083:15:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15101:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15083:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2984,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15106:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15083:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2977,
												"id": 2986,
												"nodeType": "Return",
												"src": "15076:31:14"
											}
										]
									},
									"documentation": {
										"id": 2970,
										"nodeType": "StructuredDocumentation",
										"src": "14874:113:14",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15001:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2973,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15027:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2988,
												"src": "15018:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1946",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2972,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2971,
														"name": "Rounding",
														"nameLocations": [
															"15018:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "15018:8:14"
													},
													"referencedDeclaration": 1946,
													"src": "15018:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1946",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15017:19:14"
									},
									"returnParameters": {
										"id": 2977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2988,
												"src": "15060:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2975,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15060:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15059:6:14"
									},
									"scope": 2989,
									"src": "14992:122:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2990,
							"src": "202:14914:14",
							"usedErrors": [
								1941
							]
						}
					],
					"src": "103:15014:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3094
						]
					},
					"id": 3095,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2991,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2992,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:15",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3094,
							"linearizedBaseContracts": [
								3094
							],
							"name": "SignedMath",
							"nameLocation": "223:10:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3009,
										"nodeType": "Block",
										"src": "375:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3002,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2995,
															"src": "392:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3003,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2997,
															"src": "396:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3006,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2997,
														"src": "404:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:15",
													"trueExpression": {
														"id": 3005,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2995,
														"src": "400:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3001,
												"id": 3008,
												"nodeType": "Return",
												"src": "385:20:15"
											}
										]
									},
									"documentation": {
										"id": 2993,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:15",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2995,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "324:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2994,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2997,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "334:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2996,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:15"
									},
									"returnParameters": {
										"id": 3001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "367:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2999,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:15"
									},
									"scope": 3094,
									"src": "311:101:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3027,
										"nodeType": "Block",
										"src": "554:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3020,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3013,
															"src": "571:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3021,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3015,
															"src": "575:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3024,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3015,
														"src": "583:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:15",
													"trueExpression": {
														"id": 3023,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3013,
														"src": "579:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3019,
												"id": 3026,
												"nodeType": "Return",
												"src": "564:20:15"
											}
										]
									},
									"documentation": {
										"id": 3011,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:15",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3013,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3028,
												"src": "503:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3012,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3015,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3028,
												"src": "513:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3014,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:15"
									},
									"returnParameters": {
										"id": 3019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3028,
												"src": "546:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3017,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:15"
									},
									"scope": 3094,
									"src": "490:101:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3071,
										"nodeType": "Block",
										"src": "796:162:15",
										"statements": [
											{
												"assignments": [
													3039
												],
												"declarations": [
													{
														"constant": false,
														"id": 3039,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:15",
														"nodeType": "VariableDeclaration",
														"scope": 3071,
														"src": "858:8:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3038,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3052,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3040,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3031,
																	"src": "870:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3041,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3033,
																	"src": "874:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3043,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3044,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3031,
																				"src": "881:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3045,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3033,
																				"src": "885:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3047,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3050,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:15"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3053,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3039,
														"src": "910:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3058,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3039,
																						"src": "930:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3057,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3056,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:15",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3059,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3060,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3054,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3065,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3063,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3031,
																				"src": "944:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3064,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3033,
																				"src": "948:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3066,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3068,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3037,
												"id": 3070,
												"nodeType": "Return",
												"src": "903:48:15"
											}
										]
									},
									"documentation": {
										"id": 3029,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:15",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3031,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3072,
												"src": "745:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3030,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3033,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3072,
												"src": "755:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3032,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:15"
									},
									"returnParameters": {
										"id": 3037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3072,
												"src": "788:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3035,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:15"
									},
									"scope": 3094,
									"src": "728:230:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3092,
										"nodeType": "Block",
										"src": "1102:158:15",
										"statements": [
											{
												"id": 3091,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:15",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3082,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3075,
																			"src": "1227:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3083,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:15",
																		"subExpression": {
																			"id": 3086,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3075,
																			"src": "1241:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:15",
																	"trueExpression": {
																		"id": 3085,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3075,
																		"src": "1236:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3080,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3079,
														"id": 3090,
														"nodeType": "Return",
														"src": "1212:31:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3073,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:15",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3075,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3093,
												"src": "1060:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3074,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:15"
									},
									"returnParameters": {
										"id": 3079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3078,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3093,
												"src": "1093:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:15"
									},
									"scope": 3094,
									"src": "1047:213:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3095,
							"src": "215:1047:15",
							"usedErrors": []
						}
					],
					"src": "109:1154:15"
				},
				"id": 15
			},
			"MNFT.sol": {
				"ast": {
					"absolutePath": "MNFT.sol",
					"exportedSymbols": {
						"Context": [
							1644
						],
						"ERC165": [
							1923
						],
						"ERC721": [
							1325
						],
						"ERC721URIStorage": [
							1586
						],
						"IERC165": [
							1935
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1442
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							1614
						],
						"IERC721Receiver": [
							1460
						],
						"MalluCrypto": [
							3173
						],
						"Ownable": [
							147
						],
						"Strings": [
							1899
						]
					},
					"id": 3174,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3096,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "83:23:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3097,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3174,
							"sourceUnit": 1326,
							"src": "110:57:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 3098,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3174,
							"sourceUnit": 1587,
							"src": "169:78:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3099,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3174,
							"sourceUnit": 148,
							"src": "249:52:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3100,
										"name": "ERC721",
										"nameLocations": [
											"329:6:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "329:6:16"
									},
									"id": 3101,
									"nodeType": "InheritanceSpecifier",
									"src": "329:6:16"
								},
								{
									"baseName": {
										"id": 3102,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"337:16:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1586,
										"src": "337:16:16"
									},
									"id": 3103,
									"nodeType": "InheritanceSpecifier",
									"src": "337:16:16"
								},
								{
									"baseName": {
										"id": 3104,
										"name": "Ownable",
										"nameLocations": [
											"355:7:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "355:7:16"
									},
									"id": 3105,
									"nodeType": "InheritanceSpecifier",
									"src": "355:7:16"
								}
							],
							"canonicalName": "MalluCrypto",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3173,
							"linearizedBaseContracts": [
								3173,
								147,
								1586,
								1325,
								269,
								1614,
								175,
								1442,
								1923,
								1935,
								1644
							],
							"name": "MalluCrypto",
							"nameLocation": "314:11:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3117,
										"nodeType": "Block",
										"src": "479:2:16",
										"statements": []
									},
									"id": 3118,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d616c6c7543727970746f",
													"id": 3110,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "420:13:16",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8935d4b0496a3cd827a5ba879fc4b56a1b25dbaa0a230c204ccad19662c508de",
														"typeString": "literal_string \"MalluCrypto\""
													},
													"value": "MalluCrypto"
												},
												{
													"hexValue": "4d4e4654",
													"id": 3111,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "435:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_38f99777330a23b7254d6d34302160815d5489450b05e18c9e8ef3b4d4ed66f5",
														"typeString": "literal_string \"MNFT\""
													},
													"value": "MNFT"
												}
											],
											"id": 3112,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3109,
												"name": "ERC721",
												"nameLocations": [
													"413:6:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "413:6:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "413:29:16"
										},
										{
											"arguments": [
												{
													"id": 3114,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3107,
													"src": "460:12:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3115,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3113,
												"name": "Ownable",
												"nameLocations": [
													"452:7:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "452:7:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "452:21:16"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3107,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "390:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 3118,
												"src": "382:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "382:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "381:22:16"
									},
									"returnParameters": {
										"id": 3116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "479:0:16"
									},
									"scope": 3173,
									"src": "370:111:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3139,
										"nodeType": "Block",
										"src": "595:78:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3130,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3120,
															"src": "616:2:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3131,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3122,
															"src": "620:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3129,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															947,
															973
														],
														"referencedDeclaration": 947,
														"src": "606:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "606:22:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3133,
												"nodeType": "ExpressionStatement",
												"src": "606:22:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3135,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3122,
															"src": "652:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3136,
															"name": "uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3124,
															"src": "661:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3134,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1585,
														"src": "639:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "639:26:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3138,
												"nodeType": "ExpressionStatement",
												"src": "639:26:16"
											}
										]
									},
									"functionSelector": "cd279c7c",
									"id": 3140,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3127,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3126,
												"name": "onlyOwner",
												"nameLocations": [
													"580:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "580:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "580:9:16"
										}
									],
									"name": "safeMint",
									"nameLocation": "498:8:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3120,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "515:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 3140,
												"src": "507:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3122,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "527:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3140,
												"src": "519:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "519:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3124,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "550:3:16",
												"nodeType": "VariableDeclaration",
												"scope": 3140,
												"src": "536:17:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3123,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "536:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "506:48:16"
									},
									"returnParameters": {
										"id": 3128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "595:0:16"
									},
									"scope": 3173,
									"src": "489:184:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										512,
										1566
									],
									"body": {
										"id": 3155,
										"nodeType": "Block",
										"src": "898:49:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3152,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3142,
															"src": "931:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3150,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "916:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MalluCrypto_$3173_$",
																"typeString": "type(contract super MalluCrypto)"
															}
														},
														"id": 3151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "922:8:16",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1566,
														"src": "916:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 3153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "916:23:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3149,
												"id": 3154,
												"nodeType": "Return",
												"src": "909:30:16"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 3156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "760:8:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3146,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3144,
												"name": "ERC721",
												"nameLocations": [
													"834:6:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "834:6:16"
											},
											{
												"id": 3145,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"842:16:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1586,
												"src": "842:16:16"
											}
										],
										"src": "825:34:16"
									},
									"parameters": {
										"id": 3143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3142,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "777:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3156,
												"src": "769:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:17:16"
									},
									"returnParameters": {
										"id": 3149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3156,
												"src": "878:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3147,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "878:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:15:16"
									},
									"scope": 3173,
									"src": "751:196:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										417,
										1509
									],
									"body": {
										"id": 3171,
										"nodeType": "Block",
										"src": "1105:62:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3168,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3158,
															"src": "1147:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 3166,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1123:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MalluCrypto_$3173_$",
																"typeString": "type(contract super MalluCrypto)"
															}
														},
														"id": 3167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1129:17:16",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1509,
														"src": "1123:23:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 3169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1123:36:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3165,
												"id": 3170,
												"nodeType": "Return",
												"src": "1116:43:16"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 3172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "964:17:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3162,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3160,
												"name": "ERC721",
												"nameLocations": [
													"1050:6:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "1050:6:16"
											},
											{
												"id": 3161,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"1058:16:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1586,
												"src": "1058:16:16"
											}
										],
										"src": "1041:34:16"
									},
									"parameters": {
										"id": 3159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3158,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "989:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3172,
												"src": "982:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3157,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "982:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:20:16"
									},
									"returnParameters": {
										"id": 3165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3172,
												"src": "1094:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1094:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:6:16"
									},
									"scope": 3173,
									"src": "955:212:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3174,
							"src": "305:865:16",
							"usedErrors": [
								13,
								18,
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							]
						}
					],
					"src": "83:1087:16"
				},
				"id": 16
			}
		}
	}
}