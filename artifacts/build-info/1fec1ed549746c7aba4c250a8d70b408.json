{
	"id": "1fec1ed549746c7aba4c250a8d70b408",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"MNFT1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract MALLU is ERC1155, Ownable {\r\n    constructor(address initialOwner)\r\n        ERC1155(\"ipfs://bafkreif2trhbotga2x3mrq5dxava62ypgqp3ycogg45rjgwryzfebljmra\")\r\n        Ownable(initialOwner)\r\n    {}\r\n\r\n    function setURI(string memory newuri) public onlyOwner {\r\n        _setURI(newuri);\r\n    }\r\n\r\n    function mint(address account, uint256 id, uint256 amount, bytes memory data)\r\n        public\r\n        onlyOwner\r\n    {\r\n        _mint(account, id, amount, data);\r\n    }\r\n\r\n    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)\r\n        public\r\n        onlyOwner\r\n    {\r\n        _mintBatch(to, ids, amounts, data);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155Receiver} from \"./IERC1155Receiver.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.0;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xde13f6ab310a659b9732f7f7ea3eed7c4d9925cc72e77e6554b2126563a143f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2176f1c5e871613bd6502558cc98d268e92167dcd546d15941587a670a48d4eb\",\"dweb:/ipfs/QmboYR7jbENha8ahFbWeHu2pHr5jjA9PuDzRDJHLvGDCBh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x32f1faf405d9d68f67d407d817ef8f4262be6e21223c04fa371b8c7a63762890\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e15ded8a8dfeaf5d5f6ab45c2520910f2f98381bc3136d64fc76894e0db49d1\",\"dweb:/ipfs/QmTYQqvbNnAjTB4hfQHMgnj3u9kNqkykfdCBY5TkXe6zp1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbb8e61c91d4c2998ab2728541b5b0648f1c2887adc40320d05f2e59dfcd7b26f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17e87f4d08a4d91ed894c5dfd908c6940c2676456e1ca5f273e3bb2626b3949f\",\"dweb:/ipfs/QmbxfRXFKBGKEqQZjKX3MbKgQHjZBftUASUiAgBcak4W6p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbb8e61c91d4c2998ab2728541b5b0648f1c2887adc40320d05f2e59dfcd7b26f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17e87f4d08a4d91ed894c5dfd908c6940c2676456e1ca5f273e3bb2626b3949f\",\"dweb:/ipfs/QmbxfRXFKBGKEqQZjKX3MbKgQHjZBftUASUiAgBcak4W6p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbb8e61c91d4c2998ab2728541b5b0648f1c2887adc40320d05f2e59dfcd7b26f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17e87f4d08a4d91ed894c5dfd908c6940c2676456e1ca5f273e3bb2626b3949f\",\"dweb:/ipfs/QmbxfRXFKBGKEqQZjKX3MbKgQHjZBftUASUiAgBcak4W6p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbb8e61c91d4c2998ab2728541b5b0648f1c2887adc40320d05f2e59dfcd7b26f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17e87f4d08a4d91ed894c5dfd908c6940c2676456e1ca5f273e3bb2626b3949f\",\"dweb:/ipfs/QmbxfRXFKBGKEqQZjKX3MbKgQHjZBftUASUiAgBcak4W6p\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x4b01e5dda0585f12f87c0832f259078ddbecc3d1fccb372ee17a0aef431a8423\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35bcc49c756ba8bd1a5029791e6c852d6e06e2d9667b6317445dcd90bc7e9dee\",\"dweb:/ipfs/QmUerWRdmHbBosZp8TURCRXFc4CCfiQwiW1h3VkC2DV18y\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcf709f69ba9bcb754b1c075cee2d875fd4eede97e15968a5d0af9c697341f36d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd5ad29a99bf7b77b574bf5466d33ca7c91753af314c0d9102115cd6cde64c21\",\"dweb:/ipfs/QmefzzUWwik2ZA8TL5rV5UvPKf6Za2Mi75UzmKBkgeQhQY\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x65bb381eb6529ac00a25f48f349778c80465b73f56c38a43500afccd1494aa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab0e6ae5c2e53c529054848ca65df1e99ac0c134281af8c51c0b63c022774df6\",\"dweb:/ipfs/QmVaycMAorQKbDRFwfsz8w2g6o1mxpHUHQRWyoEq3E3pfV\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xb29e63233239db7dac21a98aaa7432409ea1269ed31a9725e84f012969db2fdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://deff3fb0cad4fc8413db0cbaf98a1cdf3f36a1f1d66421f946a2031f070959e6\",\"dweb:/ipfs/QmV4VdBfHEiwmgcqPZvsgHM48KjvA4RguvVak55yVMRTwa\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa368f899e8943d6f020eddbbb9435e3d9d6dd56fb0487bb61e013948ec2d52f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20e3c5aa3aa36029db3fa3286788c1172f5022ba82a802e2de8561bd417de8ec\",\"dweb:/ipfs/Qmb2AF47tJqfDSWEL2aqLo31EDdHheAL8BkVoXAdy4sc89\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x32f1faf405d9d68f67d407d817ef8f4262be6e21223c04fa371b8c7a63762890\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e15ded8a8dfeaf5d5f6ab45c2520910f2f98381bc3136d64fc76894e0db49d1\",\"dweb:/ipfs/QmTYQqvbNnAjTB4hfQHMgnj3u9kNqkykfdCBY5TkXe6zp1\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x0f53fe356d9a5d9132fadafe1a03d4bfb7479e620abd8aed625df70fea571761\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e64683fd28348b991a0a5759707171f52b7a6528ee43f656b8702d6fc1b65ab\",\"dweb:/ipfs/QmPvC87n9737NsDfzCELjjqP6XxcQK2Jb4czveAomoGRU7\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xce4e0bf91fc3bc1fb74403096ed7b80777df28e03154c9f64b049a862cef6557\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d8897ef365caecb89711a78a510a283a0faa56980e3048234c70ea8e43993ab\",\"dweb:/ipfs/QmZqX4RzBFMyJGYSTpDB5b2Fi2qzyicKTRNL2ozYi212Hb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xbc6690e09b5c0729776d3af9161cebf6e92fd7e7e1396ce9d542f69c8f04282c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d0ba319335c98b76bf697a19c59134284cc48c7e2b2d95bd958352b5955b566\",\"dweb:/ipfs/QmXxCoGxsEN4oAVjNtoD6LosFMSJGifVcSzVH5pKV6ushD\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x9c9194a1f6fbb7b8a837dc16686626b2093a9c6e46c812e14b0b09c8497b0213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542cb8cbe77cbb740d42beef23fe7a496711879c5ec843b89a8738e200a38e0b\",\"dweb:/ipfs/QmVpxj9wyTThYJWpoTc9mLWieiWj453h6b8mkLn8w2MdPG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 326,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 334,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcf709f69ba9bcb754b1c075cee2d875fd4eede97e15968a5d0af9c697341f36d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd5ad29a99bf7b77b574bf5466d33ca7c91753af314c0d9102115cd6cde64c21\",\"dweb:/ipfs/QmefzzUWwik2ZA8TL5rV5UvPKf6Za2Mi75UzmKBkgeQhQY\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xbc6690e09b5c0729776d3af9161cebf6e92fd7e7e1396ce9d542f69c8f04282c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d0ba319335c98b76bf697a19c59134284cc48c7e2b2d95bd958352b5955b566\",\"dweb:/ipfs/QmXxCoGxsEN4oAVjNtoD6LosFMSJGifVcSzVH5pKV6ushD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x65bb381eb6529ac00a25f48f349778c80465b73f56c38a43500afccd1494aa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab0e6ae5c2e53c529054848ca65df1e99ac0c134281af8c51c0b63c022774df6\",\"dweb:/ipfs/QmVaycMAorQKbDRFwfsz8w2g6o1mxpHUHQRWyoEq3E3pfV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xbc6690e09b5c0729776d3af9161cebf6e92fd7e7e1396ce9d542f69c8f04282c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d0ba319335c98b76bf697a19c59134284cc48c7e2b2d95bd958352b5955b566\",\"dweb:/ipfs/QmXxCoGxsEN4oAVjNtoD6LosFMSJGifVcSzVH5pKV6ushD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcf709f69ba9bcb754b1c075cee2d875fd4eede97e15968a5d0af9c697341f36d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd5ad29a99bf7b77b574bf5466d33ca7c91753af314c0d9102115cd6cde64c21\",\"dweb:/ipfs/QmefzzUWwik2ZA8TL5rV5UvPKf6Za2Mi75UzmKBkgeQhQY\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xb29e63233239db7dac21a98aaa7432409ea1269ed31a9725e84f012969db2fdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://deff3fb0cad4fc8413db0cbaf98a1cdf3f36a1f1d66421f946a2031f070959e6\",\"dweb:/ipfs/QmV4VdBfHEiwmgcqPZvsgHM48KjvA4RguvVak55yVMRTwa\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xbc6690e09b5c0729776d3af9161cebf6e92fd7e7e1396ce9d542f69c8f04282c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d0ba319335c98b76bf697a19c59134284cc48c7e2b2d95bd958352b5955b566\",\"dweb:/ipfs/QmXxCoGxsEN4oAVjNtoD6LosFMSJGifVcSzVH5pKV6ushD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Arrays.sol\":275:4801  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":275:4801  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c81edf8b068b919e2e5a08820ccf6131ff266ed2f691a7b63d5b97c6930f563f64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c81edf8b068b919e2e5a08820ccf6131ff266ed2f691a7b63d5b97c6930f563f64736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0x1E 0xDF DUP12 MOD DUP12 SWAP2 SWAP15 0x2E GAS ADDMOD DUP3 0xC 0xCF PUSH2 0x31FF 0x26 PUSH15 0xD2F691A7B63D5B97C6930F563F6473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "275:4526:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c81edf8b068b919e2e5a08820ccf6131ff266ed2f691a7b63d5b97c6930f563f64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0x1E 0xDF DUP12 MOD DUP12 SWAP2 SWAP15 0x2E GAS ADDMOD DUP3 0xC 0xCF PUSH2 0x31FF 0x26 PUSH15 0xD2F691A7B63D5B97C6930F563F6473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "275:4526:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite",
								"unsafeMemoryAccess(address[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(uint256[] memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 275,
									"end": 4801,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 275,
									"end": 4801,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c81edf8b068b919e2e5a08820ccf6131ff266ed2f691a7b63d5b97c6930f563f64736f6c63430008130033",
									".code": [
										{
											"begin": 275,
											"end": 4801,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 275,
											"end": 4801,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 275,
											"end": 4801,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 275,
											"end": 4801,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 275,
											"end": 4801,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 275,
											"end": 4801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 275,
											"end": 4801,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 4801,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 275,
											"end": 4801,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"MNFT1155.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa368f899e8943d6f020eddbbb9435e3d9d6dd56fb0487bb61e013948ec2d52f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20e3c5aa3aa36029db3fa3286788c1172f5022ba82a802e2de8561bd417de8ec\",\"dweb:/ipfs/Qmb2AF47tJqfDSWEL2aqLo31EDdHheAL8BkVoXAdy4sc89\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x0f53fe356d9a5d9132fadafe1a03d4bfb7479e620abd8aed625df70fea571761\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e64683fd28348b991a0a5759707171f52b7a6528ee43f656b8702d6fc1b65ab\",\"dweb:/ipfs/QmPvC87n9737NsDfzCELjjqP6XxcQK2Jb4czveAomoGRU7\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x9c9194a1f6fbb7b8a837dc16686626b2093a9c6e46c812e14b0b09c8497b0213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542cb8cbe77cbb740d42beef23fe7a496711879c5ec843b89a8738e200a38e0b\",\"dweb:/ipfs/QmVpxj9wyTThYJWpoTc9mLWieiWj453h6b8mkLn8w2MdPG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x32f1faf405d9d68f67d407d817ef8f4262be6e21223c04fa371b8c7a63762890\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e15ded8a8dfeaf5d5f6ab45c2520910f2f98381bc3136d64fc76894e0db49d1\",\"dweb:/ipfs/QmTYQqvbNnAjTB4hfQHMgnj3u9kNqkykfdCBY5TkXe6zp1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1244:3929  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1244:3929  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209b3dc94abf8b48ecb0b13ed731511de5f664bc7a88e566c8fcd854b6a8e95cbd64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209b3dc94abf8b48ecb0b13ed731511de5f664bc7a88e566c8fcd854b6a8e95cbd64736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 RETURNDATASIZE 0xC9 0x4A 0xBF DUP12 BASEFEE 0xEC 0xB0 0xB1 RETURNDATACOPY 0xD7 BALANCE MLOAD SAR 0xE5 0xF6 PUSH5 0xBC7A88E566 0xC8 0xFC 0xD8 SLOAD 0xB6 0xA8 0xE9 0x5C 0xBD PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1244:2685:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209b3dc94abf8b48ecb0b13ed731511de5f664bc7a88e566c8fcd854b6a8e95cbd64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 RETURNDATASIZE 0xC9 0x4A 0xBF DUP12 BASEFEE 0xEC 0xB0 0xB1 RETURNDATACOPY 0xD7 BALANCE MLOAD SAR 0xE5 0xF6 PUSH5 0xBC7A88E566 0xC8 0xFC 0xD8 SLOAD 0xB6 0xA8 0xE9 0x5C 0xBD PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1244:2685:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1244,
									"end": 3929,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1244,
									"end": 3929,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209b3dc94abf8b48ecb0b13ed731511de5f664bc7a88e566c8fcd854b6a8e95cbd64736f6c63430008130033",
									".code": [
										{
											"begin": 1244,
											"end": 3929,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 1244,
											"end": 3929,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1244,
											"end": 3929,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1244,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1244,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1244,
											"end": 3929,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1244,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1244,
											"end": 3929,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"MNFT1155.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x0f53fe356d9a5d9132fadafe1a03d4bfb7479e620abd8aed625df70fea571761\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e64683fd28348b991a0a5759707171f52b7a6528ee43f656b8702d6fc1b65ab\",\"dweb:/ipfs/QmPvC87n9737NsDfzCELjjqP6XxcQK2Jb4czveAomoGRU7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xce4e0bf91fc3bc1fb74403096ed7b80777df28e03154c9f64b049a862cef6557\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d8897ef365caecb89711a78a510a283a0faa56980e3048234c70ea8e43993ab\",\"dweb:/ipfs/QmZqX4RzBFMyJGYSTpDB5b2Fi2qzyicKTRNL2ozYi212Hb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xbc6690e09b5c0729776d3af9161cebf6e92fd7e7e1396ce9d542f69c8f04282c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d0ba319335c98b76bf697a19c59134284cc48c7e2b2d95bd958352b5955b566\",\"dweb:/ipfs/QmXxCoGxsEN4oAVjNtoD6LosFMSJGifVcSzVH5pKV6ushD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xbc6690e09b5c0729776d3af9161cebf6e92fd7e7e1396ce9d542f69c8f04282c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d0ba319335c98b76bf697a19c59134284cc48c7e2b2d95bd958352b5955b566\",\"dweb:/ipfs/QmXxCoGxsEN4oAVjNtoD6LosFMSJGifVcSzVH5pKV6ushD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:15116  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:15116  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220346dceab4998dedb60533e67f7385e045a9c1d945de30fa4b43ac24578e219a464736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220346dceab4998dedb60533e67f7385e045a9c1d945de30fa4b43ac24578e219a464736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE PUSH14 0xCEAB4998DEDB60533E67F7385E04 GAS SWAP13 SAR SWAP5 0x5D 0xE3 0xF LOG4 0xB4 GASPRICE 0xC2 GASLIMIT PUSH25 0xE219A464736F6C634300081300330000000000000000000000 ",
							"sourceMap": "202:14914:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220346dceab4998dedb60533e67f7385e045a9c1d945de30fa4b43ac24578e219a464736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE PUSH14 0xCEAB4998DEDB60533E67F7385E04 GAS SWAP13 SAR SWAP5 0x5D 0xE3 0xF LOG4 0xB4 GASPRICE 0xC2 GASLIMIT PUSH25 0xE219A464736F6C634300081300330000000000000000000000 ",
							"sourceMap": "202:14914:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 202,
									"end": 15116,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220346dceab4998dedb60533e67f7385e045a9c1d945de30fa4b43ac24578e219a464736f6c63430008130033",
									".code": [
										{
											"begin": 202,
											"end": 15116,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 202,
											"end": 15116,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 202,
											"end": 15116,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 202,
											"end": 15116,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 15116,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 15116,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 202,
											"end": 15116,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 15116,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 202,
											"end": 15116,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"MNFT1155.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x9c9194a1f6fbb7b8a837dc16686626b2093a9c6e46c812e14b0b09c8497b0213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542cb8cbe77cbb740d42beef23fe7a496711879c5ec843b89a8738e200a38e0b\",\"dweb:/ipfs/QmVpxj9wyTThYJWpoTc9mLWieiWj453h6b8mkLn8w2MdPG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MNFT1155.sol": {
				"MALLU": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mintBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newuri",
									"type": "string"
								}
							],
							"name": "setURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MNFT1155.sol\":227:904  contract MALLU is ERC1155, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"MNFT1155.sol\":269:428  constructor(address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"MNFT1155.sol\":407:419  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1250:1312  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0x80\n  add\n  0x40\n  mstore\n  dup1\n  0x42\n  dup2\n  mstore\n  0x20\n  add\n  data_cc14d9d152288110bb6cd8f00736a77dbd45e58d117a5b7d4a7ab6bd571d2c8c\n  0x42\n  swap2\n  codecopy\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1292:1305  _setURI(uri_) */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1300:1304  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1292:1299  _setURI */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1292:1305  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1250:1312  constructor(string memory uri_) {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1296:1297  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1272:1298  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1272:1284  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1272:1298  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1268:1363  if (initialOwner == address(0)) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1349:1350  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1321:1352  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1268:1363  if (initialOwner == address(0)) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1372:1404  _transferOwnership(initialOwner) */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1391:1403  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1372:1390  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1372:1404  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1224:1411  constructor(address initialOwner) {... */\n  pop\n    /* \"MNFT1155.sol\":269:428  constructor(address initialOwner)... */\n  pop\n    /* \"MNFT1155.sol\":227:904  contract MALLU is ERC1155, Ownable {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10281:10367  function _setURI(string memory newuri) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10354:10360  newuri */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10347:10351  _uri */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10347:10360  _uri = newuri */\n  swap1\n  dup2\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10281:10367  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2911:3098  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2984:3000  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3003:3009  _owner */\n  0x03\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2984:3009  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3028:3036  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3019:3025  _owner */\n  0x03\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3019:3036  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3082:3090  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3051:3091  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3072:3080  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3051:3091  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2974:3098  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2911:3098  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_23:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_25:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_26:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_56\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_25\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_27:\n    /* \"#utility.yul\":641:665   */\n  tag_58\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_26\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_59:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_28:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_61\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_27\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_64\n  tag_23\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":932:1051   */\ntag_63:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_65\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_28\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_29:\n    /* \"#utility.yul\":1289:1313   */\n  tag_67\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_26\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_13:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_69\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_29\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1554:1653   */\ntag_30:\n    /* \"#utility.yul\":1606:1612   */\n  0x00\n    /* \"#utility.yul\":1640:1645   */\n  dup2\n    /* \"#utility.yul\":1634:1646   */\n  mload\n    /* \"#utility.yul\":1624:1646   */\n  swap1\n  pop\n    /* \"#utility.yul\":1554:1653   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1659:1839   */\ntag_31:\n    /* \"#utility.yul\":1707:1784   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1704:1705   */\n  0x00\n    /* \"#utility.yul\":1697:1785   */\n  mstore\n    /* \"#utility.yul\":1804:1808   */\n  0x41\n    /* \"#utility.yul\":1801:1802   */\n  0x04\n    /* \"#utility.yul\":1794:1809   */\n  mstore\n    /* \"#utility.yul\":1828:1832   */\n  0x24\n    /* \"#utility.yul\":1825:1826   */\n  0x00\n    /* \"#utility.yul\":1818:1833   */\n  revert\n    /* \"#utility.yul\":1845:2025   */\ntag_32:\n    /* \"#utility.yul\":1893:1970   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1890:1891   */\n  0x00\n    /* \"#utility.yul\":1883:1971   */\n  mstore\n    /* \"#utility.yul\":1990:1994   */\n  0x22\n    /* \"#utility.yul\":1987:1988   */\n  0x04\n    /* \"#utility.yul\":1980:1995   */\n  mstore\n    /* \"#utility.yul\":2014:2018   */\n  0x24\n    /* \"#utility.yul\":2011:2012   */\n  0x00\n    /* \"#utility.yul\":2004:2019   */\n  revert\n    /* \"#utility.yul\":2031:2351   */\ntag_33:\n    /* \"#utility.yul\":2075:2081   */\n  0x00\n    /* \"#utility.yul\":2112:2113   */\n  0x02\n    /* \"#utility.yul\":2106:2110   */\n  dup3\n    /* \"#utility.yul\":2102:2114   */\n  div\n    /* \"#utility.yul\":2092:2114   */\n  swap1\n  pop\n    /* \"#utility.yul\":2159:2160   */\n  0x01\n    /* \"#utility.yul\":2153:2157   */\n  dup3\n    /* \"#utility.yul\":2149:2161   */\n  and\n    /* \"#utility.yul\":2180:2198   */\n  dup1\n    /* \"#utility.yul\":2170:2251   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2236:2240   */\n  0x7f\n    /* \"#utility.yul\":2228:2234   */\n  dup3\n    /* \"#utility.yul\":2224:2241   */\n  and\n    /* \"#utility.yul\":2214:2241   */\n  swap2\n  pop\n    /* \"#utility.yul\":2170:2251   */\ntag_74:\n    /* \"#utility.yul\":2298:2300   */\n  0x20\n    /* \"#utility.yul\":2290:2296   */\n  dup3\n    /* \"#utility.yul\":2287:2301   */\n  lt\n    /* \"#utility.yul\":2267:2285   */\n  dup2\n    /* \"#utility.yul\":2264:2302   */\n  sub\n    /* \"#utility.yul\":2261:2345   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2317:2335   */\n  tag_76\n  tag_32\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2261:2345   */\ntag_75:\n    /* \"#utility.yul\":2082:2351   */\n  pop\n    /* \"#utility.yul\":2031:2351   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2357:2498   */\ntag_34:\n    /* \"#utility.yul\":2406:2410   */\n  0x00\n    /* \"#utility.yul\":2429:2432   */\n  dup2\n    /* \"#utility.yul\":2421:2432   */\n  swap1\n  pop\n    /* \"#utility.yul\":2452:2455   */\n  dup2\n    /* \"#utility.yul\":2449:2450   */\n  0x00\n    /* \"#utility.yul\":2442:2456   */\n  mstore\n    /* \"#utility.yul\":2486:2490   */\n  0x20\n    /* \"#utility.yul\":2483:2484   */\n  0x00\n    /* \"#utility.yul\":2473:2491   */\n  keccak256\n    /* \"#utility.yul\":2465:2491   */\n  swap1\n  pop\n    /* \"#utility.yul\":2357:2498   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2504:2597   */\ntag_35:\n    /* \"#utility.yul\":2541:2547   */\n  0x00\n    /* \"#utility.yul\":2588:2590   */\n  0x20\n    /* \"#utility.yul\":2583:2585   */\n  0x1f\n    /* \"#utility.yul\":2576:2581   */\n  dup4\n    /* \"#utility.yul\":2572:2586   */\n  add\n    /* \"#utility.yul\":2568:2591   */\n  div\n    /* \"#utility.yul\":2558:2591   */\n  swap1\n  pop\n    /* \"#utility.yul\":2504:2597   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2603:2710   */\ntag_36:\n    /* \"#utility.yul\":2647:2655   */\n  0x00\n    /* \"#utility.yul\":2697:2702   */\n  dup3\n    /* \"#utility.yul\":2691:2695   */\n  dup3\n    /* \"#utility.yul\":2687:2703   */\n  shl\n    /* \"#utility.yul\":2666:2703   */\n  swap1\n  pop\n    /* \"#utility.yul\":2603:2710   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2716:3109   */\ntag_37:\n    /* \"#utility.yul\":2785:2791   */\n  0x00\n    /* \"#utility.yul\":2835:2836   */\n  0x08\n    /* \"#utility.yul\":2823:2833   */\n  dup4\n    /* \"#utility.yul\":2819:2837   */\n  mul\n    /* \"#utility.yul\":2858:2955   */\n  tag_81\n    /* \"#utility.yul\":2888:2954   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2877:2886   */\n  dup3\n    /* \"#utility.yul\":2858:2955   */\n  tag_36\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2976:3015   */\n  tag_82\n    /* \"#utility.yul\":3006:3014   */\n  dup7\n    /* \"#utility.yul\":2995:3004   */\n  dup4\n    /* \"#utility.yul\":2976:3015   */\n  tag_36\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2964:3015   */\n  swap6\n  pop\n    /* \"#utility.yul\":3048:3052   */\n  dup1\n    /* \"#utility.yul\":3044:3053   */\n  not\n    /* \"#utility.yul\":3037:3042   */\n  dup5\n    /* \"#utility.yul\":3033:3054   */\n  and\n    /* \"#utility.yul\":3024:3054   */\n  swap4\n  pop\n    /* \"#utility.yul\":3097:3101   */\n  dup1\n    /* \"#utility.yul\":3087:3095   */\n  dup7\n    /* \"#utility.yul\":3083:3102   */\n  and\n    /* \"#utility.yul\":3076:3081   */\n  dup5\n    /* \"#utility.yul\":3073:3103   */\n  or\n    /* \"#utility.yul\":3063:3103   */\n  swap3\n  pop\n    /* \"#utility.yul\":2792:3109   */\n  pop\n  pop\n    /* \"#utility.yul\":2716:3109   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3115:3192   */\ntag_38:\n    /* \"#utility.yul\":3152:3159   */\n  0x00\n    /* \"#utility.yul\":3181:3186   */\n  dup2\n    /* \"#utility.yul\":3170:3186   */\n  swap1\n  pop\n    /* \"#utility.yul\":3115:3192   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3198:3258   */\ntag_39:\n    /* \"#utility.yul\":3226:3229   */\n  0x00\n    /* \"#utility.yul\":3247:3252   */\n  dup2\n    /* \"#utility.yul\":3240:3252   */\n  swap1\n  pop\n    /* \"#utility.yul\":3198:3258   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3264:3406   */\ntag_40:\n    /* \"#utility.yul\":3314:3323   */\n  0x00\n    /* \"#utility.yul\":3347:3400   */\n  tag_86\n    /* \"#utility.yul\":3365:3399   */\n  tag_87\n    /* \"#utility.yul\":3374:3398   */\n  tag_88\n    /* \"#utility.yul\":3392:3397   */\n  dup5\n    /* \"#utility.yul\":3374:3398   */\n  tag_38\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3365:3399   */\n  tag_39\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3347:3400   */\n  tag_38\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3334:3400   */\n  swap1\n  pop\n    /* \"#utility.yul\":3264:3406   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3412:3487   */\ntag_41:\n    /* \"#utility.yul\":3455:3458   */\n  0x00\n    /* \"#utility.yul\":3476:3481   */\n  dup2\n    /* \"#utility.yul\":3469:3481   */\n  swap1\n  pop\n    /* \"#utility.yul\":3412:3487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3493:3762   */\ntag_42:\n    /* \"#utility.yul\":3603:3642   */\n  tag_91\n    /* \"#utility.yul\":3634:3641   */\n  dup4\n    /* \"#utility.yul\":3603:3642   */\n  tag_40\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3664:3755   */\n  tag_92\n    /* \"#utility.yul\":3713:3754   */\n  tag_93\n    /* \"#utility.yul\":3737:3753   */\n  dup3\n    /* \"#utility.yul\":3713:3754   */\n  tag_41\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3705:3711   */\n  dup5\n    /* \"#utility.yul\":3698:3702   */\n  dup5\n    /* \"#utility.yul\":3692:3703   */\n  sload\n    /* \"#utility.yul\":3664:3755   */\n  tag_37\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3658:3662   */\n  dup3\n    /* \"#utility.yul\":3651:3756   */\n  sstore\n    /* \"#utility.yul\":3569:3762   */\n  pop\n    /* \"#utility.yul\":3493:3762   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3768:3841   */\ntag_43:\n    /* \"#utility.yul\":3813:3816   */\n  0x00\n    /* \"#utility.yul\":3768:3841   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3847:4036   */\ntag_44:\n    /* \"#utility.yul\":3924:3956   */\n  tag_96\n  tag_43\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3965:4030   */\n  tag_97\n    /* \"#utility.yul\":4023:4029   */\n  dup2\n    /* \"#utility.yul\":4015:4021   */\n  dup5\n    /* \"#utility.yul\":4009:4013   */\n  dup5\n    /* \"#utility.yul\":3965:4030   */\n  tag_42\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3900:4036   */\n  pop\n    /* \"#utility.yul\":3847:4036   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4042:4228   */\ntag_45:\n    /* \"#utility.yul\":4102:4222   */\ntag_99:\n    /* \"#utility.yul\":4119:4122   */\n  dup2\n    /* \"#utility.yul\":4112:4117   */\n  dup2\n    /* \"#utility.yul\":4109:4123   */\n  lt\n    /* \"#utility.yul\":4102:4222   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4173:4212   */\n  tag_102\n    /* \"#utility.yul\":4210:4211   */\n  0x00\n    /* \"#utility.yul\":4203:4208   */\n  dup3\n    /* \"#utility.yul\":4173:4212   */\n  tag_44\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4146:4147   */\n  0x01\n    /* \"#utility.yul\":4139:4144   */\n  dup2\n    /* \"#utility.yul\":4135:4148   */\n  add\n    /* \"#utility.yul\":4126:4148   */\n  swap1\n  pop\n    /* \"#utility.yul\":4102:4222   */\n  jump(tag_99)\ntag_101:\n    /* \"#utility.yul\":4042:4228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4234:4777   */\ntag_46:\n    /* \"#utility.yul\":4335:4337   */\n  0x1f\n    /* \"#utility.yul\":4330:4333   */\n  dup3\n    /* \"#utility.yul\":4327:4338   */\n  gt\n    /* \"#utility.yul\":4324:4770   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":4369:4407   */\n  tag_105\n    /* \"#utility.yul\":4401:4406   */\n  dup2\n    /* \"#utility.yul\":4369:4407   */\n  tag_34\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4453:4482   */\n  tag_106\n    /* \"#utility.yul\":4471:4481   */\n  dup5\n    /* \"#utility.yul\":4453:4482   */\n  tag_35\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4443:4451   */\n  dup2\n    /* \"#utility.yul\":4439:4483   */\n  add\n    /* \"#utility.yul\":4636:4638   */\n  0x20\n    /* \"#utility.yul\":4624:4634   */\n  dup6\n    /* \"#utility.yul\":4621:4639   */\n  lt\n    /* \"#utility.yul\":4618:4667   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":4657:4665   */\n  dup2\n    /* \"#utility.yul\":4642:4665   */\n  swap1\n  pop\n    /* \"#utility.yul\":4618:4667   */\ntag_107:\n    /* \"#utility.yul\":4680:4760   */\n  tag_108\n    /* \"#utility.yul\":4736:4758   */\n  tag_109\n    /* \"#utility.yul\":4754:4757   */\n  dup6\n    /* \"#utility.yul\":4736:4758   */\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":4726:4734   */\n  dup4\n    /* \"#utility.yul\":4722:4759   */\n  add\n    /* \"#utility.yul\":4709:4720   */\n  dup3\n    /* \"#utility.yul\":4680:4760   */\n  tag_45\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4339:4770   */\n  pop\n  pop\n    /* \"#utility.yul\":4324:4770   */\ntag_104:\n    /* \"#utility.yul\":4234:4777   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4783:4900   */\ntag_47:\n    /* \"#utility.yul\":4837:4845   */\n  0x00\n    /* \"#utility.yul\":4887:4892   */\n  dup3\n    /* \"#utility.yul\":4881:4885   */\n  dup3\n    /* \"#utility.yul\":4877:4893   */\n  shr\n    /* \"#utility.yul\":4856:4893   */\n  swap1\n  pop\n    /* \"#utility.yul\":4783:4900   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4906:5075   */\ntag_48:\n    /* \"#utility.yul\":4950:4956   */\n  0x00\n    /* \"#utility.yul\":4983:5034   */\n  tag_112\n    /* \"#utility.yul\":5031:5032   */\n  0x00\n    /* \"#utility.yul\":5027:5033   */\n  not\n    /* \"#utility.yul\":5019:5024   */\n  dup5\n    /* \"#utility.yul\":5016:5017   */\n  0x08\n    /* \"#utility.yul\":5012:5025   */\n  mul\n    /* \"#utility.yul\":4983:5034   */\n  tag_47\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":4979:5035   */\n  not\n    /* \"#utility.yul\":5064:5068   */\n  dup1\n    /* \"#utility.yul\":5058:5062   */\n  dup4\n    /* \"#utility.yul\":5054:5069   */\n  and\n    /* \"#utility.yul\":5044:5069   */\n  swap2\n  pop\n    /* \"#utility.yul\":4957:5075   */\n  pop\n    /* \"#utility.yul\":4906:5075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5080:5375   */\ntag_49:\n    /* \"#utility.yul\":5156:5160   */\n  0x00\n    /* \"#utility.yul\":5302:5331   */\n  tag_114\n    /* \"#utility.yul\":5327:5330   */\n  dup4\n    /* \"#utility.yul\":5321:5325   */\n  dup4\n    /* \"#utility.yul\":5302:5331   */\n  tag_48\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5294:5331   */\n  swap2\n  pop\n    /* \"#utility.yul\":5364:5367   */\n  dup3\n    /* \"#utility.yul\":5361:5362   */\n  0x02\n    /* \"#utility.yul\":5357:5368   */\n  mul\n    /* \"#utility.yul\":5351:5355   */\n  dup3\n    /* \"#utility.yul\":5348:5369   */\n  or\n    /* \"#utility.yul\":5340:5369   */\n  swap1\n  pop\n    /* \"#utility.yul\":5080:5375   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5380:6775   */\ntag_20:\n    /* \"#utility.yul\":5497:5534   */\n  tag_116\n    /* \"#utility.yul\":5530:5533   */\n  dup3\n    /* \"#utility.yul\":5497:5534   */\n  tag_30\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5599:5617   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5591:5597   */\n  dup2\n    /* \"#utility.yul\":5588:5618   */\n  gt\n    /* \"#utility.yul\":5585:5641   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":5621:5639   */\n  tag_118\n  tag_31\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5585:5641   */\ntag_117:\n    /* \"#utility.yul\":5665:5703   */\n  tag_119\n    /* \"#utility.yul\":5697:5701   */\n  dup3\n    /* \"#utility.yul\":5691:5702   */\n  sload\n    /* \"#utility.yul\":5665:5703   */\n  tag_33\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5750:5817   */\n  tag_120\n    /* \"#utility.yul\":5810:5816   */\n  dup3\n    /* \"#utility.yul\":5802:5808   */\n  dup3\n    /* \"#utility.yul\":5796:5800   */\n  dup6\n    /* \"#utility.yul\":5750:5817   */\n  tag_46\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":5844:5845   */\n  0x00\n    /* \"#utility.yul\":5868:5872   */\n  0x20\n    /* \"#utility.yul\":5855:5872   */\n  swap1\n  pop\n    /* \"#utility.yul\":5900:5902   */\n  0x1f\n    /* \"#utility.yul\":5892:5898   */\n  dup4\n    /* \"#utility.yul\":5889:5903   */\n  gt\n    /* \"#utility.yul\":5917:5918   */\n  0x01\n    /* \"#utility.yul\":5912:6530   */\n  dup2\n  eq\n  tag_122\n  jumpi\n    /* \"#utility.yul\":6574:6575   */\n  0x00\n    /* \"#utility.yul\":6591:6597   */\n  dup5\n    /* \"#utility.yul\":6588:6665   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6640:6649   */\n  dup3\n    /* \"#utility.yul\":6635:6638   */\n  dup8\n    /* \"#utility.yul\":6631:6650   */\n  add\n    /* \"#utility.yul\":6625:6651   */\n  mload\n    /* \"#utility.yul\":6616:6651   */\n  swap1\n  pop\n    /* \"#utility.yul\":6588:6665   */\ntag_123:\n    /* \"#utility.yul\":6691:6758   */\n  tag_124\n    /* \"#utility.yul\":6751:6757   */\n  dup6\n    /* \"#utility.yul\":6744:6749   */\n  dup3\n    /* \"#utility.yul\":6691:6758   */\n  tag_49\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6685:6689   */\n  dup7\n    /* \"#utility.yul\":6678:6759   */\n  sstore\n    /* \"#utility.yul\":6547:6769   */\n  pop\n    /* \"#utility.yul\":5882:6769   */\n  jump(tag_121)\n    /* \"#utility.yul\":5912:6530   */\ntag_122:\n    /* \"#utility.yul\":5964:5968   */\n  0x1f\n    /* \"#utility.yul\":5960:5969   */\n  not\n    /* \"#utility.yul\":5952:5958   */\n  dup5\n    /* \"#utility.yul\":5948:5970   */\n  and\n    /* \"#utility.yul\":5998:6035   */\n  tag_125\n    /* \"#utility.yul\":6030:6034   */\n  dup7\n    /* \"#utility.yul\":5998:6035   */\n  tag_34\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6057:6058   */\n  0x00\n    /* \"#utility.yul\":6071:6279   */\ntag_126:\n    /* \"#utility.yul\":6085:6092   */\n  dup3\n    /* \"#utility.yul\":6082:6083   */\n  dup2\n    /* \"#utility.yul\":6079:6093   */\n  lt\n    /* \"#utility.yul\":6071:6279   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":6164:6173   */\n  dup5\n    /* \"#utility.yul\":6159:6162   */\n  dup10\n    /* \"#utility.yul\":6155:6174   */\n  add\n    /* \"#utility.yul\":6149:6175   */\n  mload\n    /* \"#utility.yul\":6141:6147   */\n  dup3\n    /* \"#utility.yul\":6134:6176   */\n  sstore\n    /* \"#utility.yul\":6215:6216   */\n  0x01\n    /* \"#utility.yul\":6207:6213   */\n  dup3\n    /* \"#utility.yul\":6203:6217   */\n  add\n    /* \"#utility.yul\":6193:6217   */\n  swap2\n  pop\n    /* \"#utility.yul\":6262:6264   */\n  0x20\n    /* \"#utility.yul\":6251:6260   */\n  dup6\n    /* \"#utility.yul\":6247:6265   */\n  add\n    /* \"#utility.yul\":6234:6265   */\n  swap5\n  pop\n    /* \"#utility.yul\":6108:6112   */\n  0x20\n    /* \"#utility.yul\":6105:6106   */\n  dup2\n    /* \"#utility.yul\":6101:6113   */\n  add\n    /* \"#utility.yul\":6096:6113   */\n  swap1\n  pop\n    /* \"#utility.yul\":6071:6279   */\n  jump(tag_126)\ntag_128:\n    /* \"#utility.yul\":6307:6313   */\n  dup7\n    /* \"#utility.yul\":6298:6305   */\n  dup4\n    /* \"#utility.yul\":6295:6314   */\n  lt\n    /* \"#utility.yul\":6292:6471   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":6365:6374   */\n  dup5\n    /* \"#utility.yul\":6360:6363   */\n  dup10\n    /* \"#utility.yul\":6356:6375   */\n  add\n    /* \"#utility.yul\":6350:6376   */\n  mload\n    /* \"#utility.yul\":6408:6456   */\n  tag_130\n    /* \"#utility.yul\":6450:6454   */\n  0x1f\n    /* \"#utility.yul\":6442:6448   */\n  dup10\n    /* \"#utility.yul\":6438:6455   */\n  and\n    /* \"#utility.yul\":6427:6436   */\n  dup3\n    /* \"#utility.yul\":6408:6456   */\n  tag_48\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6400:6406   */\n  dup4\n    /* \"#utility.yul\":6393:6457   */\n  sstore\n    /* \"#utility.yul\":6315:6471   */\n  pop\n    /* \"#utility.yul\":6292:6471   */\ntag_129:\n    /* \"#utility.yul\":6517:6518   */\n  0x01\n    /* \"#utility.yul\":6513:6514   */\n  0x02\n    /* \"#utility.yul\":6505:6511   */\n  dup9\n    /* \"#utility.yul\":6501:6515   */\n  mul\n    /* \"#utility.yul\":6497:6519   */\n  add\n    /* \"#utility.yul\":6491:6495   */\n  dup9\n    /* \"#utility.yul\":6484:6520   */\n  sstore\n    /* \"#utility.yul\":5919:6530   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5882:6769   */\ntag_121:\n  pop\n    /* \"#utility.yul\":5472:6775   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5380:6775   */\n  pop\n  pop\n  jump\t// out\n    /* \"MNFT1155.sol\":227:904  contract MALLU is ERC1155, Ownable {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_cc14d9d152288110bb6cd8f00736a77dbd45e58d117a5b7d4a7ab6bd571d2c8c 697066733a2f2f6261666b7265696632747268626f7467613278336d7271356478617661363279706771703379636f67673435726a677772797a6665626c6a6d7261\n\nsub_0: assembly {\n        /* \"MNFT1155.sol\":227:904  contract MALLU is ERC1155, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x731133e9\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x0e89341c\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1f7fdffa\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x02fe5305\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2246:2378  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1379:1684  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MNFT1155.sol\":436:525  function setURI(string memory newuri) public onlyOwner {... */\n    tag_5:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2083:2186  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MNFT1155.sol\":710:901  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4013:4442  function safeBatchTransferFrom(... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2535:3087  function balanceOfBatch(... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2292:2393  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      stop\n        /* \"MNFT1155.sol\":533:702  function mint(address account, uint256 id, uint256 amount, bytes memory data)... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1637:1722  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3155:3299  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_13:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3523  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_14:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3590:3941  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_15:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2542:2757  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2246:2378  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2323:2330  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2349:2358  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2349:2362  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2359:2361  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2349:2362  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2349:2371  _balances[id][account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2363:2370  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2349:2371  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2342:2371  return _balances[id][account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2246:2378  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1379:1684  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1481:1485  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1531:1557  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1516:1557  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1516:1527  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1516:1557  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1516:1625  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_85\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1588:1625  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1573:1625  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1573:1584  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1573:1625  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1516:1625  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1516:1677  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_86\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1641:1677  super.supportsInterface(interfaceId) */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1665:1676  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1641:1664  super.supportsInterface */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1641:1677  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1516:1677  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1497:1677  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1379:1684  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"MNFT1155.sol\":436:525  function setURI(string memory newuri) public onlyOwner {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1541  _checkOwner */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      jump\t// in\n    tag_90:\n        /* \"MNFT1155.sol\":502:517  _setURI(newuri) */\n      tag_93\n        /* \"MNFT1155.sol\":510:516  newuri */\n      dup2\n        /* \"MNFT1155.sol\":502:509  _setURI */\n      tag_94\n        /* \"MNFT1155.sol\":502:517  _setURI(newuri) */\n      jump\t// in\n    tag_93:\n        /* \"MNFT1155.sol\":436:525  function setURI(string memory newuri) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2083:2186  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2143:2156  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2175:2179  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2168:2179  return _uri */\n      dup1\n      sload\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_98\n      swap1\n      tag_97\n      jump\t// in\n    tag_98:\n      dup1\n      iszero\n      tag_99\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_100\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_99)\n    tag_100:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_101:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_101\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2083:2186  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"MNFT1155.sol\":710:901  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1541  _checkOwner */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      jump\t// in\n    tag_103:\n        /* \"MNFT1155.sol\":859:893  _mintBatch(to, ids, amounts, data) */\n      tag_105\n        /* \"MNFT1155.sol\":870:872  to */\n      dup5\n        /* \"MNFT1155.sol\":874:877  ids */\n      dup5\n        /* \"MNFT1155.sol\":879:886  amounts */\n      dup5\n        /* \"MNFT1155.sol\":888:892  data */\n      dup5\n        /* \"MNFT1155.sol\":859:869  _mintBatch */\n      tag_106\n        /* \"MNFT1155.sol\":859:893  _mintBatch(to, ids, amounts, data) */\n      jump\t// in\n    tag_105:\n        /* \"MNFT1155.sol\":710:901  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4013:4442  function safeBatchTransferFrom(... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4207:4221  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4224:4236  _msgSender() */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4224:4234  _msgSender */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4224:4236  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4207:4236  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4258:4264  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4250:4264  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4250:4254  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4250:4264  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4250:4299  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_110\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4269:4299  isApprovedForAll(from, sender) */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4286:4290  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4292:4298  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4269:4285  isApprovedForAll */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4269:4299  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4268:4299  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4250:4299  from != sender && !isApprovedForAll(from, sender) */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4246:4375  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4351:4357  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4359:4363  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4322:4364  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap3\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4246:4375  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4384:4435  _safeBatchTransferFrom(from, to, ids, values, data) */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4407:4411  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4413:4415  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4417:4420  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4422:4428  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4430:4434  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4384:4406  _safeBatchTransferFrom */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4384:4435  _safeBatchTransferFrom(from, to, ids, values, data) */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4197:4442  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4013:4442  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2535:3087  function balanceOfBatch(... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2659:2675  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2710:2713  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2710:2720  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2691:2699  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2691:2706  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2691:2720  accounts.length != ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2687:2808  if (accounts.length != ids.length) {... */\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2769:2772  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2769:2779  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2781:2789  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2781:2796  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2743:2797  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap3\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2687:2808  if (accounts.length != ids.length) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2818:2848  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2865:2873  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2865:2880  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2851:2881  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_121\n      jumpi\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n    tag_121:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_124\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_124:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2818:2881  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2897:2906  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2892:3050  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2916:2924  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2916:2931  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2912:2913  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2912:2931  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2892:3050  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2971:3039  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2981:3011  accounts.unsafeMemoryAccess(i) */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3009:3010  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2981:2989  accounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2981:3008  accounts.unsafeMemoryAccess */\n      tag_130\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2981:3011  accounts.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3013:3038  ids.unsafeMemoryAccess(i) */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3036:3037  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3013:3016  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3013:3035  ids.unsafeMemoryAccess */\n      tag_132\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3013:3038  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2971:2980  balanceOf */\n      tag_23\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2971:3039  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2952:2965  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:2967  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2952:2968  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_133\n      jumpi\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n    tag_133:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2952:3039  batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2933:2936  ++i */\n      dup1\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2892:3050  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_125)\n    tag_126:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3067:3080  batchBalances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3060:3080  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2535:3087  function balanceOfBatch(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2292:2393  function renounceOwnership() public virtual onlyOwner {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1541  _checkOwner */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2356:2386  _transferOwnership(address(0)) */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2383:2384  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2356:2374  _transferOwnership */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2356:2386  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2292:2393  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"MNFT1155.sol\":533:702  function mint(address account, uint256 id, uint256 amount, bytes memory data)... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1541  _checkOwner */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      jump\t// in\n    tag_144:\n        /* \"MNFT1155.sol\":662:694  _mint(account, id, amount, data) */\n      tag_146\n        /* \"MNFT1155.sol\":668:675  account */\n      dup5\n        /* \"MNFT1155.sol\":677:679  id */\n      dup5\n        /* \"MNFT1155.sol\":681:687  amount */\n      dup5\n        /* \"MNFT1155.sol\":689:693  data */\n      dup5\n        /* \"MNFT1155.sol\":662:667  _mint */\n      tag_147\n        /* \"MNFT1155.sol\":662:694  _mint(account, id, amount, data) */\n      jump\t// in\n    tag_146:\n        /* \"MNFT1155.sol\":533:702  function mint(address account, uint256 id, uint256 amount, bytes memory data)... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1637:1722  function owner() public view virtual returns (address) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1683:1690  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1709:1715  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1702:1715  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1637:1722  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3155:3299  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3240:3292  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3259:3271  _msgSender() */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3259:3269  _msgSender */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3259:3271  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3273:3281  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3283:3291  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3240:3258  _setApprovalForAll */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3240:3292  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3155:3299  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3523  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3456:3460  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3479:3497  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3479:3506  _operatorApprovals[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3498:3505  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3479:3506  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3479:3516  _operatorApprovals[account][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3507:3515  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3479:3516  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3472:3516  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3366:3523  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3590:3941  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3713:3727  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3730:3742  _msgSender() */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3730:3740  _msgSender */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3730:3742  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3713:3742  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3764:3770  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3756:3770  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3756:3760  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3756:3770  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3756:3805  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_156\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3775:3805  isApprovedForAll(from, sender) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3792:3796  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3804  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3775:3791  isApprovedForAll */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3775:3805  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3774:3805  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3756:3805  from != sender && !isApprovedForAll(from, sender) */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3752:3881  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3857:3863  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3865:3869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3828:3870  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap3\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3752:3881  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3890:3934  _safeTransferFrom(from, to, id, value, data) */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3908:3912  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3914:3916  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3918:3920  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3922:3927  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3929:3933  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3890:3907  _safeTransferFrom */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3890:3934  _safeTransferFrom(from, to, id, value, data) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3703:3941  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3590:3941  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2542:2757  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1541  _checkOwner */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1530:1543  _checkOwner() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2646:2647  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2626:2648  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2626:2634  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2626:2648  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2622:2713  if (newOwner == address(0)) {... */\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2699:2700  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2671:2702  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2622:2713  if (newOwner == address(0)) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2722:2750  _transferOwnership(newOwner) */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2741:2749  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2722:2740  _transferOwnership */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2722:2750  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2542:2757  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":761:907  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":837:841  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":875:900  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":860:900  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":860:871  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":860:900  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":853:900  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":761:907  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1795:1957  function _checkOwner() internal view virtual {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1865:1877  _msgSender() */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1865:1875  _msgSender */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1865:1877  _msgSender() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1854:1877  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1854:1861  owner() */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1854:1859  owner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1854:1861  owner() */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1854:1877  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1850:1951  if (owner() != _msgSender()) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1927:1939  _msgSender() */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1927:1937  _msgSender */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1927:1939  _msgSender() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1900:1940  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1850:1951  if (owner() != _msgSender()) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1795:1957  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10281:10367  function _setURI(string memory newuri) internal virtual {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10354:10360  newuri */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10347:10351  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10347:10360  _uri = newuri */\n      swap1\n      dup2\n      tag_176\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10281:10367  function _setURI(string memory newuri) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11522:11804  function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11657:11658  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11643:11659  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11643:11645  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11643:11659  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11639:11727  if (to == address(0)) {... */\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11713:11714  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11682:11716  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11639:11727  if (to == address(0)) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11736:11797  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11771:11772  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11775:11777  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11779:11782  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11784:11790  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11792:11796  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11736:11762  _updateWithAcceptanceCheck */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11736:11797  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11522:11804  function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":655:751  function _msgSender() internal view virtual returns (address) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":708:715  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":734:744  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":727:744  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":655:751  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9014:9459  function _safeBatchTransferFrom(... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9221:9222  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9207:9223  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9207:9209  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9207:9223  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9203:9291  if (to == address(0)) {... */\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9277:9278  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9246:9280  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9203:9291  if (to == address(0)) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9320:9321  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9304:9322  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9304:9308  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9304:9322  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9300:9388  if (from == address(0)) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9374:9375  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9345:9377  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9300:9388  if (from == address(0)) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9397:9452  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9424:9428  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9430:9432  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9434:9437  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9439:9445  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9447:9451  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9397:9423  _updateWithAcceptanceCheck */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9397:9452  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9014:9459  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4602:4799  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4688:4699  address res */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4776:4780  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4771:4774  pos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4767:4781  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4760:4764  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4755:4758  arr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4751:4765  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4747:4782  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4741:4783  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4734:4783  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4602:4799  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4203:4400  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4289:4300  uint256 res */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4377:4381  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4372:4375  pos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4368:4382  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4361:4365  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4356:4359  arr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4352:4366  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4348:4383  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4342:4384  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4335:4384  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4203:4400  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2911:3098  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2984:3000  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3003:3009  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2984:3009  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3028:3036  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3019:3025  _owner */\n      0x03\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3019:3036  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3082:3090  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3051:3091  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3072:3080  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3051:3091  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2974:3098  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2911:3098  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10745:11091  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10855:10856  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10841:10857  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10841:10843  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10841:10857  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10837:10925  if (to == address(0)) {... */\n      tag_194\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10911:10912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10880:10914  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10837:10925  if (to == address(0)) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10935:10955  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10957:10980  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10984:11013  _asSingletonArrays(id, value) */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11003:11005  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11007:11012  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10984:11002  _asSingletonArrays */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10984:11013  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10934:11013  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11023:11084  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11058:11059  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11062:11064  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11066:11069  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11071:11077  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11079:11083  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11023:11049  _updateWithAcceptanceCheck */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11023:11084  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10827:11091  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10745:11091  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13267:13582  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13394:13395  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13374:13396  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13374:13382  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13374:13396  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13370:13464  if (operator == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13450:13451  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13419:13453  ERC1155InvalidOperator(address(0)) */\n      mload(0x40)\n      0xced3e10000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13370:13464  if (operator == address(0)) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13511:13519  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13473:13491  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13473:13498  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13492:13497  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13473:13498  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13473:13508  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13499:13507  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13473:13508  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13473:13519  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13556:13564  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13534:13575  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13549:13554  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13534:13575  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13566:13574  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13534:13575  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_202\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13267:13582  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8150:8613  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8286:8287  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8272:8288  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8272:8274  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8272:8288  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8268:8356  if (to == address(0)) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8342:8343  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8311:8345  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8268:8356  if (to == address(0)) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8385:8386  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8369:8387  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8369:8373  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8369:8387  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8365:8453  if (from == address(0)) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8439:8440  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8410:8442  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8365:8453  if (from == address(0)) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8463:8483  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8485:8508  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8512:8541  _asSingletonArrays(id, value) */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8531:8533  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8535:8540  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8512:8530  _asSingletonArrays */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8512:8541  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8462:8541  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8551:8606  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8578:8582  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8584:8586  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8588:8591  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8593:8599  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8601:8605  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8551:8577  _updateWithAcceptanceCheck */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8551:8606  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8258:8613  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8150:8613  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7003:7693  function _updateWithAcceptanceCheck(... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7204:7234  _update(from, to, ids, values) */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7212:7216  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7218:7220  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7222:7225  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7227:7233  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7204:7211  _update */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7204:7234  _update(from, to, ids, values) */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7262:7263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7248:7264  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7248:7250  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7248:7264  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7244:7687  if (to != address(0)) {... */\n      tag_213\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7280:7296  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7299:7311  _msgSender() */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7299:7309  _msgSender */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7299:7311  _msgSender() */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7280:7311  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7343:7344  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7329:7332  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7329:7339  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7329:7344  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7325:7677  if (ids.length == 1) {... */\n      tag_215\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7364:7374  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7377:7402  ids.unsafeMemoryAccess(0) */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7400:7401  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7377:7380  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7377:7399  ids.unsafeMemoryAccess */\n      tag_132\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7377:7402  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7364:7402  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7420:7433  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7436:7464  values.unsafeMemoryAccess(0) */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7462:7463  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7436:7442  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7436:7461  values.unsafeMemoryAccess */\n      tag_132\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7436:7464  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7420:7464  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7482:7549  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7513:7521  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7523:7527  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7529:7531  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7533:7535  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7537:7542  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7544:7548  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7482:7512  _doSafeTransferAcceptanceCheck */\n      tag_219\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7482:7549  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7346:7564  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7325:7677  if (ids.length == 1) {... */\n      jump(tag_220)\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7588:7662  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7624:7632  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7634:7638  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7640:7642  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7644:7647  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7649:7655  values */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7657:7661  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7588:7623  _doSafeBatchTransferAcceptanceCheck */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7588:7662  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7325:7677  if (ids.length == 1) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7266:7687  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7244:7687  if (to != address(0)) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7003:7693  function _updateWithAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16079:16928  function _asSingletonArrays(... */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16187:16210  uint256[] memory array1 */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16212:16235  uint256[] memory array2 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16373:16377  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16367:16378  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16357:16378  array1 := mload(0x40) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16443:16444  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16435:16441  array1 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16428:16445  mstore(array1, 1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16581:16589  element1 */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16574:16578  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16566:16572  array1 */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16562:16579  add(array1, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16555:16590  mstore(add(array1, 0x20), element1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16703:16707  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16695:16701  array1 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16691:16708  add(array1, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16681:16708  array2 := add(array1, 0x40) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16736:16737  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16728:16734  array2 */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16721:16738  mstore(array2, 1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16777:16785  element2 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16770:16774  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16762:16768  array2 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16758:16775  add(array2, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16751:16786  mstore(add(array2, 0x20), element2) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16906:16910  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16898:16904  array2 */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16894:16911  add(array2, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16888:16892  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16881:16912  mstore(0x40, add(array2, 0x40)) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16079:16928  function _asSingletonArrays(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5143:6424  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5278:5284  values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5278:5291  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5264:5267  ids */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5264:5274  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5264:5291  ids.length != values.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5260:5377  if (ids.length != values.length) {... */\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5340:5343  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5340:5350  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5352:5358  values */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5352:5365  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5314:5366  ERC1155InvalidArrayLength(ids.length, values.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap3\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5260:5377  if (ids.length != values.length) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5387:5403  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5406:5418  _msgSender() */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5406:5416  _msgSender */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5406:5418  _msgSender() */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5387:5418  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5434:5443  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5429:6120  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5453:5456  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5453:5463  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5449:5450  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5449:5463  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5429:6120  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5484:5494  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5497:5522  ids.unsafeMemoryAccess(i) */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5520:5521  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5497:5500  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5497:5519  ids.unsafeMemoryAccess */\n      tag_132\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5497:5522  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5484:5522  uint256 id = ids.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5536:5549  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5552:5580  values.unsafeMemoryAccess(i) */\n      tag_232\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5578:5579  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5552:5558  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5552:5577  values.unsafeMemoryAccess */\n      tag_132\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5552:5580  values.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5536:5580  uint256 value = values.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5615:5616  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5599:5617  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5599:5603  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5599:5617  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5595:6015  if (from != address(0)) {... */\n      tag_233\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5637:5656  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5659:5668  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5659:5672  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5669:5671  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5659:5672  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5659:5678  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5673:5677  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5659:5678  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5637:5678  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5714:5719  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5700:5711  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5700:5719  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5696:5825  if (fromBalance < value) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5777:5781  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5783:5794  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5796:5801  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5803:5805  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5750:5806  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      mload(0x40)\n      0x03dee4c500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5696:5825  if (fromBalance < value) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5977:5982  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5963:5974  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5963:5982  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5941:5950  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5941:5954  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5951:5953  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5941:5954  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5941:5960  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5955:5959  from */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5941:5960  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5941:5982  _balances[id][from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5619:6015  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5595:6015  if (from != address(0)) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6047:6048  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6033:6049  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6033:6035  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6033:6049  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6029:6110  if (to != address(0)) {... */\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6090:6095  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6069:6078  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6069:6082  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6079:6081  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6069:6082  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6069:6086  _balances[id][to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6083:6085  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6069:6086  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6069:6095  _balances[id][to] += value */\n      dup3\n      dup3\n      sload\n      tag_238\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6029:6110  if (to != address(0)) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5470:6120  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5465:5468  ++i */\n      dup1\n      tag_240\n      swap1\n      tag_137\n      jump\t// in\n    tag_240:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5429:6120  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_228)\n    tag_229:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6148:6149  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6134:6137  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6134:6144  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6134:6149  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6130:6418  if (ids.length == 1) {... */\n      tag_241\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6165:6175  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6178:6203  ids.unsafeMemoryAccess(0) */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6201:6202  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6178:6181  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6178:6200  ids.unsafeMemoryAccess */\n      tag_132\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6178:6203  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6165:6203  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6217:6230  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6233:6261  values.unsafeMemoryAccess(0) */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6259:6260  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6233:6239  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6233:6258  values.unsafeMemoryAccess */\n      tag_132\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6233:6261  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6217:6261  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6311:6313  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6280:6325  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6305:6309  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6280:6325  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6295:6303  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6280:6325  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6315:6317  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6319:6324  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6280:6325  TransferSingle(operator, from, to, id, value) */\n      mload(0x40)\n      tag_244\n      swap3\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6151:6336  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6130:6418  if (ids.length == 1) {... */\n      jump(tag_245)\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6391:6393  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6361:6407  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6385:6389  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6361:6407  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6375:6383  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6361:6407  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6395:6398  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6400:6406  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6361:6407  TransferBatch(operator, from, to, ids, values) */\n      mload(0x40)\n      tag_246\n      swap3\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6130:6418  if (ids.length == 1) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5250:6424  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5143:6424  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13760:14734  function _doSafeTransferAcceptanceCheck(... */\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13983:13984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13966:13968  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13966:13980  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13966:13984  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13962:14728  if (to.code.length > 0) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14021:14023  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14004:14042  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14043:14051  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14053:14057  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14059:14061  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14063:14068  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14070:14074  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14004:14075  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_252\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_253\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n      0x01\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14000:14718  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n      tag_255\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_260\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_259)\n    tag_260:\n      0x60\n      swap2\n      pop\n    tag_259:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14376:14377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14359:14365  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14359:14372  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14359:14377  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14355:14704  if (reason.length == 0) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14486:14488  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14463:14489  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14355:14704  if (reason.length == 0) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14656:14662  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14650:14663  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14641:14647  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14637:14639  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14633:14648  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14626:14664  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14000:14718  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14136:14179  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14124:14179  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14124:14132  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14124:14179  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14120:14294  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14272:14274  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14249:14275  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14120:14294  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14076:14308  returns (bytes4 response) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13962:14728  if (to.code.length > 0) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13760:14734  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14922:15963  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15170:15171  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15153:15155  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15153:15167  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15153:15171  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15149:15957  if (to.code.length > 0) {... */\n      iszero\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15208:15210  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15191:15234  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15235:15243  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15245:15249  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15251:15254  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15256:15262  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15264:15268  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15191:15269  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_271\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_272\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_272:\n      0x01\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15187:15947  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n      tag_273\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_278\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_277)\n    tag_278:\n      0x60\n      swap2\n      pop\n    tag_277:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15605:15606  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15588:15594  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15588:15601  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15588:15606  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15584:15933  if (reason.length == 0) {... */\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15715:15717  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15692:15718  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15584:15933  if (reason.length == 0) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15885:15891  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15879:15892  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15870:15876  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15866:15868  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15862:15877  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15855:15893  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15187:15947  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15360:15408  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15348:15408  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15348:15356  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15348:15408  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15344:15523  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_283\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15501:15503  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15478:15504  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15344:15523  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15270:15537  returns (... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15149:15957  if (to.code.length > 0) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14922:15963  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_285:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_286:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_287:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_288:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_289:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_361\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_288\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_290:\n        /* \"#utility.yul\":641:665   */\n      tag_363\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_289\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_364:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_291:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_366\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_290\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_292:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_293:\n        /* \"#utility.yul\":997:1021   */\n      tag_369\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_292\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_370:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_294:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_372\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_293\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_22:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_375\n      tag_286\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":1290:1409   */\n    tag_374:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_376\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_291\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_377\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_294\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_295:\n        /* \"#utility.yul\":1764:1788   */\n      tag_379\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_292\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_25:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_381\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_295\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_296:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_297:\n        /* \"#utility.yul\":2256:2279   */\n      tag_384\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_296\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_385\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_385:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_298:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_387\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_297\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_28:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_390\n      tag_286\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":2528:2647   */\n    tag_389:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_391\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_298\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_299:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_300:\n        /* \"#utility.yul\":2963:2984   */\n      tag_394\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_299\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_31:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_396\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_300\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3330   */\n    tag_301:\n        /* \"#utility.yul\":3322:3323   */\n      0x00\n        /* \"#utility.yul\":3319:3320   */\n      dup1\n        /* \"#utility.yul\":3312:3324   */\n      revert\n        /* \"#utility.yul\":3336:3453   */\n    tag_302:\n        /* \"#utility.yul\":3445:3446   */\n      0x00\n        /* \"#utility.yul\":3442:3443   */\n      dup1\n        /* \"#utility.yul\":3435:3447   */\n      revert\n        /* \"#utility.yul\":3459:3561   */\n    tag_303:\n        /* \"#utility.yul\":3500:3506   */\n      0x00\n        /* \"#utility.yul\":3551:3553   */\n      0x1f\n        /* \"#utility.yul\":3547:3554   */\n      not\n        /* \"#utility.yul\":3542:3544   */\n      0x1f\n        /* \"#utility.yul\":3535:3540   */\n      dup4\n        /* \"#utility.yul\":3531:3545   */\n      add\n        /* \"#utility.yul\":3527:3555   */\n      and\n        /* \"#utility.yul\":3517:3555   */\n      swap1\n      pop\n        /* \"#utility.yul\":3459:3561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3567:3747   */\n    tag_123:\n        /* \"#utility.yul\":3615:3692   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3612:3613   */\n      0x00\n        /* \"#utility.yul\":3605:3693   */\n      mstore\n        /* \"#utility.yul\":3712:3716   */\n      0x41\n        /* \"#utility.yul\":3709:3710   */\n      0x04\n        /* \"#utility.yul\":3702:3717   */\n      mstore\n        /* \"#utility.yul\":3736:3740   */\n      0x24\n        /* \"#utility.yul\":3733:3734   */\n      0x00\n        /* \"#utility.yul\":3726:3741   */\n      revert\n        /* \"#utility.yul\":3753:4034   */\n    tag_304:\n        /* \"#utility.yul\":3836:3863   */\n      tag_402\n        /* \"#utility.yul\":3858:3862   */\n      dup3\n        /* \"#utility.yul\":3836:3863   */\n      tag_303\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":3828:3834   */\n      dup2\n        /* \"#utility.yul\":3824:3864   */\n      add\n        /* \"#utility.yul\":3966:3972   */\n      dup2\n        /* \"#utility.yul\":3954:3964   */\n      dup2\n        /* \"#utility.yul\":3951:3973   */\n      lt\n        /* \"#utility.yul\":3930:3948   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3918:3928   */\n      dup3\n        /* \"#utility.yul\":3915:3949   */\n      gt\n        /* \"#utility.yul\":3912:3974   */\n      or\n        /* \"#utility.yul\":3909:3997   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":3977:3995   */\n      tag_404\n      tag_123\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":3909:3997   */\n    tag_403:\n        /* \"#utility.yul\":4017:4027   */\n      dup1\n        /* \"#utility.yul\":4013:4015   */\n      0x40\n        /* \"#utility.yul\":4006:4028   */\n      mstore\n        /* \"#utility.yul\":3796:4034   */\n      pop\n        /* \"#utility.yul\":3753:4034   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4040:4169   */\n    tag_305:\n        /* \"#utility.yul\":4074:4080   */\n      0x00\n        /* \"#utility.yul\":4101:4121   */\n      tag_406\n      tag_285\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":4091:4121   */\n      swap1\n      pop\n        /* \"#utility.yul\":4130:4163   */\n      tag_407\n        /* \"#utility.yul\":4158:4162   */\n      dup3\n        /* \"#utility.yul\":4150:4156   */\n      dup3\n        /* \"#utility.yul\":4130:4163   */\n      tag_304\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":4040:4169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4175:4483   */\n    tag_306:\n        /* \"#utility.yul\":4237:4241   */\n      0x00\n        /* \"#utility.yul\":4327:4345   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4319:4325   */\n      dup3\n        /* \"#utility.yul\":4316:4346   */\n      gt\n        /* \"#utility.yul\":4313:4369   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":4349:4367   */\n      tag_410\n      tag_123\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":4313:4369   */\n    tag_409:\n        /* \"#utility.yul\":4387:4416   */\n      tag_411\n        /* \"#utility.yul\":4409:4415   */\n      dup3\n        /* \"#utility.yul\":4387:4416   */\n      tag_303\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":4379:4416   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4475   */\n      0x20\n        /* \"#utility.yul\":4465:4469   */\n      dup2\n        /* \"#utility.yul\":4461:4476   */\n      add\n        /* \"#utility.yul\":4453:4476   */\n      swap1\n      pop\n        /* \"#utility.yul\":4175:4483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4489:4635   */\n    tag_307:\n        /* \"#utility.yul\":4586:4592   */\n      dup3\n        /* \"#utility.yul\":4581:4584   */\n      dup2\n        /* \"#utility.yul\":4576:4579   */\n      dup4\n        /* \"#utility.yul\":4563:4593   */\n      calldatacopy\n        /* \"#utility.yul\":4627:4628   */\n      0x00\n        /* \"#utility.yul\":4618:4624   */\n      dup4\n        /* \"#utility.yul\":4613:4616   */\n      dup4\n        /* \"#utility.yul\":4609:4625   */\n      add\n        /* \"#utility.yul\":4602:4629   */\n      mstore\n        /* \"#utility.yul\":4489:4635   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4641:5066   */\n    tag_308:\n        /* \"#utility.yul\":4719:4724   */\n      0x00\n        /* \"#utility.yul\":4744:4810   */\n      tag_414\n        /* \"#utility.yul\":4760:4809   */\n      tag_415\n        /* \"#utility.yul\":4802:4808   */\n      dup5\n        /* \"#utility.yul\":4760:4809   */\n      tag_306\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":4744:4810   */\n      tag_305\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":4735:4810   */\n      swap1\n      pop\n        /* \"#utility.yul\":4833:4839   */\n      dup3\n        /* \"#utility.yul\":4826:4831   */\n      dup2\n        /* \"#utility.yul\":4819:4840   */\n      mstore\n        /* \"#utility.yul\":4871:4875   */\n      0x20\n        /* \"#utility.yul\":4864:4869   */\n      dup2\n        /* \"#utility.yul\":4860:4876   */\n      add\n        /* \"#utility.yul\":4909:4912   */\n      dup5\n        /* \"#utility.yul\":4900:4906   */\n      dup5\n        /* \"#utility.yul\":4895:4898   */\n      dup5\n        /* \"#utility.yul\":4891:4907   */\n      add\n        /* \"#utility.yul\":4888:4913   */\n      gt\n        /* \"#utility.yul\":4885:4997   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":4916:4995   */\n      tag_417\n      tag_302\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":4885:4997   */\n    tag_416:\n        /* \"#utility.yul\":5006:5060   */\n      tag_418\n        /* \"#utility.yul\":5053:5059   */\n      dup5\n        /* \"#utility.yul\":5048:5051   */\n      dup3\n        /* \"#utility.yul\":5043:5046   */\n      dup6\n        /* \"#utility.yul\":5006:5060   */\n      tag_307\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":4725:5066   */\n      pop\n        /* \"#utility.yul\":4641:5066   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5086:5426   */\n    tag_309:\n        /* \"#utility.yul\":5142:5147   */\n      0x00\n        /* \"#utility.yul\":5191:5194   */\n      dup3\n        /* \"#utility.yul\":5184:5188   */\n      0x1f\n        /* \"#utility.yul\":5176:5182   */\n      dup4\n        /* \"#utility.yul\":5172:5189   */\n      add\n        /* \"#utility.yul\":5168:5195   */\n      slt\n        /* \"#utility.yul\":5158:5280   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":5199:5278   */\n      tag_421\n      tag_301\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":5158:5280   */\n    tag_420:\n        /* \"#utility.yul\":5316:5322   */\n      dup2\n        /* \"#utility.yul\":5303:5323   */\n      calldataload\n        /* \"#utility.yul\":5341:5420   */\n      tag_422\n        /* \"#utility.yul\":5416:5419   */\n      dup5\n        /* \"#utility.yul\":5408:5414   */\n      dup3\n        /* \"#utility.yul\":5401:5405   */\n      0x20\n        /* \"#utility.yul\":5393:5399   */\n      dup7\n        /* \"#utility.yul\":5389:5406   */\n      add\n        /* \"#utility.yul\":5341:5420   */\n      tag_308\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":5332:5420   */\n      swap2\n      pop\n        /* \"#utility.yul\":5148:5426   */\n      pop\n        /* \"#utility.yul\":5086:5426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5432:5941   */\n    tag_34:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5550:5552   */\n      0x20\n        /* \"#utility.yul\":5538:5547   */\n      dup3\n        /* \"#utility.yul\":5529:5536   */\n      dup5\n        /* \"#utility.yul\":5525:5548   */\n      sub\n        /* \"#utility.yul\":5521:5553   */\n      slt\n        /* \"#utility.yul\":5518:5637   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":5556:5635   */\n      tag_425\n      tag_286\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":5518:5637   */\n    tag_424:\n        /* \"#utility.yul\":5704:5705   */\n      0x00\n        /* \"#utility.yul\":5693:5702   */\n      dup3\n        /* \"#utility.yul\":5689:5706   */\n      add\n        /* \"#utility.yul\":5676:5707   */\n      calldataload\n        /* \"#utility.yul\":5734:5752   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5726:5732   */\n      dup2\n        /* \"#utility.yul\":5723:5753   */\n      gt\n        /* \"#utility.yul\":5720:5837   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":5756:5835   */\n      tag_427\n      tag_287\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":5720:5837   */\n    tag_426:\n        /* \"#utility.yul\":5861:5924   */\n      tag_428\n        /* \"#utility.yul\":5916:5923   */\n      dup5\n        /* \"#utility.yul\":5907:5913   */\n      dup3\n        /* \"#utility.yul\":5896:5905   */\n      dup6\n        /* \"#utility.yul\":5892:5914   */\n      add\n        /* \"#utility.yul\":5861:5924   */\n      tag_309\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":5851:5924   */\n      swap2\n      pop\n        /* \"#utility.yul\":5647:5934   */\n      pop\n        /* \"#utility.yul\":5432:5941   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5947:6276   */\n    tag_38:\n        /* \"#utility.yul\":6006:6012   */\n      0x00\n        /* \"#utility.yul\":6055:6057   */\n      0x20\n        /* \"#utility.yul\":6043:6052   */\n      dup3\n        /* \"#utility.yul\":6034:6041   */\n      dup5\n        /* \"#utility.yul\":6030:6053   */\n      sub\n        /* \"#utility.yul\":6026:6058   */\n      slt\n        /* \"#utility.yul\":6023:6142   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":6061:6140   */\n      tag_431\n      tag_286\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":6023:6142   */\n    tag_430:\n        /* \"#utility.yul\":6181:6182   */\n      0x00\n        /* \"#utility.yul\":6206:6259   */\n      tag_432\n        /* \"#utility.yul\":6251:6258   */\n      dup5\n        /* \"#utility.yul\":6242:6248   */\n      dup3\n        /* \"#utility.yul\":6231:6240   */\n      dup6\n        /* \"#utility.yul\":6227:6249   */\n      add\n        /* \"#utility.yul\":6206:6259   */\n      tag_294\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":6196:6259   */\n      swap2\n      pop\n        /* \"#utility.yul\":6152:6269   */\n      pop\n        /* \"#utility.yul\":5947:6276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6282:6381   */\n    tag_310:\n        /* \"#utility.yul\":6334:6340   */\n      0x00\n        /* \"#utility.yul\":6368:6373   */\n      dup2\n        /* \"#utility.yul\":6362:6374   */\n      mload\n        /* \"#utility.yul\":6352:6374   */\n      swap1\n      pop\n        /* \"#utility.yul\":6282:6381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6387:6556   */\n    tag_311:\n        /* \"#utility.yul\":6471:6482   */\n      0x00\n        /* \"#utility.yul\":6505:6511   */\n      dup3\n        /* \"#utility.yul\":6500:6503   */\n      dup3\n        /* \"#utility.yul\":6493:6512   */\n      mstore\n        /* \"#utility.yul\":6545:6549   */\n      0x20\n        /* \"#utility.yul\":6540:6543   */\n      dup3\n        /* \"#utility.yul\":6536:6550   */\n      add\n        /* \"#utility.yul\":6521:6550   */\n      swap1\n      pop\n        /* \"#utility.yul\":6387:6556   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6562:6808   */\n    tag_312:\n        /* \"#utility.yul\":6643:6644   */\n      0x00\n        /* \"#utility.yul\":6653:6766   */\n    tag_436:\n        /* \"#utility.yul\":6667:6673   */\n      dup4\n        /* \"#utility.yul\":6664:6665   */\n      dup2\n        /* \"#utility.yul\":6661:6674   */\n      lt\n        /* \"#utility.yul\":6653:6766   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":6752:6753   */\n      dup1\n        /* \"#utility.yul\":6747:6750   */\n      dup3\n        /* \"#utility.yul\":6743:6754   */\n      add\n        /* \"#utility.yul\":6737:6755   */\n      mload\n        /* \"#utility.yul\":6733:6734   */\n      dup2\n        /* \"#utility.yul\":6728:6731   */\n      dup5\n        /* \"#utility.yul\":6724:6735   */\n      add\n        /* \"#utility.yul\":6717:6756   */\n      mstore\n        /* \"#utility.yul\":6689:6691   */\n      0x20\n        /* \"#utility.yul\":6686:6687   */\n      dup2\n        /* \"#utility.yul\":6682:6692   */\n      add\n        /* \"#utility.yul\":6677:6692   */\n      swap1\n      pop\n        /* \"#utility.yul\":6653:6766   */\n      jump(tag_436)\n    tag_438:\n        /* \"#utility.yul\":6800:6801   */\n      0x00\n        /* \"#utility.yul\":6791:6797   */\n      dup5\n        /* \"#utility.yul\":6786:6789   */\n      dup5\n        /* \"#utility.yul\":6782:6798   */\n      add\n        /* \"#utility.yul\":6775:6802   */\n      mstore\n        /* \"#utility.yul\":6624:6808   */\n      pop\n        /* \"#utility.yul\":6562:6808   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6814:7191   */\n    tag_313:\n        /* \"#utility.yul\":6902:6905   */\n      0x00\n        /* \"#utility.yul\":6930:6969   */\n      tag_440\n        /* \"#utility.yul\":6963:6968   */\n      dup3\n        /* \"#utility.yul\":6930:6969   */\n      tag_310\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":6985:7056   */\n      tag_441\n        /* \"#utility.yul\":7049:7055   */\n      dup2\n        /* \"#utility.yul\":7044:7047   */\n      dup6\n        /* \"#utility.yul\":6985:7056   */\n      tag_311\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":6978:7056   */\n      swap4\n      pop\n        /* \"#utility.yul\":7065:7130   */\n      tag_442\n        /* \"#utility.yul\":7123:7129   */\n      dup2\n        /* \"#utility.yul\":7118:7121   */\n      dup6\n        /* \"#utility.yul\":7111:7115   */\n      0x20\n        /* \"#utility.yul\":7104:7109   */\n      dup7\n        /* \"#utility.yul\":7100:7116   */\n      add\n        /* \"#utility.yul\":7065:7130   */\n      tag_312\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":7155:7184   */\n      tag_443\n        /* \"#utility.yul\":7177:7183   */\n      dup2\n        /* \"#utility.yul\":7155:7184   */\n      tag_303\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":7150:7153   */\n      dup5\n        /* \"#utility.yul\":7146:7185   */\n      add\n        /* \"#utility.yul\":7139:7185   */\n      swap2\n      pop\n        /* \"#utility.yul\":6906:7191   */\n      pop\n        /* \"#utility.yul\":6814:7191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7197:7510   */\n    tag_41:\n        /* \"#utility.yul\":7310:7314   */\n      0x00\n        /* \"#utility.yul\":7348:7350   */\n      0x20\n        /* \"#utility.yul\":7337:7346   */\n      dup3\n        /* \"#utility.yul\":7333:7351   */\n      add\n        /* \"#utility.yul\":7325:7351   */\n      swap1\n      pop\n        /* \"#utility.yul\":7397:7406   */\n      dup2\n        /* \"#utility.yul\":7391:7395   */\n      dup2\n        /* \"#utility.yul\":7387:7407   */\n      sub\n        /* \"#utility.yul\":7383:7384   */\n      0x00\n        /* \"#utility.yul\":7372:7381   */\n      dup4\n        /* \"#utility.yul\":7368:7385   */\n      add\n        /* \"#utility.yul\":7361:7408   */\n      mstore\n        /* \"#utility.yul\":7425:7503   */\n      tag_445\n        /* \"#utility.yul\":7498:7502   */\n      dup2\n        /* \"#utility.yul\":7489:7495   */\n      dup5\n        /* \"#utility.yul\":7425:7503   */\n      tag_313\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":7417:7503   */\n      swap1\n      pop\n        /* \"#utility.yul\":7197:7510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7516:7827   */\n    tag_314:\n        /* \"#utility.yul\":7593:7597   */\n      0x00\n        /* \"#utility.yul\":7683:7701   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7675:7681   */\n      dup3\n        /* \"#utility.yul\":7672:7702   */\n      gt\n        /* \"#utility.yul\":7669:7725   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":7705:7723   */\n      tag_448\n      tag_123\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":7669:7725   */\n    tag_447:\n        /* \"#utility.yul\":7755:7759   */\n      0x20\n        /* \"#utility.yul\":7747:7753   */\n      dup3\n        /* \"#utility.yul\":7743:7760   */\n      mul\n        /* \"#utility.yul\":7735:7760   */\n      swap1\n      pop\n        /* \"#utility.yul\":7815:7819   */\n      0x20\n        /* \"#utility.yul\":7809:7813   */\n      dup2\n        /* \"#utility.yul\":7805:7820   */\n      add\n        /* \"#utility.yul\":7797:7820   */\n      swap1\n      pop\n        /* \"#utility.yul\":7516:7827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7833:7950   */\n    tag_315:\n        /* \"#utility.yul\":7942:7943   */\n      0x00\n        /* \"#utility.yul\":7939:7940   */\n      dup1\n        /* \"#utility.yul\":7932:7944   */\n      revert\n        /* \"#utility.yul\":7973:8683   */\n    tag_316:\n        /* \"#utility.yul\":8069:8074   */\n      0x00\n        /* \"#utility.yul\":8094:8175   */\n      tag_451\n        /* \"#utility.yul\":8110:8174   */\n      tag_452\n        /* \"#utility.yul\":8167:8173   */\n      dup5\n        /* \"#utility.yul\":8110:8174   */\n      tag_314\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":8094:8175   */\n      tag_305\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":8085:8175   */\n      swap1\n      pop\n        /* \"#utility.yul\":8195:8200   */\n      dup1\n        /* \"#utility.yul\":8224:8230   */\n      dup4\n        /* \"#utility.yul\":8217:8222   */\n      dup3\n        /* \"#utility.yul\":8210:8231   */\n      mstore\n        /* \"#utility.yul\":8258:8262   */\n      0x20\n        /* \"#utility.yul\":8251:8256   */\n      dup3\n        /* \"#utility.yul\":8247:8263   */\n      add\n        /* \"#utility.yul\":8240:8263   */\n      swap1\n      pop\n        /* \"#utility.yul\":8311:8315   */\n      0x20\n        /* \"#utility.yul\":8303:8309   */\n      dup5\n        /* \"#utility.yul\":8299:8316   */\n      mul\n        /* \"#utility.yul\":8291:8297   */\n      dup4\n        /* \"#utility.yul\":8287:8317   */\n      add\n        /* \"#utility.yul\":8340:8343   */\n      dup6\n        /* \"#utility.yul\":8332:8338   */\n      dup2\n        /* \"#utility.yul\":8329:8344   */\n      gt\n        /* \"#utility.yul\":8326:8448   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":8359:8438   */\n      tag_454\n      tag_315\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":8326:8448   */\n    tag_453:\n        /* \"#utility.yul\":8474:8480   */\n      dup4\n        /* \"#utility.yul\":8457:8677   */\n    tag_455:\n        /* \"#utility.yul\":8491:8497   */\n      dup2\n        /* \"#utility.yul\":8486:8489   */\n      dup2\n        /* \"#utility.yul\":8483:8498   */\n      lt\n        /* \"#utility.yul\":8457:8677   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":8566:8569   */\n      dup1\n        /* \"#utility.yul\":8595:8632   */\n      tag_458\n        /* \"#utility.yul\":8628:8631   */\n      dup9\n        /* \"#utility.yul\":8616:8626   */\n      dup3\n        /* \"#utility.yul\":8595:8632   */\n      tag_294\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":8590:8593   */\n      dup5\n        /* \"#utility.yul\":8583:8633   */\n      mstore\n        /* \"#utility.yul\":8662:8666   */\n      0x20\n        /* \"#utility.yul\":8657:8660   */\n      dup5\n        /* \"#utility.yul\":8653:8667   */\n      add\n        /* \"#utility.yul\":8646:8667   */\n      swap4\n      pop\n        /* \"#utility.yul\":8533:8677   */\n      pop\n        /* \"#utility.yul\":8517:8521   */\n      0x20\n        /* \"#utility.yul\":8512:8515   */\n      dup2\n        /* \"#utility.yul\":8508:8522   */\n      add\n        /* \"#utility.yul\":8501:8522   */\n      swap1\n      pop\n        /* \"#utility.yul\":8457:8677   */\n      jump(tag_455)\n    tag_457:\n        /* \"#utility.yul\":8461:8482   */\n      pop\n        /* \"#utility.yul\":8075:8683   */\n      pop\n      pop\n        /* \"#utility.yul\":7973:8683   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8706:9076   */\n    tag_317:\n        /* \"#utility.yul\":8777:8782   */\n      0x00\n        /* \"#utility.yul\":8826:8829   */\n      dup3\n        /* \"#utility.yul\":8819:8823   */\n      0x1f\n        /* \"#utility.yul\":8811:8817   */\n      dup4\n        /* \"#utility.yul\":8807:8824   */\n      add\n        /* \"#utility.yul\":8803:8830   */\n      slt\n        /* \"#utility.yul\":8793:8915   */\n      tag_460\n      jumpi\n        /* \"#utility.yul\":8834:8913   */\n      tag_461\n      tag_301\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":8793:8915   */\n    tag_460:\n        /* \"#utility.yul\":8951:8957   */\n      dup2\n        /* \"#utility.yul\":8938:8958   */\n      calldataload\n        /* \"#utility.yul\":8976:9070   */\n      tag_462\n        /* \"#utility.yul\":9066:9069   */\n      dup5\n        /* \"#utility.yul\":9058:9064   */\n      dup3\n        /* \"#utility.yul\":9051:9055   */\n      0x20\n        /* \"#utility.yul\":9043:9049   */\n      dup7\n        /* \"#utility.yul\":9039:9056   */\n      add\n        /* \"#utility.yul\":8976:9070   */\n      tag_316\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":8967:9070   */\n      swap2\n      pop\n        /* \"#utility.yul\":8783:9076   */\n      pop\n        /* \"#utility.yul\":8706:9076   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9082:9389   */\n    tag_318:\n        /* \"#utility.yul\":9143:9147   */\n      0x00\n        /* \"#utility.yul\":9233:9251   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9225:9231   */\n      dup3\n        /* \"#utility.yul\":9222:9252   */\n      gt\n        /* \"#utility.yul\":9219:9275   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":9255:9273   */\n      tag_465\n      tag_123\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":9219:9275   */\n    tag_464:\n        /* \"#utility.yul\":9293:9322   */\n      tag_466\n        /* \"#utility.yul\":9315:9321   */\n      dup3\n        /* \"#utility.yul\":9293:9322   */\n      tag_303\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":9285:9322   */\n      swap1\n      pop\n        /* \"#utility.yul\":9377:9381   */\n      0x20\n        /* \"#utility.yul\":9371:9375   */\n      dup2\n        /* \"#utility.yul\":9367:9382   */\n      add\n        /* \"#utility.yul\":9359:9382   */\n      swap1\n      pop\n        /* \"#utility.yul\":9082:9389   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9395:9818   */\n    tag_319:\n        /* \"#utility.yul\":9472:9477   */\n      0x00\n        /* \"#utility.yul\":9497:9562   */\n      tag_468\n        /* \"#utility.yul\":9513:9561   */\n      tag_469\n        /* \"#utility.yul\":9554:9560   */\n      dup5\n        /* \"#utility.yul\":9513:9561   */\n      tag_318\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":9497:9562   */\n      tag_305\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":9488:9562   */\n      swap1\n      pop\n        /* \"#utility.yul\":9585:9591   */\n      dup3\n        /* \"#utility.yul\":9578:9583   */\n      dup2\n        /* \"#utility.yul\":9571:9592   */\n      mstore\n        /* \"#utility.yul\":9623:9627   */\n      0x20\n        /* \"#utility.yul\":9616:9621   */\n      dup2\n        /* \"#utility.yul\":9612:9628   */\n      add\n        /* \"#utility.yul\":9661:9664   */\n      dup5\n        /* \"#utility.yul\":9652:9658   */\n      dup5\n        /* \"#utility.yul\":9647:9650   */\n      dup5\n        /* \"#utility.yul\":9643:9659   */\n      add\n        /* \"#utility.yul\":9640:9665   */\n      gt\n        /* \"#utility.yul\":9637:9749   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":9668:9747   */\n      tag_471\n      tag_302\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":9637:9749   */\n    tag_470:\n        /* \"#utility.yul\":9758:9812   */\n      tag_472\n        /* \"#utility.yul\":9805:9811   */\n      dup5\n        /* \"#utility.yul\":9800:9803   */\n      dup3\n        /* \"#utility.yul\":9795:9798   */\n      dup6\n        /* \"#utility.yul\":9758:9812   */\n      tag_307\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":9478:9818   */\n      pop\n        /* \"#utility.yul\":9395:9818   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9837:10175   */\n    tag_320:\n        /* \"#utility.yul\":9892:9897   */\n      0x00\n        /* \"#utility.yul\":9941:9944   */\n      dup3\n        /* \"#utility.yul\":9934:9938   */\n      0x1f\n        /* \"#utility.yul\":9926:9932   */\n      dup4\n        /* \"#utility.yul\":9922:9939   */\n      add\n        /* \"#utility.yul\":9918:9945   */\n      slt\n        /* \"#utility.yul\":9908:10030   */\n      tag_474\n      jumpi\n        /* \"#utility.yul\":9949:10028   */\n      tag_475\n      tag_301\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":9908:10030   */\n    tag_474:\n        /* \"#utility.yul\":10066:10072   */\n      dup2\n        /* \"#utility.yul\":10053:10073   */\n      calldataload\n        /* \"#utility.yul\":10091:10169   */\n      tag_476\n        /* \"#utility.yul\":10165:10168   */\n      dup5\n        /* \"#utility.yul\":10157:10163   */\n      dup3\n        /* \"#utility.yul\":10150:10154   */\n      0x20\n        /* \"#utility.yul\":10142:10148   */\n      dup7\n        /* \"#utility.yul\":10138:10155   */\n      add\n        /* \"#utility.yul\":10091:10169   */\n      tag_319\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":10082:10169   */\n      swap2\n      pop\n        /* \"#utility.yul\":9898:10175   */\n      pop\n        /* \"#utility.yul\":9837:10175   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10181:11544   */\n    tag_44:\n        /* \"#utility.yul\":10326:10332   */\n      0x00\n        /* \"#utility.yul\":10334:10340   */\n      dup1\n        /* \"#utility.yul\":10342:10348   */\n      0x00\n        /* \"#utility.yul\":10350:10356   */\n      dup1\n        /* \"#utility.yul\":10399:10402   */\n      0x80\n        /* \"#utility.yul\":10387:10396   */\n      dup6\n        /* \"#utility.yul\":10378:10385   */\n      dup8\n        /* \"#utility.yul\":10374:10397   */\n      sub\n        /* \"#utility.yul\":10370:10403   */\n      slt\n        /* \"#utility.yul\":10367:10487   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":10406:10485   */\n      tag_479\n      tag_286\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":10367:10487   */\n    tag_478:\n        /* \"#utility.yul\":10526:10527   */\n      0x00\n        /* \"#utility.yul\":10551:10604   */\n      tag_480\n        /* \"#utility.yul\":10596:10603   */\n      dup8\n        /* \"#utility.yul\":10587:10593   */\n      dup3\n        /* \"#utility.yul\":10576:10585   */\n      dup9\n        /* \"#utility.yul\":10572:10594   */\n      add\n        /* \"#utility.yul\":10551:10604   */\n      tag_291\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":10541:10604   */\n      swap5\n      pop\n        /* \"#utility.yul\":10497:10614   */\n      pop\n        /* \"#utility.yul\":10681:10683   */\n      0x20\n        /* \"#utility.yul\":10670:10679   */\n      dup6\n        /* \"#utility.yul\":10666:10684   */\n      add\n        /* \"#utility.yul\":10653:10685   */\n      calldataload\n        /* \"#utility.yul\":10712:10730   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10704:10710   */\n      dup2\n        /* \"#utility.yul\":10701:10731   */\n      gt\n        /* \"#utility.yul\":10698:10815   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":10734:10813   */\n      tag_482\n      tag_287\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":10698:10815   */\n    tag_481:\n        /* \"#utility.yul\":10839:10917   */\n      tag_483\n        /* \"#utility.yul\":10909:10916   */\n      dup8\n        /* \"#utility.yul\":10900:10906   */\n      dup3\n        /* \"#utility.yul\":10889:10898   */\n      dup9\n        /* \"#utility.yul\":10885:10907   */\n      add\n        /* \"#utility.yul\":10839:10917   */\n      tag_317\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":10829:10917   */\n      swap4\n      pop\n        /* \"#utility.yul\":10624:10927   */\n      pop\n        /* \"#utility.yul\":10994:10996   */\n      0x40\n        /* \"#utility.yul\":10983:10992   */\n      dup6\n        /* \"#utility.yul\":10979:10997   */\n      add\n        /* \"#utility.yul\":10966:10998   */\n      calldataload\n        /* \"#utility.yul\":11025:11043   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11017:11023   */\n      dup2\n        /* \"#utility.yul\":11014:11044   */\n      gt\n        /* \"#utility.yul\":11011:11128   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":11047:11126   */\n      tag_485\n      tag_287\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":11011:11128   */\n    tag_484:\n        /* \"#utility.yul\":11152:11230   */\n      tag_486\n        /* \"#utility.yul\":11222:11229   */\n      dup8\n        /* \"#utility.yul\":11213:11219   */\n      dup3\n        /* \"#utility.yul\":11202:11211   */\n      dup9\n        /* \"#utility.yul\":11198:11220   */\n      add\n        /* \"#utility.yul\":11152:11230   */\n      tag_317\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":11142:11230   */\n      swap3\n      pop\n        /* \"#utility.yul\":10937:11240   */\n      pop\n        /* \"#utility.yul\":11307:11309   */\n      0x60\n        /* \"#utility.yul\":11296:11305   */\n      dup6\n        /* \"#utility.yul\":11292:11310   */\n      add\n        /* \"#utility.yul\":11279:11311   */\n      calldataload\n        /* \"#utility.yul\":11338:11356   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11330:11336   */\n      dup2\n        /* \"#utility.yul\":11327:11357   */\n      gt\n        /* \"#utility.yul\":11324:11441   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":11360:11439   */\n      tag_488\n      tag_287\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":11324:11441   */\n    tag_487:\n        /* \"#utility.yul\":11465:11527   */\n      tag_489\n        /* \"#utility.yul\":11519:11526   */\n      dup8\n        /* \"#utility.yul\":11510:11516   */\n      dup3\n        /* \"#utility.yul\":11499:11508   */\n      dup9\n        /* \"#utility.yul\":11495:11517   */\n      add\n        /* \"#utility.yul\":11465:11527   */\n      tag_320\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":11455:11527   */\n      swap2\n      pop\n        /* \"#utility.yul\":11250:11537   */\n      pop\n        /* \"#utility.yul\":10181:11544   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11550:13059   */\n    tag_48:\n        /* \"#utility.yul\":11704:11710   */\n      0x00\n        /* \"#utility.yul\":11712:11718   */\n      dup1\n        /* \"#utility.yul\":11720:11726   */\n      0x00\n        /* \"#utility.yul\":11728:11734   */\n      dup1\n        /* \"#utility.yul\":11736:11742   */\n      0x00\n        /* \"#utility.yul\":11785:11788   */\n      0xa0\n        /* \"#utility.yul\":11773:11782   */\n      dup7\n        /* \"#utility.yul\":11764:11771   */\n      dup9\n        /* \"#utility.yul\":11760:11783   */\n      sub\n        /* \"#utility.yul\":11756:11789   */\n      slt\n        /* \"#utility.yul\":11753:11873   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":11792:11871   */\n      tag_492\n      tag_286\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":11753:11873   */\n    tag_491:\n        /* \"#utility.yul\":11912:11913   */\n      0x00\n        /* \"#utility.yul\":11937:11990   */\n      tag_493\n        /* \"#utility.yul\":11982:11989   */\n      dup9\n        /* \"#utility.yul\":11973:11979   */\n      dup3\n        /* \"#utility.yul\":11962:11971   */\n      dup10\n        /* \"#utility.yul\":11958:11980   */\n      add\n        /* \"#utility.yul\":11937:11990   */\n      tag_291\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":11927:11990   */\n      swap6\n      pop\n        /* \"#utility.yul\":11883:12000   */\n      pop\n        /* \"#utility.yul\":12039:12041   */\n      0x20\n        /* \"#utility.yul\":12065:12118   */\n      tag_494\n        /* \"#utility.yul\":12110:12117   */\n      dup9\n        /* \"#utility.yul\":12101:12107   */\n      dup3\n        /* \"#utility.yul\":12090:12099   */\n      dup10\n        /* \"#utility.yul\":12086:12108   */\n      add\n        /* \"#utility.yul\":12065:12118   */\n      tag_291\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":12055:12118   */\n      swap5\n      pop\n        /* \"#utility.yul\":12010:12128   */\n      pop\n        /* \"#utility.yul\":12195:12197   */\n      0x40\n        /* \"#utility.yul\":12184:12193   */\n      dup7\n        /* \"#utility.yul\":12180:12198   */\n      add\n        /* \"#utility.yul\":12167:12199   */\n      calldataload\n        /* \"#utility.yul\":12226:12244   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12218:12224   */\n      dup2\n        /* \"#utility.yul\":12215:12245   */\n      gt\n        /* \"#utility.yul\":12212:12329   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":12248:12327   */\n      tag_496\n      tag_287\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":12212:12329   */\n    tag_495:\n        /* \"#utility.yul\":12353:12431   */\n      tag_497\n        /* \"#utility.yul\":12423:12430   */\n      dup9\n        /* \"#utility.yul\":12414:12420   */\n      dup3\n        /* \"#utility.yul\":12403:12412   */\n      dup10\n        /* \"#utility.yul\":12399:12421   */\n      add\n        /* \"#utility.yul\":12353:12431   */\n      tag_317\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":12343:12431   */\n      swap4\n      pop\n        /* \"#utility.yul\":12138:12441   */\n      pop\n        /* \"#utility.yul\":12508:12510   */\n      0x60\n        /* \"#utility.yul\":12497:12506   */\n      dup7\n        /* \"#utility.yul\":12493:12511   */\n      add\n        /* \"#utility.yul\":12480:12512   */\n      calldataload\n        /* \"#utility.yul\":12539:12557   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12531:12537   */\n      dup2\n        /* \"#utility.yul\":12528:12558   */\n      gt\n        /* \"#utility.yul\":12525:12642   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":12561:12640   */\n      tag_499\n      tag_287\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":12525:12642   */\n    tag_498:\n        /* \"#utility.yul\":12666:12744   */\n      tag_500\n        /* \"#utility.yul\":12736:12743   */\n      dup9\n        /* \"#utility.yul\":12727:12733   */\n      dup3\n        /* \"#utility.yul\":12716:12725   */\n      dup10\n        /* \"#utility.yul\":12712:12734   */\n      add\n        /* \"#utility.yul\":12666:12744   */\n      tag_317\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":12656:12744   */\n      swap3\n      pop\n        /* \"#utility.yul\":12451:12754   */\n      pop\n        /* \"#utility.yul\":12821:12824   */\n      0x80\n        /* \"#utility.yul\":12810:12819   */\n      dup7\n        /* \"#utility.yul\":12806:12825   */\n      add\n        /* \"#utility.yul\":12793:12826   */\n      calldataload\n        /* \"#utility.yul\":12853:12871   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12845:12851   */\n      dup2\n        /* \"#utility.yul\":12842:12872   */\n      gt\n        /* \"#utility.yul\":12839:12956   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":12875:12954   */\n      tag_502\n      tag_287\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":12839:12956   */\n    tag_501:\n        /* \"#utility.yul\":12980:13042   */\n      tag_503\n        /* \"#utility.yul\":13034:13041   */\n      dup9\n        /* \"#utility.yul\":13025:13031   */\n      dup3\n        /* \"#utility.yul\":13014:13023   */\n      dup10\n        /* \"#utility.yul\":13010:13032   */\n      add\n        /* \"#utility.yul\":12980:13042   */\n      tag_320\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":12970:13042   */\n      swap2\n      pop\n        /* \"#utility.yul\":12764:13052   */\n      pop\n        /* \"#utility.yul\":11550:13059   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13065:13376   */\n    tag_321:\n        /* \"#utility.yul\":13142:13146   */\n      0x00\n        /* \"#utility.yul\":13232:13250   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13224:13230   */\n      dup3\n        /* \"#utility.yul\":13221:13251   */\n      gt\n        /* \"#utility.yul\":13218:13274   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":13254:13272   */\n      tag_506\n      tag_123\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":13218:13274   */\n    tag_505:\n        /* \"#utility.yul\":13304:13308   */\n      0x20\n        /* \"#utility.yul\":13296:13302   */\n      dup3\n        /* \"#utility.yul\":13292:13309   */\n      mul\n        /* \"#utility.yul\":13284:13309   */\n      swap1\n      pop\n        /* \"#utility.yul\":13364:13368   */\n      0x20\n        /* \"#utility.yul\":13358:13362   */\n      dup2\n        /* \"#utility.yul\":13354:13369   */\n      add\n        /* \"#utility.yul\":13346:13369   */\n      swap1\n      pop\n        /* \"#utility.yul\":13065:13376   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13399:14109   */\n    tag_322:\n        /* \"#utility.yul\":13495:13500   */\n      0x00\n        /* \"#utility.yul\":13520:13601   */\n      tag_508\n        /* \"#utility.yul\":13536:13600   */\n      tag_509\n        /* \"#utility.yul\":13593:13599   */\n      dup5\n        /* \"#utility.yul\":13536:13600   */\n      tag_321\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":13520:13601   */\n      tag_305\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":13511:13601   */\n      swap1\n      pop\n        /* \"#utility.yul\":13621:13626   */\n      dup1\n        /* \"#utility.yul\":13650:13656   */\n      dup4\n        /* \"#utility.yul\":13643:13648   */\n      dup3\n        /* \"#utility.yul\":13636:13657   */\n      mstore\n        /* \"#utility.yul\":13684:13688   */\n      0x20\n        /* \"#utility.yul\":13677:13682   */\n      dup3\n        /* \"#utility.yul\":13673:13689   */\n      add\n        /* \"#utility.yul\":13666:13689   */\n      swap1\n      pop\n        /* \"#utility.yul\":13737:13741   */\n      0x20\n        /* \"#utility.yul\":13729:13735   */\n      dup5\n        /* \"#utility.yul\":13725:13742   */\n      mul\n        /* \"#utility.yul\":13717:13723   */\n      dup4\n        /* \"#utility.yul\":13713:13743   */\n      add\n        /* \"#utility.yul\":13766:13769   */\n      dup6\n        /* \"#utility.yul\":13758:13764   */\n      dup2\n        /* \"#utility.yul\":13755:13770   */\n      gt\n        /* \"#utility.yul\":13752:13874   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":13785:13864   */\n      tag_511\n      tag_315\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":13752:13874   */\n    tag_510:\n        /* \"#utility.yul\":13900:13906   */\n      dup4\n        /* \"#utility.yul\":13883:14103   */\n    tag_512:\n        /* \"#utility.yul\":13917:13923   */\n      dup2\n        /* \"#utility.yul\":13912:13915   */\n      dup2\n        /* \"#utility.yul\":13909:13924   */\n      lt\n        /* \"#utility.yul\":13883:14103   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":13992:13995   */\n      dup1\n        /* \"#utility.yul\":14021:14058   */\n      tag_515\n        /* \"#utility.yul\":14054:14057   */\n      dup9\n        /* \"#utility.yul\":14042:14052   */\n      dup3\n        /* \"#utility.yul\":14021:14058   */\n      tag_291\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":14016:14019   */\n      dup5\n        /* \"#utility.yul\":14009:14059   */\n      mstore\n        /* \"#utility.yul\":14088:14092   */\n      0x20\n        /* \"#utility.yul\":14083:14086   */\n      dup5\n        /* \"#utility.yul\":14079:14093   */\n      add\n        /* \"#utility.yul\":14072:14093   */\n      swap4\n      pop\n        /* \"#utility.yul\":13959:14103   */\n      pop\n        /* \"#utility.yul\":13943:13947   */\n      0x20\n        /* \"#utility.yul\":13938:13941   */\n      dup2\n        /* \"#utility.yul\":13934:13948   */\n      add\n        /* \"#utility.yul\":13927:13948   */\n      swap1\n      pop\n        /* \"#utility.yul\":13883:14103   */\n      jump(tag_512)\n    tag_514:\n        /* \"#utility.yul\":13887:13908   */\n      pop\n        /* \"#utility.yul\":13501:14109   */\n      pop\n      pop\n        /* \"#utility.yul\":13399:14109   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14132:14502   */\n    tag_323:\n        /* \"#utility.yul\":14203:14208   */\n      0x00\n        /* \"#utility.yul\":14252:14255   */\n      dup3\n        /* \"#utility.yul\":14245:14249   */\n      0x1f\n        /* \"#utility.yul\":14237:14243   */\n      dup4\n        /* \"#utility.yul\":14233:14250   */\n      add\n        /* \"#utility.yul\":14229:14256   */\n      slt\n        /* \"#utility.yul\":14219:14341   */\n      tag_517\n      jumpi\n        /* \"#utility.yul\":14260:14339   */\n      tag_518\n      tag_301\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":14219:14341   */\n    tag_517:\n        /* \"#utility.yul\":14377:14383   */\n      dup2\n        /* \"#utility.yul\":14364:14384   */\n      calldataload\n        /* \"#utility.yul\":14402:14496   */\n      tag_519\n        /* \"#utility.yul\":14492:14495   */\n      dup5\n        /* \"#utility.yul\":14484:14490   */\n      dup3\n        /* \"#utility.yul\":14477:14481   */\n      0x20\n        /* \"#utility.yul\":14469:14475   */\n      dup7\n        /* \"#utility.yul\":14465:14482   */\n      add\n        /* \"#utility.yul\":14402:14496   */\n      tag_322\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":14393:14496   */\n      swap2\n      pop\n        /* \"#utility.yul\":14209:14502   */\n      pop\n        /* \"#utility.yul\":14132:14502   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14508:15402   */\n    tag_52:\n        /* \"#utility.yul\":14626:14632   */\n      0x00\n        /* \"#utility.yul\":14634:14640   */\n      dup1\n        /* \"#utility.yul\":14683:14685   */\n      0x40\n        /* \"#utility.yul\":14671:14680   */\n      dup4\n        /* \"#utility.yul\":14662:14669   */\n      dup6\n        /* \"#utility.yul\":14658:14681   */\n      sub\n        /* \"#utility.yul\":14654:14686   */\n      slt\n        /* \"#utility.yul\":14651:14770   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":14689:14768   */\n      tag_522\n      tag_286\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":14651:14770   */\n    tag_521:\n        /* \"#utility.yul\":14837:14838   */\n      0x00\n        /* \"#utility.yul\":14826:14835   */\n      dup4\n        /* \"#utility.yul\":14822:14839   */\n      add\n        /* \"#utility.yul\":14809:14840   */\n      calldataload\n        /* \"#utility.yul\":14867:14885   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14859:14865   */\n      dup2\n        /* \"#utility.yul\":14856:14886   */\n      gt\n        /* \"#utility.yul\":14853:14970   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":14889:14968   */\n      tag_524\n      tag_287\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":14853:14970   */\n    tag_523:\n        /* \"#utility.yul\":14994:15072   */\n      tag_525\n        /* \"#utility.yul\":15064:15071   */\n      dup6\n        /* \"#utility.yul\":15055:15061   */\n      dup3\n        /* \"#utility.yul\":15044:15053   */\n      dup7\n        /* \"#utility.yul\":15040:15062   */\n      add\n        /* \"#utility.yul\":14994:15072   */\n      tag_323\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":14984:15072   */\n      swap3\n      pop\n        /* \"#utility.yul\":14780:15082   */\n      pop\n        /* \"#utility.yul\":15149:15151   */\n      0x20\n        /* \"#utility.yul\":15138:15147   */\n      dup4\n        /* \"#utility.yul\":15134:15152   */\n      add\n        /* \"#utility.yul\":15121:15153   */\n      calldataload\n        /* \"#utility.yul\":15180:15198   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15172:15178   */\n      dup2\n        /* \"#utility.yul\":15169:15199   */\n      gt\n        /* \"#utility.yul\":15166:15283   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":15202:15281   */\n      tag_527\n      tag_287\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":15166:15283   */\n    tag_526:\n        /* \"#utility.yul\":15307:15385   */\n      tag_528\n        /* \"#utility.yul\":15377:15384   */\n      dup6\n        /* \"#utility.yul\":15368:15374   */\n      dup3\n        /* \"#utility.yul\":15357:15366   */\n      dup7\n        /* \"#utility.yul\":15353:15375   */\n      add\n        /* \"#utility.yul\":15307:15385   */\n      tag_317\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":15297:15385   */\n      swap2\n      pop\n        /* \"#utility.yul\":15092:15395   */\n      pop\n        /* \"#utility.yul\":14508:15402   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15408:15522   */\n    tag_324:\n        /* \"#utility.yul\":15475:15481   */\n      0x00\n        /* \"#utility.yul\":15509:15514   */\n      dup2\n        /* \"#utility.yul\":15503:15515   */\n      mload\n        /* \"#utility.yul\":15493:15515   */\n      swap1\n      pop\n        /* \"#utility.yul\":15408:15522   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15528:15712   */\n    tag_325:\n        /* \"#utility.yul\":15627:15638   */\n      0x00\n        /* \"#utility.yul\":15661:15667   */\n      dup3\n        /* \"#utility.yul\":15656:15659   */\n      dup3\n        /* \"#utility.yul\":15649:15668   */\n      mstore\n        /* \"#utility.yul\":15701:15705   */\n      0x20\n        /* \"#utility.yul\":15696:15699   */\n      dup3\n        /* \"#utility.yul\":15692:15706   */\n      add\n        /* \"#utility.yul\":15677:15706   */\n      swap1\n      pop\n        /* \"#utility.yul\":15528:15712   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15718:15850   */\n    tag_326:\n        /* \"#utility.yul\":15785:15789   */\n      0x00\n        /* \"#utility.yul\":15808:15811   */\n      dup2\n        /* \"#utility.yul\":15800:15811   */\n      swap1\n      pop\n        /* \"#utility.yul\":15838:15842   */\n      0x20\n        /* \"#utility.yul\":15833:15836   */\n      dup3\n        /* \"#utility.yul\":15829:15843   */\n      add\n        /* \"#utility.yul\":15821:15843   */\n      swap1\n      pop\n        /* \"#utility.yul\":15718:15850   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15856:15964   */\n    tag_327:\n        /* \"#utility.yul\":15933:15957   */\n      tag_533\n        /* \"#utility.yul\":15951:15956   */\n      dup2\n        /* \"#utility.yul\":15933:15957   */\n      tag_292\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":15928:15931   */\n      dup3\n        /* \"#utility.yul\":15921:15958   */\n      mstore\n        /* \"#utility.yul\":15856:15964   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15970:16149   */\n    tag_328:\n        /* \"#utility.yul\":16039:16049   */\n      0x00\n        /* \"#utility.yul\":16060:16106   */\n      tag_535\n        /* \"#utility.yul\":16102:16105   */\n      dup4\n        /* \"#utility.yul\":16094:16100   */\n      dup4\n        /* \"#utility.yul\":16060:16106   */\n      tag_327\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":16138:16142   */\n      0x20\n        /* \"#utility.yul\":16133:16136   */\n      dup4\n        /* \"#utility.yul\":16129:16143   */\n      add\n        /* \"#utility.yul\":16115:16143   */\n      swap1\n      pop\n        /* \"#utility.yul\":15970:16149   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16155:16268   */\n    tag_329:\n        /* \"#utility.yul\":16225:16229   */\n      0x00\n        /* \"#utility.yul\":16257:16261   */\n      0x20\n        /* \"#utility.yul\":16252:16255   */\n      dup3\n        /* \"#utility.yul\":16248:16262   */\n      add\n        /* \"#utility.yul\":16240:16262   */\n      swap1\n      pop\n        /* \"#utility.yul\":16155:16268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16304:17036   */\n    tag_330:\n        /* \"#utility.yul\":16423:16426   */\n      0x00\n        /* \"#utility.yul\":16452:16506   */\n      tag_538\n        /* \"#utility.yul\":16500:16505   */\n      dup3\n        /* \"#utility.yul\":16452:16506   */\n      tag_324\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":16522:16608   */\n      tag_539\n        /* \"#utility.yul\":16601:16607   */\n      dup2\n        /* \"#utility.yul\":16596:16599   */\n      dup6\n        /* \"#utility.yul\":16522:16608   */\n      tag_325\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":16515:16608   */\n      swap4\n      pop\n        /* \"#utility.yul\":16632:16688   */\n      tag_540\n        /* \"#utility.yul\":16682:16687   */\n      dup4\n        /* \"#utility.yul\":16632:16688   */\n      tag_326\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":16711:16718   */\n      dup1\n        /* \"#utility.yul\":16742:16743   */\n      0x00\n        /* \"#utility.yul\":16727:17011   */\n    tag_541:\n        /* \"#utility.yul\":16752:16758   */\n      dup4\n        /* \"#utility.yul\":16749:16750   */\n      dup2\n        /* \"#utility.yul\":16746:16759   */\n      lt\n        /* \"#utility.yul\":16727:17011   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":16828:16834   */\n      dup2\n        /* \"#utility.yul\":16822:16835   */\n      mload\n        /* \"#utility.yul\":16855:16918   */\n      tag_544\n        /* \"#utility.yul\":16914:16917   */\n      dup9\n        /* \"#utility.yul\":16899:16912   */\n      dup3\n        /* \"#utility.yul\":16855:16918   */\n      tag_328\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":16848:16918   */\n      swap8\n      pop\n        /* \"#utility.yul\":16941:17001   */\n      tag_545\n        /* \"#utility.yul\":16994:17000   */\n      dup4\n        /* \"#utility.yul\":16941:17001   */\n      tag_329\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":16931:17001   */\n      swap3\n      pop\n        /* \"#utility.yul\":16787:17011   */\n      pop\n        /* \"#utility.yul\":16774:16775   */\n      0x01\n        /* \"#utility.yul\":16771:16772   */\n      dup2\n        /* \"#utility.yul\":16767:16776   */\n      add\n        /* \"#utility.yul\":16762:16776   */\n      swap1\n      pop\n        /* \"#utility.yul\":16727:17011   */\n      jump(tag_541)\n    tag_543:\n        /* \"#utility.yul\":16731:16745   */\n      pop\n        /* \"#utility.yul\":17027:17030   */\n      dup6\n        /* \"#utility.yul\":17020:17030   */\n      swap4\n      pop\n        /* \"#utility.yul\":16428:17036   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16304:17036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17042:17415   */\n    tag_55:\n        /* \"#utility.yul\":17185:17189   */\n      0x00\n        /* \"#utility.yul\":17223:17225   */\n      0x20\n        /* \"#utility.yul\":17212:17221   */\n      dup3\n        /* \"#utility.yul\":17208:17226   */\n      add\n        /* \"#utility.yul\":17200:17226   */\n      swap1\n      pop\n        /* \"#utility.yul\":17272:17281   */\n      dup2\n        /* \"#utility.yul\":17266:17270   */\n      dup2\n        /* \"#utility.yul\":17262:17282   */\n      sub\n        /* \"#utility.yul\":17258:17259   */\n      0x00\n        /* \"#utility.yul\":17247:17256   */\n      dup4\n        /* \"#utility.yul\":17243:17260   */\n      add\n        /* \"#utility.yul\":17236:17283   */\n      mstore\n        /* \"#utility.yul\":17300:17408   */\n      tag_547\n        /* \"#utility.yul\":17403:17407   */\n      dup2\n        /* \"#utility.yul\":17394:17400   */\n      dup5\n        /* \"#utility.yul\":17300:17408   */\n      tag_330\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":17292:17408   */\n      swap1\n      pop\n        /* \"#utility.yul\":17042:17415   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17421:18364   */\n    tag_60:\n        /* \"#utility.yul\":17516:17522   */\n      0x00\n        /* \"#utility.yul\":17524:17530   */\n      dup1\n        /* \"#utility.yul\":17532:17538   */\n      0x00\n        /* \"#utility.yul\":17540:17546   */\n      dup1\n        /* \"#utility.yul\":17589:17592   */\n      0x80\n        /* \"#utility.yul\":17577:17586   */\n      dup6\n        /* \"#utility.yul\":17568:17575   */\n      dup8\n        /* \"#utility.yul\":17564:17587   */\n      sub\n        /* \"#utility.yul\":17560:17593   */\n      slt\n        /* \"#utility.yul\":17557:17677   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":17596:17675   */\n      tag_550\n      tag_286\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":17557:17677   */\n    tag_549:\n        /* \"#utility.yul\":17716:17717   */\n      0x00\n        /* \"#utility.yul\":17741:17794   */\n      tag_551\n        /* \"#utility.yul\":17786:17793   */\n      dup8\n        /* \"#utility.yul\":17777:17783   */\n      dup3\n        /* \"#utility.yul\":17766:17775   */\n      dup9\n        /* \"#utility.yul\":17762:17784   */\n      add\n        /* \"#utility.yul\":17741:17794   */\n      tag_291\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":17731:17794   */\n      swap5\n      pop\n        /* \"#utility.yul\":17687:17804   */\n      pop\n        /* \"#utility.yul\":17843:17845   */\n      0x20\n        /* \"#utility.yul\":17869:17922   */\n      tag_552\n        /* \"#utility.yul\":17914:17921   */\n      dup8\n        /* \"#utility.yul\":17905:17911   */\n      dup3\n        /* \"#utility.yul\":17894:17903   */\n      dup9\n        /* \"#utility.yul\":17890:17912   */\n      add\n        /* \"#utility.yul\":17869:17922   */\n      tag_294\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":17859:17922   */\n      swap4\n      pop\n        /* \"#utility.yul\":17814:17932   */\n      pop\n        /* \"#utility.yul\":17971:17973   */\n      0x40\n        /* \"#utility.yul\":17997:18050   */\n      tag_553\n        /* \"#utility.yul\":18042:18049   */\n      dup8\n        /* \"#utility.yul\":18033:18039   */\n      dup3\n        /* \"#utility.yul\":18022:18031   */\n      dup9\n        /* \"#utility.yul\":18018:18040   */\n      add\n        /* \"#utility.yul\":17997:18050   */\n      tag_294\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":17987:18050   */\n      swap3\n      pop\n        /* \"#utility.yul\":17942:18060   */\n      pop\n        /* \"#utility.yul\":18127:18129   */\n      0x60\n        /* \"#utility.yul\":18116:18125   */\n      dup6\n        /* \"#utility.yul\":18112:18130   */\n      add\n        /* \"#utility.yul\":18099:18131   */\n      calldataload\n        /* \"#utility.yul\":18158:18176   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18150:18156   */\n      dup2\n        /* \"#utility.yul\":18147:18177   */\n      gt\n        /* \"#utility.yul\":18144:18261   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":18180:18259   */\n      tag_555\n      tag_287\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":18144:18261   */\n    tag_554:\n        /* \"#utility.yul\":18285:18347   */\n      tag_556\n        /* \"#utility.yul\":18339:18346   */\n      dup8\n        /* \"#utility.yul\":18330:18336   */\n      dup3\n        /* \"#utility.yul\":18319:18328   */\n      dup9\n        /* \"#utility.yul\":18315:18337   */\n      add\n        /* \"#utility.yul\":18285:18347   */\n      tag_320\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":18275:18347   */\n      swap2\n      pop\n        /* \"#utility.yul\":18070:18357   */\n      pop\n        /* \"#utility.yul\":17421:18364   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18370:18488   */\n    tag_331:\n        /* \"#utility.yul\":18457:18481   */\n      tag_558\n        /* \"#utility.yul\":18475:18480   */\n      dup2\n        /* \"#utility.yul\":18457:18481   */\n      tag_289\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":18452:18455   */\n      dup3\n        /* \"#utility.yul\":18445:18482   */\n      mstore\n        /* \"#utility.yul\":18370:18488   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18494:18716   */\n    tag_65:\n        /* \"#utility.yul\":18587:18591   */\n      0x00\n        /* \"#utility.yul\":18625:18627   */\n      0x20\n        /* \"#utility.yul\":18614:18623   */\n      dup3\n        /* \"#utility.yul\":18610:18628   */\n      add\n        /* \"#utility.yul\":18602:18628   */\n      swap1\n      pop\n        /* \"#utility.yul\":18638:18709   */\n      tag_560\n        /* \"#utility.yul\":18706:18707   */\n      0x00\n        /* \"#utility.yul\":18695:18704   */\n      dup4\n        /* \"#utility.yul\":18691:18708   */\n      add\n        /* \"#utility.yul\":18682:18688   */\n      dup5\n        /* \"#utility.yul\":18638:18709   */\n      tag_331\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":18494:18716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18722:18838   */\n    tag_332:\n        /* \"#utility.yul\":18792:18813   */\n      tag_562\n        /* \"#utility.yul\":18807:18812   */\n      dup2\n        /* \"#utility.yul\":18792:18813   */\n      tag_299\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":18785:18790   */\n      dup2\n        /* \"#utility.yul\":18782:18814   */\n      eq\n        /* \"#utility.yul\":18772:18832   */\n      tag_563\n      jumpi\n        /* \"#utility.yul\":18828:18829   */\n      0x00\n        /* \"#utility.yul\":18825:18826   */\n      dup1\n        /* \"#utility.yul\":18818:18830   */\n      revert\n        /* \"#utility.yul\":18772:18832   */\n    tag_563:\n        /* \"#utility.yul\":18722:18838   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18844:18977   */\n    tag_333:\n        /* \"#utility.yul\":18887:18892   */\n      0x00\n        /* \"#utility.yul\":18925:18931   */\n      dup2\n        /* \"#utility.yul\":18912:18932   */\n      calldataload\n        /* \"#utility.yul\":18903:18932   */\n      swap1\n      pop\n        /* \"#utility.yul\":18941:18971   */\n      tag_565\n        /* \"#utility.yul\":18965:18970   */\n      dup2\n        /* \"#utility.yul\":18941:18971   */\n      tag_332\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":18844:18977   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18983:19451   */\n    tag_68:\n        /* \"#utility.yul\":19048:19054   */\n      0x00\n        /* \"#utility.yul\":19056:19062   */\n      dup1\n        /* \"#utility.yul\":19105:19107   */\n      0x40\n        /* \"#utility.yul\":19093:19102   */\n      dup4\n        /* \"#utility.yul\":19084:19091   */\n      dup6\n        /* \"#utility.yul\":19080:19103   */\n      sub\n        /* \"#utility.yul\":19076:19108   */\n      slt\n        /* \"#utility.yul\":19073:19192   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":19111:19190   */\n      tag_568\n      tag_286\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":19073:19192   */\n    tag_567:\n        /* \"#utility.yul\":19231:19232   */\n      0x00\n        /* \"#utility.yul\":19256:19309   */\n      tag_569\n        /* \"#utility.yul\":19301:19308   */\n      dup6\n        /* \"#utility.yul\":19292:19298   */\n      dup3\n        /* \"#utility.yul\":19281:19290   */\n      dup7\n        /* \"#utility.yul\":19277:19299   */\n      add\n        /* \"#utility.yul\":19256:19309   */\n      tag_291\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":19246:19309   */\n      swap3\n      pop\n        /* \"#utility.yul\":19202:19319   */\n      pop\n        /* \"#utility.yul\":19358:19360   */\n      0x20\n        /* \"#utility.yul\":19384:19434   */\n      tag_570\n        /* \"#utility.yul\":19426:19433   */\n      dup6\n        /* \"#utility.yul\":19417:19423   */\n      dup3\n        /* \"#utility.yul\":19406:19415   */\n      dup7\n        /* \"#utility.yul\":19402:19424   */\n      add\n        /* \"#utility.yul\":19384:19434   */\n      tag_333\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":19374:19434   */\n      swap2\n      pop\n        /* \"#utility.yul\":19329:19444   */\n      pop\n        /* \"#utility.yul\":18983:19451   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19457:19931   */\n    tag_72:\n        /* \"#utility.yul\":19525:19531   */\n      0x00\n        /* \"#utility.yul\":19533:19539   */\n      dup1\n        /* \"#utility.yul\":19582:19584   */\n      0x40\n        /* \"#utility.yul\":19570:19579   */\n      dup4\n        /* \"#utility.yul\":19561:19568   */\n      dup6\n        /* \"#utility.yul\":19557:19580   */\n      sub\n        /* \"#utility.yul\":19553:19585   */\n      slt\n        /* \"#utility.yul\":19550:19669   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":19588:19667   */\n      tag_573\n      tag_286\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":19550:19669   */\n    tag_572:\n        /* \"#utility.yul\":19708:19709   */\n      0x00\n        /* \"#utility.yul\":19733:19786   */\n      tag_574\n        /* \"#utility.yul\":19778:19785   */\n      dup6\n        /* \"#utility.yul\":19769:19775   */\n      dup3\n        /* \"#utility.yul\":19758:19767   */\n      dup7\n        /* \"#utility.yul\":19754:19776   */\n      add\n        /* \"#utility.yul\":19733:19786   */\n      tag_291\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":19723:19786   */\n      swap3\n      pop\n        /* \"#utility.yul\":19679:19796   */\n      pop\n        /* \"#utility.yul\":19835:19837   */\n      0x20\n        /* \"#utility.yul\":19861:19914   */\n      tag_575\n        /* \"#utility.yul\":19906:19913   */\n      dup6\n        /* \"#utility.yul\":19897:19903   */\n      dup3\n        /* \"#utility.yul\":19886:19895   */\n      dup7\n        /* \"#utility.yul\":19882:19904   */\n      add\n        /* \"#utility.yul\":19861:19914   */\n      tag_291\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":19851:19914   */\n      swap2\n      pop\n        /* \"#utility.yul\":19806:19924   */\n      pop\n        /* \"#utility.yul\":19457:19931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19937:21026   */\n    tag_77:\n        /* \"#utility.yul\":20041:20047   */\n      0x00\n        /* \"#utility.yul\":20049:20055   */\n      dup1\n        /* \"#utility.yul\":20057:20063   */\n      0x00\n        /* \"#utility.yul\":20065:20071   */\n      dup1\n        /* \"#utility.yul\":20073:20079   */\n      0x00\n        /* \"#utility.yul\":20122:20125   */\n      0xa0\n        /* \"#utility.yul\":20110:20119   */\n      dup7\n        /* \"#utility.yul\":20101:20108   */\n      dup9\n        /* \"#utility.yul\":20097:20120   */\n      sub\n        /* \"#utility.yul\":20093:20126   */\n      slt\n        /* \"#utility.yul\":20090:20210   */\n      iszero\n      tag_577\n      jumpi\n        /* \"#utility.yul\":20129:20208   */\n      tag_578\n      tag_286\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":20090:20210   */\n    tag_577:\n        /* \"#utility.yul\":20249:20250   */\n      0x00\n        /* \"#utility.yul\":20274:20327   */\n      tag_579\n        /* \"#utility.yul\":20319:20326   */\n      dup9\n        /* \"#utility.yul\":20310:20316   */\n      dup3\n        /* \"#utility.yul\":20299:20308   */\n      dup10\n        /* \"#utility.yul\":20295:20317   */\n      add\n        /* \"#utility.yul\":20274:20327   */\n      tag_291\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":20264:20327   */\n      swap6\n      pop\n        /* \"#utility.yul\":20220:20337   */\n      pop\n        /* \"#utility.yul\":20376:20378   */\n      0x20\n        /* \"#utility.yul\":20402:20455   */\n      tag_580\n        /* \"#utility.yul\":20447:20454   */\n      dup9\n        /* \"#utility.yul\":20438:20444   */\n      dup3\n        /* \"#utility.yul\":20427:20436   */\n      dup10\n        /* \"#utility.yul\":20423:20445   */\n      add\n        /* \"#utility.yul\":20402:20455   */\n      tag_291\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":20392:20455   */\n      swap5\n      pop\n        /* \"#utility.yul\":20347:20465   */\n      pop\n        /* \"#utility.yul\":20504:20506   */\n      0x40\n        /* \"#utility.yul\":20530:20583   */\n      tag_581\n        /* \"#utility.yul\":20575:20582   */\n      dup9\n        /* \"#utility.yul\":20566:20572   */\n      dup3\n        /* \"#utility.yul\":20555:20564   */\n      dup10\n        /* \"#utility.yul\":20551:20573   */\n      add\n        /* \"#utility.yul\":20530:20583   */\n      tag_294\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":20520:20583   */\n      swap4\n      pop\n        /* \"#utility.yul\":20475:20593   */\n      pop\n        /* \"#utility.yul\":20632:20634   */\n      0x60\n        /* \"#utility.yul\":20658:20711   */\n      tag_582\n        /* \"#utility.yul\":20703:20710   */\n      dup9\n        /* \"#utility.yul\":20694:20700   */\n      dup3\n        /* \"#utility.yul\":20683:20692   */\n      dup10\n        /* \"#utility.yul\":20679:20701   */\n      add\n        /* \"#utility.yul\":20658:20711   */\n      tag_294\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":20648:20711   */\n      swap3\n      pop\n        /* \"#utility.yul\":20603:20721   */\n      pop\n        /* \"#utility.yul\":20788:20791   */\n      0x80\n        /* \"#utility.yul\":20777:20786   */\n      dup7\n        /* \"#utility.yul\":20773:20792   */\n      add\n        /* \"#utility.yul\":20760:20793   */\n      calldataload\n        /* \"#utility.yul\":20820:20838   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":20812:20818   */\n      dup2\n        /* \"#utility.yul\":20809:20839   */\n      gt\n        /* \"#utility.yul\":20806:20923   */\n      iszero\n      tag_583\n      jumpi\n        /* \"#utility.yul\":20842:20921   */\n      tag_584\n      tag_287\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":20806:20923   */\n    tag_583:\n        /* \"#utility.yul\":20947:21009   */\n      tag_585\n        /* \"#utility.yul\":21001:21008   */\n      dup9\n        /* \"#utility.yul\":20992:20998   */\n      dup3\n        /* \"#utility.yul\":20981:20990   */\n      dup10\n        /* \"#utility.yul\":20977:20999   */\n      add\n        /* \"#utility.yul\":20947:21009   */\n      tag_320\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":20937:21009   */\n      swap2\n      pop\n        /* \"#utility.yul\":20731:21019   */\n      pop\n        /* \"#utility.yul\":19937:21026   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21032:21361   */\n    tag_81:\n        /* \"#utility.yul\":21091:21097   */\n      0x00\n        /* \"#utility.yul\":21140:21142   */\n      0x20\n        /* \"#utility.yul\":21128:21137   */\n      dup3\n        /* \"#utility.yul\":21119:21126   */\n      dup5\n        /* \"#utility.yul\":21115:21138   */\n      sub\n        /* \"#utility.yul\":21111:21143   */\n      slt\n        /* \"#utility.yul\":21108:21227   */\n      iszero\n      tag_587\n      jumpi\n        /* \"#utility.yul\":21146:21225   */\n      tag_588\n      tag_286\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":21108:21227   */\n    tag_587:\n        /* \"#utility.yul\":21266:21267   */\n      0x00\n        /* \"#utility.yul\":21291:21344   */\n      tag_589\n        /* \"#utility.yul\":21336:21343   */\n      dup5\n        /* \"#utility.yul\":21327:21333   */\n      dup3\n        /* \"#utility.yul\":21316:21325   */\n      dup6\n        /* \"#utility.yul\":21312:21334   */\n      add\n        /* \"#utility.yul\":21291:21344   */\n      tag_291\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":21281:21344   */\n      swap2\n      pop\n        /* \"#utility.yul\":21237:21354   */\n      pop\n        /* \"#utility.yul\":21032:21361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21367:21547   */\n    tag_334:\n        /* \"#utility.yul\":21415:21492   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21412:21413   */\n      0x00\n        /* \"#utility.yul\":21405:21493   */\n      mstore\n        /* \"#utility.yul\":21512:21516   */\n      0x22\n        /* \"#utility.yul\":21509:21510   */\n      0x04\n        /* \"#utility.yul\":21502:21517   */\n      mstore\n        /* \"#utility.yul\":21536:21540   */\n      0x24\n        /* \"#utility.yul\":21533:21534   */\n      0x00\n        /* \"#utility.yul\":21526:21541   */\n      revert\n        /* \"#utility.yul\":21553:21873   */\n    tag_97:\n        /* \"#utility.yul\":21597:21603   */\n      0x00\n        /* \"#utility.yul\":21634:21635   */\n      0x02\n        /* \"#utility.yul\":21628:21632   */\n      dup3\n        /* \"#utility.yul\":21624:21636   */\n      div\n        /* \"#utility.yul\":21614:21636   */\n      swap1\n      pop\n        /* \"#utility.yul\":21681:21682   */\n      0x01\n        /* \"#utility.yul\":21675:21679   */\n      dup3\n        /* \"#utility.yul\":21671:21683   */\n      and\n        /* \"#utility.yul\":21702:21720   */\n      dup1\n        /* \"#utility.yul\":21692:21773   */\n      tag_592\n      jumpi\n        /* \"#utility.yul\":21758:21762   */\n      0x7f\n        /* \"#utility.yul\":21750:21756   */\n      dup3\n        /* \"#utility.yul\":21746:21763   */\n      and\n        /* \"#utility.yul\":21736:21763   */\n      swap2\n      pop\n        /* \"#utility.yul\":21692:21773   */\n    tag_592:\n        /* \"#utility.yul\":21820:21822   */\n      0x20\n        /* \"#utility.yul\":21812:21818   */\n      dup3\n        /* \"#utility.yul\":21809:21823   */\n      lt\n        /* \"#utility.yul\":21789:21807   */\n      dup2\n        /* \"#utility.yul\":21786:21824   */\n      sub\n        /* \"#utility.yul\":21783:21867   */\n      tag_593\n      jumpi\n        /* \"#utility.yul\":21839:21857   */\n      tag_594\n      tag_334\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":21783:21867   */\n    tag_593:\n        /* \"#utility.yul\":21604:21873   */\n      pop\n        /* \"#utility.yul\":21553:21873   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21879:22211   */\n    tag_114:\n        /* \"#utility.yul\":22000:22004   */\n      0x00\n        /* \"#utility.yul\":22038:22040   */\n      0x40\n        /* \"#utility.yul\":22027:22036   */\n      dup3\n        /* \"#utility.yul\":22023:22041   */\n      add\n        /* \"#utility.yul\":22015:22041   */\n      swap1\n      pop\n        /* \"#utility.yul\":22051:22122   */\n      tag_596\n        /* \"#utility.yul\":22119:22120   */\n      0x00\n        /* \"#utility.yul\":22108:22117   */\n      dup4\n        /* \"#utility.yul\":22104:22121   */\n      add\n        /* \"#utility.yul\":22095:22101   */\n      dup6\n        /* \"#utility.yul\":22051:22122   */\n      tag_331\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":22132:22204   */\n      tag_597\n        /* \"#utility.yul\":22200:22202   */\n      0x20\n        /* \"#utility.yul\":22189:22198   */\n      dup4\n        /* \"#utility.yul\":22185:22203   */\n      add\n        /* \"#utility.yul\":22176:22182   */\n      dup5\n        /* \"#utility.yul\":22132:22204   */\n      tag_331\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":21879:22211   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22217:22549   */\n    tag_120:\n        /* \"#utility.yul\":22338:22342   */\n      0x00\n        /* \"#utility.yul\":22376:22378   */\n      0x40\n        /* \"#utility.yul\":22365:22374   */\n      dup3\n        /* \"#utility.yul\":22361:22379   */\n      add\n        /* \"#utility.yul\":22353:22379   */\n      swap1\n      pop\n        /* \"#utility.yul\":22389:22460   */\n      tag_599\n        /* \"#utility.yul\":22457:22458   */\n      0x00\n        /* \"#utility.yul\":22446:22455   */\n      dup4\n        /* \"#utility.yul\":22442:22459   */\n      add\n        /* \"#utility.yul\":22433:22439   */\n      dup6\n        /* \"#utility.yul\":22389:22460   */\n      tag_295\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":22470:22542   */\n      tag_600\n        /* \"#utility.yul\":22538:22540   */\n      0x20\n        /* \"#utility.yul\":22527:22536   */\n      dup4\n        /* \"#utility.yul\":22523:22541   */\n      add\n        /* \"#utility.yul\":22514:22520   */\n      dup5\n        /* \"#utility.yul\":22470:22542   */\n      tag_295\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":22217:22549   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22555:22735   */\n    tag_135:\n        /* \"#utility.yul\":22603:22680   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22600:22601   */\n      0x00\n        /* \"#utility.yul\":22593:22681   */\n      mstore\n        /* \"#utility.yul\":22700:22704   */\n      0x32\n        /* \"#utility.yul\":22697:22698   */\n      0x04\n        /* \"#utility.yul\":22690:22705   */\n      mstore\n        /* \"#utility.yul\":22724:22728   */\n      0x24\n        /* \"#utility.yul\":22721:22722   */\n      0x00\n        /* \"#utility.yul\":22714:22729   */\n      revert\n        /* \"#utility.yul\":22741:22921   */\n    tag_335:\n        /* \"#utility.yul\":22789:22866   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22786:22787   */\n      0x00\n        /* \"#utility.yul\":22779:22867   */\n      mstore\n        /* \"#utility.yul\":22886:22890   */\n      0x11\n        /* \"#utility.yul\":22883:22884   */\n      0x04\n        /* \"#utility.yul\":22876:22891   */\n      mstore\n        /* \"#utility.yul\":22910:22914   */\n      0x24\n        /* \"#utility.yul\":22907:22908   */\n      0x00\n        /* \"#utility.yul\":22900:22915   */\n      revert\n        /* \"#utility.yul\":22927:23160   */\n    tag_137:\n        /* \"#utility.yul\":22966:22969   */\n      0x00\n        /* \"#utility.yul\":22989:23013   */\n      tag_604\n        /* \"#utility.yul\":23007:23012   */\n      dup3\n        /* \"#utility.yul\":22989:23013   */\n      tag_292\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":22980:23013   */\n      swap2\n      pop\n        /* \"#utility.yul\":23035:23101   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23028:23033   */\n      dup3\n        /* \"#utility.yul\":23025:23102   */\n      sub\n        /* \"#utility.yul\":23022:23125   */\n      tag_605\n      jumpi\n        /* \"#utility.yul\":23105:23123   */\n      tag_606\n      tag_335\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":23022:23125   */\n    tag_605:\n        /* \"#utility.yul\":23152:23153   */\n      0x01\n        /* \"#utility.yul\":23145:23150   */\n      dup3\n        /* \"#utility.yul\":23141:23154   */\n      add\n        /* \"#utility.yul\":23134:23154   */\n      swap1\n      pop\n        /* \"#utility.yul\":22927:23160   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23166:23307   */\n    tag_336:\n        /* \"#utility.yul\":23215:23219   */\n      0x00\n        /* \"#utility.yul\":23238:23241   */\n      dup2\n        /* \"#utility.yul\":23230:23241   */\n      swap1\n      pop\n        /* \"#utility.yul\":23261:23264   */\n      dup2\n        /* \"#utility.yul\":23258:23259   */\n      0x00\n        /* \"#utility.yul\":23251:23265   */\n      mstore\n        /* \"#utility.yul\":23295:23299   */\n      0x20\n        /* \"#utility.yul\":23292:23293   */\n      0x00\n        /* \"#utility.yul\":23282:23300   */\n      keccak256\n        /* \"#utility.yul\":23274:23300   */\n      swap1\n      pop\n        /* \"#utility.yul\":23166:23307   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23313:23406   */\n    tag_337:\n        /* \"#utility.yul\":23350:23356   */\n      0x00\n        /* \"#utility.yul\":23397:23399   */\n      0x20\n        /* \"#utility.yul\":23392:23394   */\n      0x1f\n        /* \"#utility.yul\":23385:23390   */\n      dup4\n        /* \"#utility.yul\":23381:23395   */\n      add\n        /* \"#utility.yul\":23377:23400   */\n      div\n        /* \"#utility.yul\":23367:23400   */\n      swap1\n      pop\n        /* \"#utility.yul\":23313:23406   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23412:23519   */\n    tag_338:\n        /* \"#utility.yul\":23456:23464   */\n      0x00\n        /* \"#utility.yul\":23506:23511   */\n      dup3\n        /* \"#utility.yul\":23500:23504   */\n      dup3\n        /* \"#utility.yul\":23496:23512   */\n      shl\n        /* \"#utility.yul\":23475:23512   */\n      swap1\n      pop\n        /* \"#utility.yul\":23412:23519   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23525:23918   */\n    tag_339:\n        /* \"#utility.yul\":23594:23600   */\n      0x00\n        /* \"#utility.yul\":23644:23645   */\n      0x08\n        /* \"#utility.yul\":23632:23642   */\n      dup4\n        /* \"#utility.yul\":23628:23646   */\n      mul\n        /* \"#utility.yul\":23667:23764   */\n      tag_611\n        /* \"#utility.yul\":23697:23763   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23686:23695   */\n      dup3\n        /* \"#utility.yul\":23667:23764   */\n      tag_338\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":23785:23824   */\n      tag_612\n        /* \"#utility.yul\":23815:23823   */\n      dup7\n        /* \"#utility.yul\":23804:23813   */\n      dup4\n        /* \"#utility.yul\":23785:23824   */\n      tag_338\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":23773:23824   */\n      swap6\n      pop\n        /* \"#utility.yul\":23857:23861   */\n      dup1\n        /* \"#utility.yul\":23853:23862   */\n      not\n        /* \"#utility.yul\":23846:23851   */\n      dup5\n        /* \"#utility.yul\":23842:23863   */\n      and\n        /* \"#utility.yul\":23833:23863   */\n      swap4\n      pop\n        /* \"#utility.yul\":23906:23910   */\n      dup1\n        /* \"#utility.yul\":23896:23904   */\n      dup7\n        /* \"#utility.yul\":23892:23911   */\n      and\n        /* \"#utility.yul\":23885:23890   */\n      dup5\n        /* \"#utility.yul\":23882:23912   */\n      or\n        /* \"#utility.yul\":23872:23912   */\n      swap3\n      pop\n        /* \"#utility.yul\":23601:23918   */\n      pop\n      pop\n        /* \"#utility.yul\":23525:23918   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23924:23984   */\n    tag_340:\n        /* \"#utility.yul\":23952:23955   */\n      0x00\n        /* \"#utility.yul\":23973:23978   */\n      dup2\n        /* \"#utility.yul\":23966:23978   */\n      swap1\n      pop\n        /* \"#utility.yul\":23924:23984   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23990:24132   */\n    tag_341:\n        /* \"#utility.yul\":24040:24049   */\n      0x00\n        /* \"#utility.yul\":24073:24126   */\n      tag_615\n        /* \"#utility.yul\":24091:24125   */\n      tag_616\n        /* \"#utility.yul\":24100:24124   */\n      tag_617\n        /* \"#utility.yul\":24118:24123   */\n      dup5\n        /* \"#utility.yul\":24100:24124   */\n      tag_292\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":24091:24125   */\n      tag_340\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":24073:24126   */\n      tag_292\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":24060:24126   */\n      swap1\n      pop\n        /* \"#utility.yul\":23990:24132   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24138:24213   */\n    tag_342:\n        /* \"#utility.yul\":24181:24184   */\n      0x00\n        /* \"#utility.yul\":24202:24207   */\n      dup2\n        /* \"#utility.yul\":24195:24207   */\n      swap1\n      pop\n        /* \"#utility.yul\":24138:24213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24219:24488   */\n    tag_343:\n        /* \"#utility.yul\":24329:24368   */\n      tag_620\n        /* \"#utility.yul\":24360:24367   */\n      dup4\n        /* \"#utility.yul\":24329:24368   */\n      tag_341\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":24390:24481   */\n      tag_621\n        /* \"#utility.yul\":24439:24480   */\n      tag_622\n        /* \"#utility.yul\":24463:24479   */\n      dup3\n        /* \"#utility.yul\":24439:24480   */\n      tag_342\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":24431:24437   */\n      dup5\n        /* \"#utility.yul\":24424:24428   */\n      dup5\n        /* \"#utility.yul\":24418:24429   */\n      sload\n        /* \"#utility.yul\":24390:24481   */\n      tag_339\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":24384:24388   */\n      dup3\n        /* \"#utility.yul\":24377:24482   */\n      sstore\n        /* \"#utility.yul\":24295:24488   */\n      pop\n        /* \"#utility.yul\":24219:24488   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24494:24567   */\n    tag_344:\n        /* \"#utility.yul\":24539:24542   */\n      0x00\n        /* \"#utility.yul\":24494:24567   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":24573:24762   */\n    tag_345:\n        /* \"#utility.yul\":24650:24682   */\n      tag_625\n      tag_344\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":24691:24756   */\n      tag_626\n        /* \"#utility.yul\":24749:24755   */\n      dup2\n        /* \"#utility.yul\":24741:24747   */\n      dup5\n        /* \"#utility.yul\":24735:24739   */\n      dup5\n        /* \"#utility.yul\":24691:24756   */\n      tag_343\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":24626:24762   */\n      pop\n        /* \"#utility.yul\":24573:24762   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24768:24954   */\n    tag_346:\n        /* \"#utility.yul\":24828:24948   */\n    tag_628:\n        /* \"#utility.yul\":24845:24848   */\n      dup2\n        /* \"#utility.yul\":24838:24843   */\n      dup2\n        /* \"#utility.yul\":24835:24849   */\n      lt\n        /* \"#utility.yul\":24828:24948   */\n      iszero\n      tag_630\n      jumpi\n        /* \"#utility.yul\":24899:24938   */\n      tag_631\n        /* \"#utility.yul\":24936:24937   */\n      0x00\n        /* \"#utility.yul\":24929:24934   */\n      dup3\n        /* \"#utility.yul\":24899:24938   */\n      tag_345\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":24872:24873   */\n      0x01\n        /* \"#utility.yul\":24865:24870   */\n      dup2\n        /* \"#utility.yul\":24861:24874   */\n      add\n        /* \"#utility.yul\":24852:24874   */\n      swap1\n      pop\n        /* \"#utility.yul\":24828:24948   */\n      jump(tag_628)\n    tag_630:\n        /* \"#utility.yul\":24768:24954   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24960:25503   */\n    tag_347:\n        /* \"#utility.yul\":25061:25063   */\n      0x1f\n        /* \"#utility.yul\":25056:25059   */\n      dup3\n        /* \"#utility.yul\":25053:25064   */\n      gt\n        /* \"#utility.yul\":25050:25496   */\n      iszero\n      tag_633\n      jumpi\n        /* \"#utility.yul\":25095:25133   */\n      tag_634\n        /* \"#utility.yul\":25127:25132   */\n      dup2\n        /* \"#utility.yul\":25095:25133   */\n      tag_336\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":25179:25208   */\n      tag_635\n        /* \"#utility.yul\":25197:25207   */\n      dup5\n        /* \"#utility.yul\":25179:25208   */\n      tag_337\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":25169:25177   */\n      dup2\n        /* \"#utility.yul\":25165:25209   */\n      add\n        /* \"#utility.yul\":25362:25364   */\n      0x20\n        /* \"#utility.yul\":25350:25360   */\n      dup6\n        /* \"#utility.yul\":25347:25365   */\n      lt\n        /* \"#utility.yul\":25344:25393   */\n      iszero\n      tag_636\n      jumpi\n        /* \"#utility.yul\":25383:25391   */\n      dup2\n        /* \"#utility.yul\":25368:25391   */\n      swap1\n      pop\n        /* \"#utility.yul\":25344:25393   */\n    tag_636:\n        /* \"#utility.yul\":25406:25486   */\n      tag_637\n        /* \"#utility.yul\":25462:25484   */\n      tag_638\n        /* \"#utility.yul\":25480:25483   */\n      dup6\n        /* \"#utility.yul\":25462:25484   */\n      tag_337\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":25452:25460   */\n      dup4\n        /* \"#utility.yul\":25448:25485   */\n      add\n        /* \"#utility.yul\":25435:25446   */\n      dup3\n        /* \"#utility.yul\":25406:25486   */\n      tag_346\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":25065:25496   */\n      pop\n      pop\n        /* \"#utility.yul\":25050:25496   */\n    tag_633:\n        /* \"#utility.yul\":24960:25503   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25509:25626   */\n    tag_348:\n        /* \"#utility.yul\":25563:25571   */\n      0x00\n        /* \"#utility.yul\":25613:25618   */\n      dup3\n        /* \"#utility.yul\":25607:25611   */\n      dup3\n        /* \"#utility.yul\":25603:25619   */\n      shr\n        /* \"#utility.yul\":25582:25619   */\n      swap1\n      pop\n        /* \"#utility.yul\":25509:25626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25632:25801   */\n    tag_349:\n        /* \"#utility.yul\":25676:25682   */\n      0x00\n        /* \"#utility.yul\":25709:25760   */\n      tag_641\n        /* \"#utility.yul\":25757:25758   */\n      0x00\n        /* \"#utility.yul\":25753:25759   */\n      not\n        /* \"#utility.yul\":25745:25750   */\n      dup5\n        /* \"#utility.yul\":25742:25743   */\n      0x08\n        /* \"#utility.yul\":25738:25751   */\n      mul\n        /* \"#utility.yul\":25709:25760   */\n      tag_348\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":25705:25761   */\n      not\n        /* \"#utility.yul\":25790:25794   */\n      dup1\n        /* \"#utility.yul\":25784:25788   */\n      dup4\n        /* \"#utility.yul\":25780:25795   */\n      and\n        /* \"#utility.yul\":25770:25795   */\n      swap2\n      pop\n        /* \"#utility.yul\":25683:25801   */\n      pop\n        /* \"#utility.yul\":25632:25801   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25806:26101   */\n    tag_350:\n        /* \"#utility.yul\":25882:25886   */\n      0x00\n        /* \"#utility.yul\":26028:26057   */\n      tag_643\n        /* \"#utility.yul\":26053:26056   */\n      dup4\n        /* \"#utility.yul\":26047:26051   */\n      dup4\n        /* \"#utility.yul\":26028:26057   */\n      tag_349\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":26020:26057   */\n      swap2\n      pop\n        /* \"#utility.yul\":26090:26093   */\n      dup3\n        /* \"#utility.yul\":26087:26088   */\n      0x02\n        /* \"#utility.yul\":26083:26094   */\n      mul\n        /* \"#utility.yul\":26077:26081   */\n      dup3\n        /* \"#utility.yul\":26074:26095   */\n      or\n        /* \"#utility.yul\":26066:26095   */\n      swap1\n      pop\n        /* \"#utility.yul\":25806:26101   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26106:27501   */\n    tag_177:\n        /* \"#utility.yul\":26223:26260   */\n      tag_645\n        /* \"#utility.yul\":26256:26259   */\n      dup3\n        /* \"#utility.yul\":26223:26260   */\n      tag_310\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":26325:26343   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":26317:26323   */\n      dup2\n        /* \"#utility.yul\":26314:26344   */\n      gt\n        /* \"#utility.yul\":26311:26367   */\n      iszero\n      tag_646\n      jumpi\n        /* \"#utility.yul\":26347:26365   */\n      tag_647\n      tag_123\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":26311:26367   */\n    tag_646:\n        /* \"#utility.yul\":26391:26429   */\n      tag_648\n        /* \"#utility.yul\":26423:26427   */\n      dup3\n        /* \"#utility.yul\":26417:26428   */\n      sload\n        /* \"#utility.yul\":26391:26429   */\n      tag_97\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":26476:26543   */\n      tag_649\n        /* \"#utility.yul\":26536:26542   */\n      dup3\n        /* \"#utility.yul\":26528:26534   */\n      dup3\n        /* \"#utility.yul\":26522:26526   */\n      dup6\n        /* \"#utility.yul\":26476:26543   */\n      tag_347\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":26570:26571   */\n      0x00\n        /* \"#utility.yul\":26594:26598   */\n      0x20\n        /* \"#utility.yul\":26581:26598   */\n      swap1\n      pop\n        /* \"#utility.yul\":26626:26628   */\n      0x1f\n        /* \"#utility.yul\":26618:26624   */\n      dup4\n        /* \"#utility.yul\":26615:26629   */\n      gt\n        /* \"#utility.yul\":26643:26644   */\n      0x01\n        /* \"#utility.yul\":26638:27256   */\n      dup2\n      eq\n      tag_651\n      jumpi\n        /* \"#utility.yul\":27300:27301   */\n      0x00\n        /* \"#utility.yul\":27317:27323   */\n      dup5\n        /* \"#utility.yul\":27314:27391   */\n      iszero\n      tag_652\n      jumpi\n        /* \"#utility.yul\":27366:27375   */\n      dup3\n        /* \"#utility.yul\":27361:27364   */\n      dup8\n        /* \"#utility.yul\":27357:27376   */\n      add\n        /* \"#utility.yul\":27351:27377   */\n      mload\n        /* \"#utility.yul\":27342:27377   */\n      swap1\n      pop\n        /* \"#utility.yul\":27314:27391   */\n    tag_652:\n        /* \"#utility.yul\":27417:27484   */\n      tag_653\n        /* \"#utility.yul\":27477:27483   */\n      dup6\n        /* \"#utility.yul\":27470:27475   */\n      dup3\n        /* \"#utility.yul\":27417:27484   */\n      tag_350\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":27411:27415   */\n      dup7\n        /* \"#utility.yul\":27404:27485   */\n      sstore\n        /* \"#utility.yul\":27273:27495   */\n      pop\n        /* \"#utility.yul\":26608:27495   */\n      jump(tag_650)\n        /* \"#utility.yul\":26638:27256   */\n    tag_651:\n        /* \"#utility.yul\":26690:26694   */\n      0x1f\n        /* \"#utility.yul\":26686:26695   */\n      not\n        /* \"#utility.yul\":26678:26684   */\n      dup5\n        /* \"#utility.yul\":26674:26696   */\n      and\n        /* \"#utility.yul\":26724:26761   */\n      tag_654\n        /* \"#utility.yul\":26756:26760   */\n      dup7\n        /* \"#utility.yul\":26724:26761   */\n      tag_336\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":26783:26784   */\n      0x00\n        /* \"#utility.yul\":26797:27005   */\n    tag_655:\n        /* \"#utility.yul\":26811:26818   */\n      dup3\n        /* \"#utility.yul\":26808:26809   */\n      dup2\n        /* \"#utility.yul\":26805:26819   */\n      lt\n        /* \"#utility.yul\":26797:27005   */\n      iszero\n      tag_657\n      jumpi\n        /* \"#utility.yul\":26890:26899   */\n      dup5\n        /* \"#utility.yul\":26885:26888   */\n      dup10\n        /* \"#utility.yul\":26881:26900   */\n      add\n        /* \"#utility.yul\":26875:26901   */\n      mload\n        /* \"#utility.yul\":26867:26873   */\n      dup3\n        /* \"#utility.yul\":26860:26902   */\n      sstore\n        /* \"#utility.yul\":26941:26942   */\n      0x01\n        /* \"#utility.yul\":26933:26939   */\n      dup3\n        /* \"#utility.yul\":26929:26943   */\n      add\n        /* \"#utility.yul\":26919:26943   */\n      swap2\n      pop\n        /* \"#utility.yul\":26988:26990   */\n      0x20\n        /* \"#utility.yul\":26977:26986   */\n      dup6\n        /* \"#utility.yul\":26973:26991   */\n      add\n        /* \"#utility.yul\":26960:26991   */\n      swap5\n      pop\n        /* \"#utility.yul\":26834:26838   */\n      0x20\n        /* \"#utility.yul\":26831:26832   */\n      dup2\n        /* \"#utility.yul\":26827:26839   */\n      add\n        /* \"#utility.yul\":26822:26839   */\n      swap1\n      pop\n        /* \"#utility.yul\":26797:27005   */\n      jump(tag_655)\n    tag_657:\n        /* \"#utility.yul\":27033:27039   */\n      dup7\n        /* \"#utility.yul\":27024:27031   */\n      dup4\n        /* \"#utility.yul\":27021:27040   */\n      lt\n        /* \"#utility.yul\":27018:27197   */\n      iszero\n      tag_658\n      jumpi\n        /* \"#utility.yul\":27091:27100   */\n      dup5\n        /* \"#utility.yul\":27086:27089   */\n      dup10\n        /* \"#utility.yul\":27082:27101   */\n      add\n        /* \"#utility.yul\":27076:27102   */\n      mload\n        /* \"#utility.yul\":27134:27182   */\n      tag_659\n        /* \"#utility.yul\":27176:27180   */\n      0x1f\n        /* \"#utility.yul\":27168:27174   */\n      dup10\n        /* \"#utility.yul\":27164:27181   */\n      and\n        /* \"#utility.yul\":27153:27162   */\n      dup3\n        /* \"#utility.yul\":27134:27182   */\n      tag_349\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":27126:27132   */\n      dup4\n        /* \"#utility.yul\":27119:27183   */\n      sstore\n        /* \"#utility.yul\":27041:27197   */\n      pop\n        /* \"#utility.yul\":27018:27197   */\n    tag_658:\n        /* \"#utility.yul\":27243:27244   */\n      0x01\n        /* \"#utility.yul\":27239:27240   */\n      0x02\n        /* \"#utility.yul\":27231:27237   */\n      dup9\n        /* \"#utility.yul\":27227:27241   */\n      mul\n        /* \"#utility.yul\":27223:27245   */\n      add\n        /* \"#utility.yul\":27217:27221   */\n      dup9\n        /* \"#utility.yul\":27210:27246   */\n      sstore\n        /* \"#utility.yul\":26645:27256   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":26608:27495   */\n    tag_650:\n      pop\n        /* \"#utility.yul\":26198:27501   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":26106:27501   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27507:28060   */\n    tag_236:\n        /* \"#utility.yul\":27684:27688   */\n      0x00\n        /* \"#utility.yul\":27722:27725   */\n      0x80\n        /* \"#utility.yul\":27711:27720   */\n      dup3\n        /* \"#utility.yul\":27707:27726   */\n      add\n        /* \"#utility.yul\":27699:27726   */\n      swap1\n      pop\n        /* \"#utility.yul\":27736:27807   */\n      tag_661\n        /* \"#utility.yul\":27804:27805   */\n      0x00\n        /* \"#utility.yul\":27793:27802   */\n      dup4\n        /* \"#utility.yul\":27789:27806   */\n      add\n        /* \"#utility.yul\":27780:27786   */\n      dup8\n        /* \"#utility.yul\":27736:27807   */\n      tag_331\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":27817:27889   */\n      tag_662\n        /* \"#utility.yul\":27885:27887   */\n      0x20\n        /* \"#utility.yul\":27874:27883   */\n      dup4\n        /* \"#utility.yul\":27870:27888   */\n      add\n        /* \"#utility.yul\":27861:27867   */\n      dup7\n        /* \"#utility.yul\":27817:27889   */\n      tag_295\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":27899:27971   */\n      tag_663\n        /* \"#utility.yul\":27967:27969   */\n      0x40\n        /* \"#utility.yul\":27956:27965   */\n      dup4\n        /* \"#utility.yul\":27952:27970   */\n      add\n        /* \"#utility.yul\":27943:27949   */\n      dup6\n        /* \"#utility.yul\":27899:27971   */\n      tag_295\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":27981:28053   */\n      tag_664\n        /* \"#utility.yul\":28049:28051   */\n      0x60\n        /* \"#utility.yul\":28038:28047   */\n      dup4\n        /* \"#utility.yul\":28034:28052   */\n      add\n        /* \"#utility.yul\":28025:28031   */\n      dup5\n        /* \"#utility.yul\":27981:28053   */\n      tag_295\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":27507:28060   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28066:28257   */\n    tag_239:\n        /* \"#utility.yul\":28106:28109   */\n      0x00\n        /* \"#utility.yul\":28125:28145   */\n      tag_666\n        /* \"#utility.yul\":28143:28144   */\n      dup3\n        /* \"#utility.yul\":28125:28145   */\n      tag_292\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":28120:28145   */\n      swap2\n      pop\n        /* \"#utility.yul\":28159:28179   */\n      tag_667\n        /* \"#utility.yul\":28177:28178   */\n      dup4\n        /* \"#utility.yul\":28159:28179   */\n      tag_292\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":28154:28179   */\n      swap3\n      pop\n        /* \"#utility.yul\":28202:28203   */\n      dup3\n        /* \"#utility.yul\":28199:28200   */\n      dup3\n        /* \"#utility.yul\":28195:28204   */\n      add\n        /* \"#utility.yul\":28188:28204   */\n      swap1\n      pop\n        /* \"#utility.yul\":28223:28226   */\n      dup1\n        /* \"#utility.yul\":28220:28221   */\n      dup3\n        /* \"#utility.yul\":28217:28227   */\n      gt\n        /* \"#utility.yul\":28214:28250   */\n      iszero\n      tag_668\n      jumpi\n        /* \"#utility.yul\":28230:28248   */\n      tag_669\n      tag_335\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":28214:28250   */\n    tag_668:\n        /* \"#utility.yul\":28066:28257   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28263:28897   */\n    tag_247:\n        /* \"#utility.yul\":28484:28488   */\n      0x00\n        /* \"#utility.yul\":28522:28524   */\n      0x40\n        /* \"#utility.yul\":28511:28520   */\n      dup3\n        /* \"#utility.yul\":28507:28525   */\n      add\n        /* \"#utility.yul\":28499:28525   */\n      swap1\n      pop\n        /* \"#utility.yul\":28571:28580   */\n      dup2\n        /* \"#utility.yul\":28565:28569   */\n      dup2\n        /* \"#utility.yul\":28561:28581   */\n      sub\n        /* \"#utility.yul\":28557:28558   */\n      0x00\n        /* \"#utility.yul\":28546:28555   */\n      dup4\n        /* \"#utility.yul\":28542:28559   */\n      add\n        /* \"#utility.yul\":28535:28582   */\n      mstore\n        /* \"#utility.yul\":28599:28707   */\n      tag_671\n        /* \"#utility.yul\":28702:28706   */\n      dup2\n        /* \"#utility.yul\":28693:28699   */\n      dup6\n        /* \"#utility.yul\":28599:28707   */\n      tag_330\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":28591:28707   */\n      swap1\n      pop\n        /* \"#utility.yul\":28754:28763   */\n      dup2\n        /* \"#utility.yul\":28748:28752   */\n      dup2\n        /* \"#utility.yul\":28744:28764   */\n      sub\n        /* \"#utility.yul\":28739:28741   */\n      0x20\n        /* \"#utility.yul\":28728:28737   */\n      dup4\n        /* \"#utility.yul\":28724:28742   */\n      add\n        /* \"#utility.yul\":28717:28765   */\n      mstore\n        /* \"#utility.yul\":28782:28890   */\n      tag_672\n        /* \"#utility.yul\":28885:28889   */\n      dup2\n        /* \"#utility.yul\":28876:28882   */\n      dup5\n        /* \"#utility.yul\":28782:28890   */\n      tag_330\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":28774:28890   */\n      swap1\n      pop\n        /* \"#utility.yul\":28263:28897   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28903:29001   */\n    tag_351:\n        /* \"#utility.yul\":28954:28960   */\n      0x00\n        /* \"#utility.yul\":28988:28993   */\n      dup2\n        /* \"#utility.yul\":28982:28994   */\n      mload\n        /* \"#utility.yul\":28972:28994   */\n      swap1\n      pop\n        /* \"#utility.yul\":28903:29001   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29007:29175   */\n    tag_352:\n        /* \"#utility.yul\":29090:29101   */\n      0x00\n        /* \"#utility.yul\":29124:29130   */\n      dup3\n        /* \"#utility.yul\":29119:29122   */\n      dup3\n        /* \"#utility.yul\":29112:29131   */\n      mstore\n        /* \"#utility.yul\":29164:29168   */\n      0x20\n        /* \"#utility.yul\":29159:29162   */\n      dup3\n        /* \"#utility.yul\":29155:29169   */\n      add\n        /* \"#utility.yul\":29140:29169   */\n      swap1\n      pop\n        /* \"#utility.yul\":29007:29175   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29181:29554   */\n    tag_353:\n        /* \"#utility.yul\":29267:29270   */\n      0x00\n        /* \"#utility.yul\":29295:29333   */\n      tag_676\n        /* \"#utility.yul\":29327:29332   */\n      dup3\n        /* \"#utility.yul\":29295:29333   */\n      tag_351\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":29349:29419   */\n      tag_677\n        /* \"#utility.yul\":29412:29418   */\n      dup2\n        /* \"#utility.yul\":29407:29410   */\n      dup6\n        /* \"#utility.yul\":29349:29419   */\n      tag_352\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":29342:29419   */\n      swap4\n      pop\n        /* \"#utility.yul\":29428:29493   */\n      tag_678\n        /* \"#utility.yul\":29486:29492   */\n      dup2\n        /* \"#utility.yul\":29481:29484   */\n      dup6\n        /* \"#utility.yul\":29474:29478   */\n      0x20\n        /* \"#utility.yul\":29467:29472   */\n      dup7\n        /* \"#utility.yul\":29463:29479   */\n      add\n        /* \"#utility.yul\":29428:29493   */\n      tag_312\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":29518:29547   */\n      tag_679\n        /* \"#utility.yul\":29540:29546   */\n      dup2\n        /* \"#utility.yul\":29518:29547   */\n      tag_303\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":29513:29516   */\n      dup5\n        /* \"#utility.yul\":29509:29548   */\n      add\n        /* \"#utility.yul\":29502:29548   */\n      swap2\n      pop\n        /* \"#utility.yul\":29271:29554   */\n      pop\n        /* \"#utility.yul\":29181:29554   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29560:30311   */\n    tag_251:\n        /* \"#utility.yul\":29783:29787   */\n      0x00\n        /* \"#utility.yul\":29821:29824   */\n      0xa0\n        /* \"#utility.yul\":29810:29819   */\n      dup3\n        /* \"#utility.yul\":29806:29825   */\n      add\n        /* \"#utility.yul\":29798:29825   */\n      swap1\n      pop\n        /* \"#utility.yul\":29835:29906   */\n      tag_681\n        /* \"#utility.yul\":29903:29904   */\n      0x00\n        /* \"#utility.yul\":29892:29901   */\n      dup4\n        /* \"#utility.yul\":29888:29905   */\n      add\n        /* \"#utility.yul\":29879:29885   */\n      dup9\n        /* \"#utility.yul\":29835:29906   */\n      tag_331\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":29916:29988   */\n      tag_682\n        /* \"#utility.yul\":29984:29986   */\n      0x20\n        /* \"#utility.yul\":29973:29982   */\n      dup4\n        /* \"#utility.yul\":29969:29987   */\n      add\n        /* \"#utility.yul\":29960:29966   */\n      dup8\n        /* \"#utility.yul\":29916:29988   */\n      tag_331\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":29998:30070   */\n      tag_683\n        /* \"#utility.yul\":30066:30068   */\n      0x40\n        /* \"#utility.yul\":30055:30064   */\n      dup4\n        /* \"#utility.yul\":30051:30069   */\n      add\n        /* \"#utility.yul\":30042:30048   */\n      dup7\n        /* \"#utility.yul\":29998:30070   */\n      tag_295\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":30080:30152   */\n      tag_684\n        /* \"#utility.yul\":30148:30150   */\n      0x60\n        /* \"#utility.yul\":30137:30146   */\n      dup4\n        /* \"#utility.yul\":30133:30151   */\n      add\n        /* \"#utility.yul\":30124:30130   */\n      dup6\n        /* \"#utility.yul\":30080:30152   */\n      tag_295\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":30200:30209   */\n      dup2\n        /* \"#utility.yul\":30194:30198   */\n      dup2\n        /* \"#utility.yul\":30190:30210   */\n      sub\n        /* \"#utility.yul\":30184:30187   */\n      0x80\n        /* \"#utility.yul\":30173:30182   */\n      dup4\n        /* \"#utility.yul\":30169:30188   */\n      add\n        /* \"#utility.yul\":30162:30211   */\n      mstore\n        /* \"#utility.yul\":30228:30304   */\n      tag_685\n        /* \"#utility.yul\":30299:30303   */\n      dup2\n        /* \"#utility.yul\":30290:30296   */\n      dup5\n        /* \"#utility.yul\":30228:30304   */\n      tag_353\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":30220:30304   */\n      swap1\n      pop\n        /* \"#utility.yul\":29560:30311   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30317:30458   */\n    tag_354:\n        /* \"#utility.yul\":30373:30378   */\n      0x00\n        /* \"#utility.yul\":30404:30410   */\n      dup2\n        /* \"#utility.yul\":30398:30411   */\n      mload\n        /* \"#utility.yul\":30389:30411   */\n      swap1\n      pop\n        /* \"#utility.yul\":30420:30452   */\n      tag_687\n        /* \"#utility.yul\":30446:30451   */\n      dup2\n        /* \"#utility.yul\":30420:30452   */\n      tag_297\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":30317:30458   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30464:30813   */\n    tag_254:\n        /* \"#utility.yul\":30533:30539   */\n      0x00\n        /* \"#utility.yul\":30582:30584   */\n      0x20\n        /* \"#utility.yul\":30570:30579   */\n      dup3\n        /* \"#utility.yul\":30561:30568   */\n      dup5\n        /* \"#utility.yul\":30557:30580   */\n      sub\n        /* \"#utility.yul\":30553:30585   */\n      slt\n        /* \"#utility.yul\":30550:30669   */\n      iszero\n      tag_689\n      jumpi\n        /* \"#utility.yul\":30588:30667   */\n      tag_690\n      tag_286\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":30550:30669   */\n    tag_689:\n        /* \"#utility.yul\":30708:30709   */\n      0x00\n        /* \"#utility.yul\":30733:30796   */\n      tag_691\n        /* \"#utility.yul\":30788:30795   */\n      dup5\n        /* \"#utility.yul\":30779:30785   */\n      dup3\n        /* \"#utility.yul\":30768:30777   */\n      dup6\n        /* \"#utility.yul\":30764:30786   */\n      add\n        /* \"#utility.yul\":30733:30796   */\n      tag_354\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":30723:30796   */\n      swap2\n      pop\n        /* \"#utility.yul\":30679:30806   */\n      pop\n        /* \"#utility.yul\":30464:30813   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30819:31872   */\n    tag_270:\n        /* \"#utility.yul\":31142:31146   */\n      0x00\n        /* \"#utility.yul\":31180:31183   */\n      0xa0\n        /* \"#utility.yul\":31169:31178   */\n      dup3\n        /* \"#utility.yul\":31165:31184   */\n      add\n        /* \"#utility.yul\":31157:31184   */\n      swap1\n      pop\n        /* \"#utility.yul\":31194:31265   */\n      tag_693\n        /* \"#utility.yul\":31262:31263   */\n      0x00\n        /* \"#utility.yul\":31251:31260   */\n      dup4\n        /* \"#utility.yul\":31247:31264   */\n      add\n        /* \"#utility.yul\":31238:31244   */\n      dup9\n        /* \"#utility.yul\":31194:31265   */\n      tag_331\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":31275:31347   */\n      tag_694\n        /* \"#utility.yul\":31343:31345   */\n      0x20\n        /* \"#utility.yul\":31332:31341   */\n      dup4\n        /* \"#utility.yul\":31328:31346   */\n      add\n        /* \"#utility.yul\":31319:31325   */\n      dup8\n        /* \"#utility.yul\":31275:31347   */\n      tag_331\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":31394:31403   */\n      dup2\n        /* \"#utility.yul\":31388:31392   */\n      dup2\n        /* \"#utility.yul\":31384:31404   */\n      sub\n        /* \"#utility.yul\":31379:31381   */\n      0x40\n        /* \"#utility.yul\":31368:31377   */\n      dup4\n        /* \"#utility.yul\":31364:31382   */\n      add\n        /* \"#utility.yul\":31357:31405   */\n      mstore\n        /* \"#utility.yul\":31422:31530   */\n      tag_695\n        /* \"#utility.yul\":31525:31529   */\n      dup2\n        /* \"#utility.yul\":31516:31522   */\n      dup7\n        /* \"#utility.yul\":31422:31530   */\n      tag_330\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":31414:31530   */\n      swap1\n      pop\n        /* \"#utility.yul\":31577:31586   */\n      dup2\n        /* \"#utility.yul\":31571:31575   */\n      dup2\n        /* \"#utility.yul\":31567:31587   */\n      sub\n        /* \"#utility.yul\":31562:31564   */\n      0x60\n        /* \"#utility.yul\":31551:31560   */\n      dup4\n        /* \"#utility.yul\":31547:31565   */\n      add\n        /* \"#utility.yul\":31540:31588   */\n      mstore\n        /* \"#utility.yul\":31605:31713   */\n      tag_696\n        /* \"#utility.yul\":31708:31712   */\n      dup2\n        /* \"#utility.yul\":31699:31705   */\n      dup6\n        /* \"#utility.yul\":31605:31713   */\n      tag_330\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":31597:31713   */\n      swap1\n      pop\n        /* \"#utility.yul\":31761:31770   */\n      dup2\n        /* \"#utility.yul\":31755:31759   */\n      dup2\n        /* \"#utility.yul\":31751:31771   */\n      sub\n        /* \"#utility.yul\":31745:31748   */\n      0x80\n        /* \"#utility.yul\":31734:31743   */\n      dup4\n        /* \"#utility.yul\":31730:31749   */\n      add\n        /* \"#utility.yul\":31723:31772   */\n      mstore\n        /* \"#utility.yul\":31789:31865   */\n      tag_697\n        /* \"#utility.yul\":31860:31864   */\n      dup2\n        /* \"#utility.yul\":31851:31857   */\n      dup5\n        /* \"#utility.yul\":31789:31865   */\n      tag_353\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":31781:31865   */\n      swap1\n      pop\n        /* \"#utility.yul\":30819:31872   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203240a21d2a5db3545717108610678671a5b832785764259d22f3dfd78a4f144464736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2949": {
									"entryPoint": null,
									"id": 2949,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_345": {
									"entryPoint": null,
									"id": 345,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_958": {
									"entryPoint": 242,
									"id": 958,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 263,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1142,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 674,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 871,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1027,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1070,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6778:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:13"
															},
															"nodeType": "YulIf",
															"src": "932:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:13",
														"type": ""
													}
												],
												"src": "845:351:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1267:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1277:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1255:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1262:3:13",
														"type": ""
													}
												],
												"src": "1202:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1424:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1434:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1396:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1408:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1419:4:13",
														"type": ""
													}
												],
												"src": "1326:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1624:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1640:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1634:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1624:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1596:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1606:6:13",
														"type": ""
													}
												],
												"src": "1554:99:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1704:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1707:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1697:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1697:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1697:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1801:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1804:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1794:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1794:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1794:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1825:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1828:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1818:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1818:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1818:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1659:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1873:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1893:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1883:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1883:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1883:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1987:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1990:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1980:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2011:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2014:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2004:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2004:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2004:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "1845:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2082:269:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2092:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2106:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2112:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2102:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2102:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2092:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2123:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2153:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2159:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2149:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2149:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2127:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2200:51:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2214:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2228:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2224:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2224:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2214:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2180:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2173:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:26:13"
															},
															"nodeType": "YulIf",
															"src": "2170:81:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2303:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2317:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2317:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2317:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2267:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2290:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2298:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2287:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2287:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2264:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2264:38:13"
															},
															"nodeType": "YulIf",
															"src": "2261:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2066:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2075:6:13",
														"type": ""
													}
												],
												"src": "2031:320:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:11:13",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "2429:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2421:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2449:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2452:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2442:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2442:14:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2442:14:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2465:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2486:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2473:9:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2473:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2465:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2398:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2406:4:13",
														"type": ""
													}
												],
												"src": "2357:141:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2548:49:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2558:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2576:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2583:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2572:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2572:14:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2588:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2568:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2568:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2531:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2541:6:13",
														"type": ""
													}
												],
												"src": "2504:93:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2656:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2666:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "2691:4:13"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2697:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "2687:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2687:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "2666:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "2631:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2637:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "2647:8:13",
														"type": ""
													}
												],
												"src": "2603:107:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2792:317:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2802:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "2823:10:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2835:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2819:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "2806:9:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2846:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2877:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2888:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2858:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2858:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "2850:4:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2964:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2995:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "3006:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2976:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2976:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "2964:8:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3024:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3037:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "3048:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3044:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3033:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3033:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3024:5:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3063:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3076:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "3087:8:13"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "3097:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3083:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3083:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3073:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3073:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3063:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2753:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "2760:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "2772:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2785:6:13",
														"type": ""
													}
												],
												"src": "2716:393:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3160:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3170:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3181:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3170:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3142:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3152:7:13",
														"type": ""
													}
												],
												"src": "3115:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3230:28:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3240:12:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3247:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3240:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3216:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3226:3:13",
														"type": ""
													}
												],
												"src": "3198:60:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3324:82:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3334:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3392:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3374:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3374:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3365:8:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3365:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3347:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3347:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3334:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3304:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3314:9:13",
														"type": ""
													}
												],
												"src": "3264:142:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3459:28:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3469:12:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3476:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3469:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3445:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3455:3:13",
														"type": ""
													}
												],
												"src": "3412:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3569:193:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3579:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "3634:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3603:30:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3603:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "3583:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3658:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3698:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3692:5:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3692:11:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3705:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "3737:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3713:23:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3713:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "3664:27:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3664:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "3651:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3651:105:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3651:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3546:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3552:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "3560:7:13",
														"type": ""
													}
												],
												"src": "3493:269:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3817:24:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3827:8:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3834:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3827:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3813:3:13",
														"type": ""
													}
												],
												"src": "3768:73:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3900:136:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3910:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3924:30:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3924:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "3914:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4009:4:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4015:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "4023:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3965:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3965:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3965:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3886:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3892:6:13",
														"type": ""
													}
												],
												"src": "3847:189:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4092:136:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4159:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "4203:5:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4210:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "4173:29:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4173:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4173:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "4112:5:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4119:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4109:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4109:14:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4124:26:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4126:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "4139:5:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4146:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4135:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4135:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "4126:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4106:2:13",
																"statements": []
															},
															"src": "4102:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "4080:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4087:3:13",
														"type": ""
													}
												],
												"src": "4042:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4313:464:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4339:431:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4353:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "4401:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "4369:31:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4369:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "4357:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4420:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "4443:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "4471:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "4453:17:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4453:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4439:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4439:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "4424:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4640:27:13",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4642:23:13",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "4657:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "4642:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "4624:10:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4636:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "4621:2:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4621:18:13"
																		},
																		"nodeType": "YulIf",
																		"src": "4618:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "4709:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "4726:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "4754:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "4736:17:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4736:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4722:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4722:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "4680:28:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4680:80:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4680:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4330:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4335:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4327:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4327:11:13"
															},
															"nodeType": "YulIf",
															"src": "4324:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4289:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "4296:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "4301:10:13",
														"type": ""
													}
												],
												"src": "4234:543:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4846:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4856:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4881:4:13"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4887:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4877:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4877:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4856:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4821:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4827:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4837:8:13",
														"type": ""
													}
												],
												"src": "4783:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4957:118:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4967:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5016:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "5019:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "5012:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5012:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5031:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "5027:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5027:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "4983:28:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4983:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4979:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4979:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4971:4:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5044:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5058:4:13"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "5064:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5054:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5054:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5044:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4934:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "4940:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4950:6:13",
														"type": ""
													}
												],
												"src": "4906:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5161:214:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5294:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5321:4:13"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "5327:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "5302:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5302:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "5294:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5340:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5351:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5361:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "5364:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5357:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5357:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5348:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5348:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "5340:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5142:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "5148:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "5156:4:13",
														"type": ""
													}
												],
												"src": "5080:295:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5472:1303:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5483:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5530:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5497:32:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5497:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "5487:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5619:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5621:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5621:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5621:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5591:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5599:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5588:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5588:30:13"
															},
															"nodeType": "YulIf",
															"src": "5585:56:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5651:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "5697:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5691:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "5665:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5665:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "5655:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5796:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "5802:6:13"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5810:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "5750:45:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5750:67:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5750:67:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5827:18:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5844:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "5831:9:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5855:17:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5868:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "5855:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5919:611:13",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5933:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5952:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5964:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "5960:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5960:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5948:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5948:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "5937:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5984:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6030:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "5998:31:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5998:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "5988:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6048:10:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6057:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "6052:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6116:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6141:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "6159:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "6164:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "6155:3:13"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6155:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "6149:5:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6149:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6134:6:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6134:42:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6134:42:13"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "6193:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6207:6:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6215:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6203:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6203:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "6193:6:13"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "6234:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "6251:9:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6262:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6247:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6247:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "6234:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6082:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "6085:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "6079:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6079:14:13"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "6094:21:13",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6096:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "6105:1:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6108:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6101:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6101:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6096:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "6075:3:13",
																					"statements": []
																				},
																				"src": "6071:208:13"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6315:156:13",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "6333:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6360:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6365:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6356:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6356:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6350:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6350:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "6337:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6400:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "6427:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "6442:6:13"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "6450:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "6438:3:13"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6438:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "6408:18:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6408:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6393:6:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6393:64:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6393:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "6298:7:13"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "6307:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "6295:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6295:19:13"
																				},
																				"nodeType": "YulIf",
																				"src": "6292:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6491:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "6505:6:13"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6513:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "6501:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6501:14:13"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6517:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6497:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6497:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6484:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6484:36:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6484:36:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5912:618:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5917:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6547:222:13",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6561:14:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6574:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "6565:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6598:67:13",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6616:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6635:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6640:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6631:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6631:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6625:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6625:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6616:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "6591:6:13"
																				},
																				"nodeType": "YulIf",
																				"src": "6588:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6685:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6744:5:13"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "6751:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "6691:52:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6691:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6678:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6678:81:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6678:81:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6539:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5892:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5900:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5889:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5889:14:13"
															},
															"nodeType": "YulSwitch",
															"src": "5882:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5461:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5467:3:13",
														"type": ""
													}
												],
												"src": "5380:1395:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002ee738038062002ee7833981810160405281019062000037919062000237565b8060405180608001604052806042815260200162002ea5604291396200006381620000f260201b60201c565b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000d95760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000d091906200027a565b60405180910390fd5b620000ea816200010760201b60201c565b5050620005f8565b806002908162000103919062000511565b5050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001ff82620001d2565b9050919050565b6200021181620001f2565b81146200021d57600080fd5b50565b600081519050620002318162000206565b92915050565b60006020828403121562000250576200024f620001cd565b5b6000620002608482850162000220565b91505092915050565b6200027481620001f2565b82525050565b600060208201905062000291600083018462000269565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200031957607f821691505b6020821081036200032f576200032e620002d1565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003997fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200035a565b620003a586836200035a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003f2620003ec620003e684620003bd565b620003c7565b620003bd565b9050919050565b6000819050919050565b6200040e83620003d1565b620004266200041d82620003f9565b84845462000367565b825550505050565b600090565b6200043d6200042e565b6200044a81848462000403565b505050565b5b8181101562000472576200046660008262000433565b60018101905062000450565b5050565b601f821115620004c1576200048b8162000335565b62000496846200034a565b81016020851015620004a6578190505b620004be620004b5856200034a565b8301826200044f565b50505b505050565b600082821c905092915050565b6000620004e660001984600802620004c6565b1980831691505092915050565b6000620005018383620004d3565b9150826002028217905092915050565b6200051c8262000297565b67ffffffffffffffff811115620005385762000537620002a2565b5b62000544825462000300565b6200055182828562000476565b600060209050601f83116001811462000589576000841562000574578287015190505b620005808582620004f3565b865550620005f0565b601f198416620005998662000335565b60005b82811015620005c3578489015182556001820191506020850194506020810190506200059c565b86831015620005e35784890151620005df601f891682620004d3565b8355505b6001600288020188555050505b505050505050565b61289d80620006086000396000f3fe608060405234801561001057600080fd5b50600436106100e95760003560e01c8063715018a61161008c578063a22cb46511610066578063a22cb46514610246578063e985e9c514610262578063f242432a14610292578063f2fde38b146102ae576100e9565b8063715018a614610202578063731133e91461020c5780638da5cb5b14610228576100e9565b80630e89341c116100c85780630e89341c1461016a5780631f7fdffa1461019a5780632eb2c2d6146101b65780634e1273f4146101d2576100e9565b8062fdd58e146100ee57806301ffc9a71461011e57806302fe53051461014e575b600080fd5b610108600480360381019061010391906117db565b6102ca565b604051610115919061182a565b60405180910390f35b6101386004803603810190610133919061189d565b610324565b60405161014591906118e5565b60405180910390f35b61016860048036038101906101639190611a46565b610406565b005b610184600480360381019061017f9190611a8f565b61041a565b6040516101919190611b3b565b60405180910390f35b6101b460048036038101906101af9190611cc6565b6104ae565b005b6101d060048036038101906101cb9190611d81565b6104c8565b005b6101ec60048036038101906101e79190611f13565b610570565b6040516101f99190612049565b60405180910390f35b61020a61067f565b005b6102266004803603810190610221919061206b565b610693565b005b6102306106ad565b60405161023d91906120fd565b60405180910390f35b610260600480360381019061025b9190612144565b6106d7565b005b61027c60048036038101906102779190612184565b6106ed565b60405161028991906118e5565b60405180910390f35b6102ac60048036038101906102a791906121c4565b610781565b005b6102c860048036038101906102c3919061225b565b610829565b005b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103ef57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103ff57506103fe826108af565b5b9050919050565b61040e610919565b610417816109a0565b50565b606060028054610429906122b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610455906122b7565b80156104a25780601f10610477576101008083540402835291602001916104a2565b820191906000526020600020905b81548152906001019060200180831161048557829003601f168201915b50505050509050919050565b6104b6610919565b6104c2848484846109b3565b50505050565b60006104d2610a39565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610517575061051586826106ed565b155b1561055b5780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016105529291906122e8565b60405180910390fd5b6105688686868686610a41565b505050505050565b606081518351146105bc57815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016105b3929190612311565b60405180910390fd5b6000835167ffffffffffffffff8111156105d9576105d861191b565b5b6040519080825280602002602001820160405280156106075781602001602082028036833780820191505090505b50905060005b84518110156106745761064461062c8287610b3990919063ffffffff16565b61063f8387610b4d90919063ffffffff16565b6102ca565b8282815181106106575761065661233a565b5b6020026020010181815250508061066d90612398565b905061060d565b508091505092915050565b610687610919565b6106916000610b61565b565b61069b610919565b6106a784848484610c27565b50505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106e96106e2610a39565b8383610cc0565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600061078b610a39565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156107d057506107ce86826106ed565b155b156108145780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161080b9291906122e8565b60405180910390fd5b6108218686868686610e30565b505050505050565b610831610919565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108a35760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161089a91906120fd565b60405180910390fd5b6108ac81610b61565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610921610a39565b73ffffffffffffffffffffffffffffffffffffffff1661093f6106ad565b73ffffffffffffffffffffffffffffffffffffffff161461099e57610962610a39565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161099591906120fd565b60405180910390fd5b565b80600290816109af919061258c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a255760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610a1c91906120fd565b60405180910390fd5b610a33600085858585610f3b565b50505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ab35760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610aaa91906120fd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610b255760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610b1c91906120fd565b60405180910390fd5b610b328585858585610f3b565b5050505050565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c995760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610c9091906120fd565b60405180910390fd5b600080610ca68585610fed565b91509150610cb8600087848487610f3b565b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d325760006040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610d2991906120fd565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e2391906118e5565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ea25760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610e9991906120fd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610f145760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610f0b91906120fd565b60405180910390fd5b600080610f218585610fed565b91509150610f328787848487610f3b565b50505050505050565b610f478585858561101d565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610fe6576000610f85610a39565b90506001845103610fd5576000610fa6600086610b4d90919063ffffffff16565b90506000610fbe600086610b4d90919063ffffffff16565b9050610fce8389898585896113cb565b5050610fe4565b610fe381878787878761157f565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b805182511461106757815181516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161105e929190612311565b60405180910390fd5b6000611071610a39565b905060005b83518110156112865760006110948286610b4d90919063ffffffff16565b905060006110ab8386610b4d90919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146111d857600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561118057888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401611177949392919061265e565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614611273578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461126b91906126a3565b925050819055505b50508061127f90612398565b9050611076565b5060018351036113455760006112a6600085610b4d90919063ffffffff16565b905060006112be600085610b4d90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051611336929190612311565b60405180910390a450506113c4565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516113bb9291906126d7565b60405180910390a45b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115611577578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161142c959493929190612763565b6020604051808303816000875af192505050801561146857506040513d601f19601f8201168201806040525081019061146591906127d2565b60015b6114ec573d8060008114611498576040519150601f19603f3d011682016040523d82523d6000602084013e61149d565b606091505b5060008151036114e457846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114db91906120fd565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461157557846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161156c91906120fd565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b111561172b578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016115e09594939291906127ff565b6020604051808303816000875af192505050801561161c57506040513d601f19601f8201168201806040525081019061161991906127d2565b60015b6116a0573d806000811461164c576040519150601f19603f3d011682016040523d82523d6000602084013e611651565b606091505b50600081510361169857846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161168f91906120fd565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461172957846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161172091906120fd565b60405180910390fd5b505b505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061177282611747565b9050919050565b61178281611767565b811461178d57600080fd5b50565b60008135905061179f81611779565b92915050565b6000819050919050565b6117b8816117a5565b81146117c357600080fd5b50565b6000813590506117d5816117af565b92915050565b600080604083850312156117f2576117f161173d565b5b600061180085828601611790565b9250506020611811858286016117c6565b9150509250929050565b611824816117a5565b82525050565b600060208201905061183f600083018461181b565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61187a81611845565b811461188557600080fd5b50565b60008135905061189781611871565b92915050565b6000602082840312156118b3576118b261173d565b5b60006118c184828501611888565b91505092915050565b60008115159050919050565b6118df816118ca565b82525050565b60006020820190506118fa60008301846118d6565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6119538261190a565b810181811067ffffffffffffffff821117156119725761197161191b565b5b80604052505050565b6000611985611733565b9050611991828261194a565b919050565b600067ffffffffffffffff8211156119b1576119b061191b565b5b6119ba8261190a565b9050602081019050919050565b82818337600083830152505050565b60006119e96119e484611996565b61197b565b905082815260208101848484011115611a0557611a04611905565b5b611a108482856119c7565b509392505050565b600082601f830112611a2d57611a2c611900565b5b8135611a3d8482602086016119d6565b91505092915050565b600060208284031215611a5c57611a5b61173d565b5b600082013567ffffffffffffffff811115611a7a57611a79611742565b5b611a8684828501611a18565b91505092915050565b600060208284031215611aa557611aa461173d565b5b6000611ab3848285016117c6565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611af6578082015181840152602081019050611adb565b60008484015250505050565b6000611b0d82611abc565b611b178185611ac7565b9350611b27818560208601611ad8565b611b308161190a565b840191505092915050565b60006020820190508181036000830152611b558184611b02565b905092915050565b600067ffffffffffffffff821115611b7857611b7761191b565b5b602082029050602081019050919050565b600080fd5b6000611ba1611b9c84611b5d565b61197b565b90508083825260208201905060208402830185811115611bc457611bc3611b89565b5b835b81811015611bed5780611bd988826117c6565b845260208401935050602081019050611bc6565b5050509392505050565b600082601f830112611c0c57611c0b611900565b5b8135611c1c848260208601611b8e565b91505092915050565b600067ffffffffffffffff821115611c4057611c3f61191b565b5b611c498261190a565b9050602081019050919050565b6000611c69611c6484611c25565b61197b565b905082815260208101848484011115611c8557611c84611905565b5b611c908482856119c7565b509392505050565b600082601f830112611cad57611cac611900565b5b8135611cbd848260208601611c56565b91505092915050565b60008060008060808587031215611ce057611cdf61173d565b5b6000611cee87828801611790565b945050602085013567ffffffffffffffff811115611d0f57611d0e611742565b5b611d1b87828801611bf7565b935050604085013567ffffffffffffffff811115611d3c57611d3b611742565b5b611d4887828801611bf7565b925050606085013567ffffffffffffffff811115611d6957611d68611742565b5b611d7587828801611c98565b91505092959194509250565b600080600080600060a08688031215611d9d57611d9c61173d565b5b6000611dab88828901611790565b9550506020611dbc88828901611790565b945050604086013567ffffffffffffffff811115611ddd57611ddc611742565b5b611de988828901611bf7565b935050606086013567ffffffffffffffff811115611e0a57611e09611742565b5b611e1688828901611bf7565b925050608086013567ffffffffffffffff811115611e3757611e36611742565b5b611e4388828901611c98565b9150509295509295909350565b600067ffffffffffffffff821115611e6b57611e6a61191b565b5b602082029050602081019050919050565b6000611e8f611e8a84611e50565b61197b565b90508083825260208201905060208402830185811115611eb257611eb1611b89565b5b835b81811015611edb5780611ec78882611790565b845260208401935050602081019050611eb4565b5050509392505050565b600082601f830112611efa57611ef9611900565b5b8135611f0a848260208601611e7c565b91505092915050565b60008060408385031215611f2a57611f2961173d565b5b600083013567ffffffffffffffff811115611f4857611f47611742565b5b611f5485828601611ee5565b925050602083013567ffffffffffffffff811115611f7557611f74611742565b5b611f8185828601611bf7565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611fc0816117a5565b82525050565b6000611fd28383611fb7565b60208301905092915050565b6000602082019050919050565b6000611ff682611f8b565b6120008185611f96565b935061200b83611fa7565b8060005b8381101561203c5781516120238882611fc6565b975061202e83611fde565b92505060018101905061200f565b5085935050505092915050565b600060208201905081810360008301526120638184611feb565b905092915050565b600080600080608085870312156120855761208461173d565b5b600061209387828801611790565b94505060206120a4878288016117c6565b93505060406120b5878288016117c6565b925050606085013567ffffffffffffffff8111156120d6576120d5611742565b5b6120e287828801611c98565b91505092959194509250565b6120f781611767565b82525050565b600060208201905061211260008301846120ee565b92915050565b612121816118ca565b811461212c57600080fd5b50565b60008135905061213e81612118565b92915050565b6000806040838503121561215b5761215a61173d565b5b600061216985828601611790565b925050602061217a8582860161212f565b9150509250929050565b6000806040838503121561219b5761219a61173d565b5b60006121a985828601611790565b92505060206121ba85828601611790565b9150509250929050565b600080600080600060a086880312156121e0576121df61173d565b5b60006121ee88828901611790565b95505060206121ff88828901611790565b9450506040612210888289016117c6565b9350506060612221888289016117c6565b925050608086013567ffffffffffffffff81111561224257612241611742565b5b61224e88828901611c98565b9150509295509295909350565b6000602082840312156122715761227061173d565b5b600061227f84828501611790565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806122cf57607f821691505b6020821081036122e2576122e1612288565b5b50919050565b60006040820190506122fd60008301856120ee565b61230a60208301846120ee565b9392505050565b6000604082019050612326600083018561181b565b612333602083018461181b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006123a3826117a5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123d5576123d4612369565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026124427fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612405565b61244c8683612405565b95508019841693508086168417925050509392505050565b6000819050919050565b600061248961248461247f846117a5565b612464565b6117a5565b9050919050565b6000819050919050565b6124a38361246e565b6124b76124af82612490565b848454612412565b825550505050565b600090565b6124cc6124bf565b6124d781848461249a565b505050565b5b818110156124fb576124f06000826124c4565b6001810190506124dd565b5050565b601f82111561254057612511816123e0565b61251a846123f5565b81016020851015612529578190505b61253d612535856123f5565b8301826124dc565b50505b505050565b600082821c905092915050565b600061256360001984600802612545565b1980831691505092915050565b600061257c8383612552565b9150826002028217905092915050565b61259582611abc565b67ffffffffffffffff8111156125ae576125ad61191b565b5b6125b882546122b7565b6125c38282856124ff565b600060209050601f8311600181146125f657600084156125e4578287015190505b6125ee8582612570565b865550612656565b601f198416612604866123e0565b60005b8281101561262c57848901518255600182019150602085019450602081019050612607565b868310156126495784890151612645601f891682612552565b8355505b6001600288020188555050505b505050505050565b600060808201905061267360008301876120ee565b612680602083018661181b565b61268d604083018561181b565b61269a606083018461181b565b95945050505050565b60006126ae826117a5565b91506126b9836117a5565b92508282019050808211156126d1576126d0612369565b5b92915050565b600060408201905081810360008301526126f18185611feb565b905081810360208301526127058184611feb565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60006127358261270e565b61273f8185612719565b935061274f818560208601611ad8565b6127588161190a565b840191505092915050565b600060a08201905061277860008301886120ee565b61278560208301876120ee565b612792604083018661181b565b61279f606083018561181b565b81810360808301526127b1818461272a565b90509695505050505050565b6000815190506127cc81611871565b92915050565b6000602082840312156127e8576127e761173d565b5b60006127f6848285016127bd565b91505092915050565b600060a08201905061281460008301886120ee565b61282160208301876120ee565b81810360408301526128338186611feb565b905081810360608301526128478185611feb565b9050818103608083015261285b818461272a565b9050969550505050505056fea26469706673582212203240a21d2a5db3545717108610678671a5b832785764259d22f3dfd78a4f144464736f6c63430008130033697066733a2f2f6261666b7265696632747268626f7467613278336d7271356478617661363279706771703379636f67673435726a677772797a6665626c6a6d7261",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2EE7 CODESIZE SUB DUP1 PUSH3 0x2EE7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x237 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x42 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2EA5 PUSH1 0x42 SWAP2 CODECOPY PUSH3 0x63 DUP2 PUSH3 0xF2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xD9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xD0 SWAP2 SWAP1 PUSH3 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xEA DUP2 PUSH3 0x107 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x5F8 JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x103 SWAP2 SWAP1 PUSH3 0x511 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1FF DUP3 PUSH3 0x1D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x211 DUP2 PUSH3 0x1F2 JUMP JUMPDEST DUP2 EQ PUSH3 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x231 DUP2 PUSH3 0x206 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x250 JUMPI PUSH3 0x24F PUSH3 0x1CD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x260 DUP5 DUP3 DUP6 ADD PUSH3 0x220 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x274 DUP2 PUSH3 0x1F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x291 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x269 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x319 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x32F JUMPI PUSH3 0x32E PUSH3 0x2D1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x399 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x35A JUMP JUMPDEST PUSH3 0x3A5 DUP7 DUP4 PUSH3 0x35A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3F2 PUSH3 0x3EC PUSH3 0x3E6 DUP5 PUSH3 0x3BD JUMP JUMPDEST PUSH3 0x3C7 JUMP JUMPDEST PUSH3 0x3BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x40E DUP4 PUSH3 0x3D1 JUMP JUMPDEST PUSH3 0x426 PUSH3 0x41D DUP3 PUSH3 0x3F9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x367 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x43D PUSH3 0x42E JUMP JUMPDEST PUSH3 0x44A DUP2 DUP5 DUP5 PUSH3 0x403 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x472 JUMPI PUSH3 0x466 PUSH1 0x0 DUP3 PUSH3 0x433 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x450 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4C1 JUMPI PUSH3 0x48B DUP2 PUSH3 0x335 JUMP JUMPDEST PUSH3 0x496 DUP5 PUSH3 0x34A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x4A6 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x4BE PUSH3 0x4B5 DUP6 PUSH3 0x34A JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x44F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4E6 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x4C6 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x501 DUP4 DUP4 PUSH3 0x4D3 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x51C DUP3 PUSH3 0x297 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x538 JUMPI PUSH3 0x537 PUSH3 0x2A2 JUMP JUMPDEST JUMPDEST PUSH3 0x544 DUP3 SLOAD PUSH3 0x300 JUMP JUMPDEST PUSH3 0x551 DUP3 DUP3 DUP6 PUSH3 0x476 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x589 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x574 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x580 DUP6 DUP3 PUSH3 0x4F3 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5F0 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x599 DUP7 PUSH3 0x335 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x5C3 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x59C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x5E3 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x5DF PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4D3 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x289D DUP1 PUSH3 0x608 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2AE JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x228 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1D2 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x14E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x182A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST PUSH2 0x324 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x1CC6 JUMP JUMPDEST PUSH2 0x4AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x4C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x1F13 JUMP JUMPDEST PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x2049 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH2 0x67F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x230 PUSH2 0x6AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2144 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x21C4 JUMP JUMPDEST PUSH2 0x781 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x225B JUMP JUMPDEST PUSH2 0x829 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3EF JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3FF JUMPI POP PUSH2 0x3FE DUP3 PUSH2 0x8AF JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40E PUSH2 0x919 JUMP JUMPDEST PUSH2 0x417 DUP2 PUSH2 0x9A0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x429 SWAP1 PUSH2 0x22B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x455 SWAP1 PUSH2 0x22B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x477 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x485 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B6 PUSH2 0x919 JUMP JUMPDEST PUSH2 0x4C2 DUP5 DUP5 DUP5 DUP5 PUSH2 0x9B3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D2 PUSH2 0xA39 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x517 JUMPI POP PUSH2 0x515 DUP7 DUP3 PUSH2 0x6ED JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x55B JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x552 SWAP3 SWAP2 SWAP1 PUSH2 0x22E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x568 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xA41 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5BC JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B3 SWAP3 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5D9 JUMPI PUSH2 0x5D8 PUSH2 0x191B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x607 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x674 JUMPI PUSH2 0x644 PUSH2 0x62C DUP3 DUP8 PUSH2 0xB39 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x63F DUP4 DUP8 PUSH2 0xB4D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2CA JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x657 JUMPI PUSH2 0x656 PUSH2 0x233A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x66D SWAP1 PUSH2 0x2398 JUMP JUMPDEST SWAP1 POP PUSH2 0x60D JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x687 PUSH2 0x919 JUMP JUMPDEST PUSH2 0x691 PUSH1 0x0 PUSH2 0xB61 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x69B PUSH2 0x919 JUMP JUMPDEST PUSH2 0x6A7 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC27 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6E9 PUSH2 0x6E2 PUSH2 0xA39 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xCC0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78B PUSH2 0xA39 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x7D0 JUMPI POP PUSH2 0x7CE DUP7 DUP3 PUSH2 0x6ED JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x814 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80B SWAP3 SWAP2 SWAP1 PUSH2 0x22E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x821 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xE30 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x831 PUSH2 0x919 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89A SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8AC DUP2 PUSH2 0xB61 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x921 PUSH2 0xA39 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x93F PUSH2 0x6AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x99E JUMPI PUSH2 0x962 PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x995 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0x9AF SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA25 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1C SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA33 PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0xF3B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAB3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAA SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB25 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1C SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB32 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xF3B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC99 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC90 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCA6 DUP6 DUP6 PUSH2 0xFED JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xCB8 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0xF3B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD32 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD29 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE23 SWAP2 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEA2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE99 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF14 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0B SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF21 DUP6 DUP6 PUSH2 0xFED JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xF32 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xF3B JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF47 DUP6 DUP6 DUP6 DUP6 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFE6 JUMPI PUSH1 0x0 PUSH2 0xF85 PUSH2 0xA39 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0xFD5 JUMPI PUSH1 0x0 PUSH2 0xFA6 PUSH1 0x0 DUP7 PUSH2 0xB4D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFBE PUSH1 0x0 DUP7 PUSH2 0xB4D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xFCE DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x13CB JUMP JUMPDEST POP POP PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0xFE3 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x157F JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1067 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105E SWAP3 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1071 PUSH2 0xA39 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1286 JUMPI PUSH1 0x0 PUSH2 0x1094 DUP3 DUP7 PUSH2 0xB4D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10AB DUP4 DUP7 PUSH2 0xB4D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11D8 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1180 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1177 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x265E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1273 JUMPI DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x126B SWAP2 SWAP1 PUSH2 0x26A3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x127F SWAP1 PUSH2 0x2398 JUMP JUMPDEST SWAP1 POP PUSH2 0x1076 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x1345 JUMPI PUSH1 0x0 PUSH2 0x12A6 PUSH1 0x0 DUP6 PUSH2 0xB4D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12BE PUSH1 0x0 DUP6 PUSH2 0xB4D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1336 SWAP3 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x13C4 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x13BB SWAP3 SWAP2 SWAP1 PUSH2 0x26D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1577 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2763 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1468 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1465 SWAP2 SWAP1 PUSH2 0x27D2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x14EC JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1498 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x149D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x14E4 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DB SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1575 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x156C SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x172B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27FF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x161C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1619 SWAP2 SWAP1 PUSH2 0x27D2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x16A0 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x164C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1651 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1698 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168F SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1729 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1720 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1772 DUP3 PUSH2 0x1747 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1782 DUP2 PUSH2 0x1767 JUMP JUMPDEST DUP2 EQ PUSH2 0x178D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x179F DUP2 PUSH2 0x1779 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17B8 DUP2 PUSH2 0x17A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x17C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17D5 DUP2 PUSH2 0x17AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17F2 JUMPI PUSH2 0x17F1 PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1800 DUP6 DUP3 DUP7 ADD PUSH2 0x1790 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1811 DUP6 DUP3 DUP7 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1824 DUP2 PUSH2 0x17A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x183F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x181B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x187A DUP2 PUSH2 0x1845 JUMP JUMPDEST DUP2 EQ PUSH2 0x1885 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1897 DUP2 PUSH2 0x1871 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B3 JUMPI PUSH2 0x18B2 PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18C1 DUP5 DUP3 DUP6 ADD PUSH2 0x1888 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18DF DUP2 PUSH2 0x18CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18FA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1953 DUP3 PUSH2 0x190A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1972 JUMPI PUSH2 0x1971 PUSH2 0x191B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1985 PUSH2 0x1733 JUMP JUMPDEST SWAP1 POP PUSH2 0x1991 DUP3 DUP3 PUSH2 0x194A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x19B1 JUMPI PUSH2 0x19B0 PUSH2 0x191B JUMP JUMPDEST JUMPDEST PUSH2 0x19BA DUP3 PUSH2 0x190A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E9 PUSH2 0x19E4 DUP5 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0x197B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A05 JUMPI PUSH2 0x1A04 PUSH2 0x1905 JUMP JUMPDEST JUMPDEST PUSH2 0x1A10 DUP5 DUP3 DUP6 PUSH2 0x19C7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A2D JUMPI PUSH2 0x1A2C PUSH2 0x1900 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A3D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x19D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A5C JUMPI PUSH2 0x1A5B PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A7A JUMPI PUSH2 0x1A79 PUSH2 0x1742 JUMP JUMPDEST JUMPDEST PUSH2 0x1A86 DUP5 DUP3 DUP6 ADD PUSH2 0x1A18 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AA5 JUMPI PUSH2 0x1AA4 PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AB3 DUP5 DUP3 DUP6 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1ADB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B0D DUP3 PUSH2 0x1ABC JUMP JUMPDEST PUSH2 0x1B17 DUP2 DUP6 PUSH2 0x1AC7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B27 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0x1B30 DUP2 PUSH2 0x190A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B55 DUP2 DUP5 PUSH2 0x1B02 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B78 JUMPI PUSH2 0x1B77 PUSH2 0x191B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BA1 PUSH2 0x1B9C DUP5 PUSH2 0x1B5D JUMP JUMPDEST PUSH2 0x197B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1BC4 JUMPI PUSH2 0x1BC3 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1BED JUMPI DUP1 PUSH2 0x1BD9 DUP9 DUP3 PUSH2 0x17C6 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BC6 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C0C JUMPI PUSH2 0x1C0B PUSH2 0x1900 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C1C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1B8E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C40 JUMPI PUSH2 0x1C3F PUSH2 0x191B JUMP JUMPDEST JUMPDEST PUSH2 0x1C49 DUP3 PUSH2 0x190A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C69 PUSH2 0x1C64 DUP5 PUSH2 0x1C25 JUMP JUMPDEST PUSH2 0x197B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C85 JUMPI PUSH2 0x1C84 PUSH2 0x1905 JUMP JUMPDEST JUMPDEST PUSH2 0x1C90 DUP5 DUP3 DUP6 PUSH2 0x19C7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CAD JUMPI PUSH2 0x1CAC PUSH2 0x1900 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CBD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C56 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CE0 JUMPI PUSH2 0x1CDF PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CEE DUP8 DUP3 DUP9 ADD PUSH2 0x1790 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D0F JUMPI PUSH2 0x1D0E PUSH2 0x1742 JUMP JUMPDEST JUMPDEST PUSH2 0x1D1B DUP8 DUP3 DUP9 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D3C JUMPI PUSH2 0x1D3B PUSH2 0x1742 JUMP JUMPDEST JUMPDEST PUSH2 0x1D48 DUP8 DUP3 DUP9 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D69 JUMPI PUSH2 0x1D68 PUSH2 0x1742 JUMP JUMPDEST JUMPDEST PUSH2 0x1D75 DUP8 DUP3 DUP9 ADD PUSH2 0x1C98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D9D JUMPI PUSH2 0x1D9C PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DAB DUP9 DUP3 DUP10 ADD PUSH2 0x1790 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1DBC DUP9 DUP3 DUP10 ADD PUSH2 0x1790 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DDD JUMPI PUSH2 0x1DDC PUSH2 0x1742 JUMP JUMPDEST JUMPDEST PUSH2 0x1DE9 DUP9 DUP3 DUP10 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E0A JUMPI PUSH2 0x1E09 PUSH2 0x1742 JUMP JUMPDEST JUMPDEST PUSH2 0x1E16 DUP9 DUP3 DUP10 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E37 JUMPI PUSH2 0x1E36 PUSH2 0x1742 JUMP JUMPDEST JUMPDEST PUSH2 0x1E43 DUP9 DUP3 DUP10 ADD PUSH2 0x1C98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E6B JUMPI PUSH2 0x1E6A PUSH2 0x191B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E8F PUSH2 0x1E8A DUP5 PUSH2 0x1E50 JUMP JUMPDEST PUSH2 0x197B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1EB2 JUMPI PUSH2 0x1EB1 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EDB JUMPI DUP1 PUSH2 0x1EC7 DUP9 DUP3 PUSH2 0x1790 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EB4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EFA JUMPI PUSH2 0x1EF9 PUSH2 0x1900 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F0A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F2A JUMPI PUSH2 0x1F29 PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F48 JUMPI PUSH2 0x1F47 PUSH2 0x1742 JUMP JUMPDEST JUMPDEST PUSH2 0x1F54 DUP6 DUP3 DUP7 ADD PUSH2 0x1EE5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F75 JUMPI PUSH2 0x1F74 PUSH2 0x1742 JUMP JUMPDEST JUMPDEST PUSH2 0x1F81 DUP6 DUP3 DUP7 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FC0 DUP2 PUSH2 0x17A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD2 DUP4 DUP4 PUSH2 0x1FB7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF6 DUP3 PUSH2 0x1F8B JUMP JUMPDEST PUSH2 0x2000 DUP2 DUP6 PUSH2 0x1F96 JUMP JUMPDEST SWAP4 POP PUSH2 0x200B DUP4 PUSH2 0x1FA7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x203C JUMPI DUP2 MLOAD PUSH2 0x2023 DUP9 DUP3 PUSH2 0x1FC6 JUMP JUMPDEST SWAP8 POP PUSH2 0x202E DUP4 PUSH2 0x1FDE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x200F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2063 DUP2 DUP5 PUSH2 0x1FEB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2085 JUMPI PUSH2 0x2084 PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2093 DUP8 DUP3 DUP9 ADD PUSH2 0x1790 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x20A4 DUP8 DUP3 DUP9 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x20B5 DUP8 DUP3 DUP9 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20D6 JUMPI PUSH2 0x20D5 PUSH2 0x1742 JUMP JUMPDEST JUMPDEST PUSH2 0x20E2 DUP8 DUP3 DUP9 ADD PUSH2 0x1C98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x20F7 DUP2 PUSH2 0x1767 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2112 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2121 DUP2 PUSH2 0x18CA JUMP JUMPDEST DUP2 EQ PUSH2 0x212C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x213E DUP2 PUSH2 0x2118 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x215B JUMPI PUSH2 0x215A PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2169 DUP6 DUP3 DUP7 ADD PUSH2 0x1790 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x217A DUP6 DUP3 DUP7 ADD PUSH2 0x212F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x219B JUMPI PUSH2 0x219A PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21A9 DUP6 DUP3 DUP7 ADD PUSH2 0x1790 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21BA DUP6 DUP3 DUP7 ADD PUSH2 0x1790 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x21E0 JUMPI PUSH2 0x21DF PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21EE DUP9 DUP3 DUP10 ADD PUSH2 0x1790 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x21FF DUP9 DUP3 DUP10 ADD PUSH2 0x1790 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2210 DUP9 DUP3 DUP10 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2221 DUP9 DUP3 DUP10 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2242 JUMPI PUSH2 0x2241 PUSH2 0x1742 JUMP JUMPDEST JUMPDEST PUSH2 0x224E DUP9 DUP3 DUP10 ADD PUSH2 0x1C98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2271 JUMPI PUSH2 0x2270 PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x227F DUP5 DUP3 DUP6 ADD PUSH2 0x1790 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x22CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x22E2 JUMPI PUSH2 0x22E1 PUSH2 0x2288 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22FD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x20EE JUMP JUMPDEST PUSH2 0x230A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20EE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2326 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x2333 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x181B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23A3 DUP3 PUSH2 0x17A5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x23D5 JUMPI PUSH2 0x23D4 PUSH2 0x2369 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2442 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2405 JUMP JUMPDEST PUSH2 0x244C DUP7 DUP4 PUSH2 0x2405 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2489 PUSH2 0x2484 PUSH2 0x247F DUP5 PUSH2 0x17A5 JUMP JUMPDEST PUSH2 0x2464 JUMP JUMPDEST PUSH2 0x17A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24A3 DUP4 PUSH2 0x246E JUMP JUMPDEST PUSH2 0x24B7 PUSH2 0x24AF DUP3 PUSH2 0x2490 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2412 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x24CC PUSH2 0x24BF JUMP JUMPDEST PUSH2 0x24D7 DUP2 DUP5 DUP5 PUSH2 0x249A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24FB JUMPI PUSH2 0x24F0 PUSH1 0x0 DUP3 PUSH2 0x24C4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x24DD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2540 JUMPI PUSH2 0x2511 DUP2 PUSH2 0x23E0 JUMP JUMPDEST PUSH2 0x251A DUP5 PUSH2 0x23F5 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2529 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x253D PUSH2 0x2535 DUP6 PUSH2 0x23F5 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x24DC JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2563 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2545 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x257C DUP4 DUP4 PUSH2 0x2552 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2595 DUP3 PUSH2 0x1ABC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25AE JUMPI PUSH2 0x25AD PUSH2 0x191B JUMP JUMPDEST JUMPDEST PUSH2 0x25B8 DUP3 SLOAD PUSH2 0x22B7 JUMP JUMPDEST PUSH2 0x25C3 DUP3 DUP3 DUP6 PUSH2 0x24FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x25F6 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x25E4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x25EE DUP6 DUP3 PUSH2 0x2570 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2656 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2604 DUP7 PUSH2 0x23E0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x262C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2607 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2649 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2645 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2552 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2673 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x20EE JUMP JUMPDEST PUSH2 0x2680 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x268D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x269A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x181B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26AE DUP3 PUSH2 0x17A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x26B9 DUP4 PUSH2 0x17A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x26D1 JUMPI PUSH2 0x26D0 PUSH2 0x2369 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26F1 DUP2 DUP6 PUSH2 0x1FEB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2705 DUP2 DUP5 PUSH2 0x1FEB JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2735 DUP3 PUSH2 0x270E JUMP JUMPDEST PUSH2 0x273F DUP2 DUP6 PUSH2 0x2719 JUMP JUMPDEST SWAP4 POP PUSH2 0x274F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0x2758 DUP2 PUSH2 0x190A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2778 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x20EE JUMP JUMPDEST PUSH2 0x2785 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x20EE JUMP JUMPDEST PUSH2 0x2792 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x279F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x181B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x27B1 DUP2 DUP5 PUSH2 0x272A JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x27CC DUP2 PUSH2 0x1871 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27E8 JUMPI PUSH2 0x27E7 PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27F6 DUP5 DUP3 DUP6 ADD PUSH2 0x27BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2814 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x20EE JUMP JUMPDEST PUSH2 0x2821 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x20EE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2833 DUP2 DUP7 PUSH2 0x1FEB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2847 DUP2 DUP6 PUSH2 0x1FEB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x285B DUP2 DUP5 PUSH2 0x272A JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN BLOCKHASH LOG2 SAR 0x2A 0x5D 0xB3 SLOAD JUMPI OR LT DUP7 LT PUSH8 0x8671A5B832785764 0x25 SWAP14 0x22 RETURN 0xDF 0xD7 DUP11 0x4F EQ PREVRANDAO PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER PUSH10 0x7066733A2F2F6261666B PUSH19 0x65696632747268626F7467613278336D727135 PUSH5 0x7861766136 ORIGIN PUSH26 0x706771703379636F67673435726A677772797A6665626C6A6D72 PUSH2 0x0 ",
							"sourceMap": "227:677:12:-:0;;;269:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;407:12;1250:62:2;;;;;;;;;;;;;;;;;1292:13;1300:4;1292:7;;;:13;;:::i;:::-;1250:62;1296:1:0;1272:26;;:12;:26;;;1268:95;;1349:1;1321:31;;;;;;;;;;;:::i;:::-;;;;;;;;1268:95;1372:32;1391:12;1372:18;;;:32;;:::i;:::-;1224:187;269:159:12;227:677;;10281:86:2;10354:6;10347:4;:13;;;;;;:::i;:::-;;10281:86;:::o;2911:187:0:-;2984:16;3003:6;;;;;;;;;;;2984:25;;3028:8;3019:6;;:17;;;;;;;;;;;;;;;;;;3082:8;3051:40;;3072:8;3051:40;;;;;;;;;;;;2974:124;2911:187;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;1554:99::-;1606:6;1640:5;1634:12;1624:22;;1554:99;;;:::o;1659:180::-;1707:77;1704:1;1697:88;1804:4;1801:1;1794:15;1828:4;1825:1;1818:15;1845:180;1893:77;1890:1;1883:88;1990:4;1987:1;1980:15;2014:4;2011:1;2004:15;2031:320;2075:6;2112:1;2106:4;2102:12;2092:22;;2159:1;2153:4;2149:12;2180:18;2170:81;;2236:4;2228:6;2224:17;2214:27;;2170:81;2298:2;2290:6;2287:14;2267:18;2264:38;2261:84;;2317:18;;:::i;:::-;2261:84;2082:269;2031:320;;;:::o;2357:141::-;2406:4;2429:3;2421:11;;2452:3;2449:1;2442:14;2486:4;2483:1;2473:18;2465:26;;2357:141;;;:::o;2504:93::-;2541:6;2588:2;2583;2576:5;2572:14;2568:23;2558:33;;2504:93;;;:::o;2603:107::-;2647:8;2697:5;2691:4;2687:16;2666:37;;2603:107;;;;:::o;2716:393::-;2785:6;2835:1;2823:10;2819:18;2858:97;2888:66;2877:9;2858:97;:::i;:::-;2976:39;3006:8;2995:9;2976:39;:::i;:::-;2964:51;;3048:4;3044:9;3037:5;3033:21;3024:30;;3097:4;3087:8;3083:19;3076:5;3073:30;3063:40;;2792:317;;2716:393;;;;;:::o;3115:77::-;3152:7;3181:5;3170:16;;3115:77;;;:::o;3198:60::-;3226:3;3247:5;3240:12;;3198:60;;;:::o;3264:142::-;3314:9;3347:53;3365:34;3374:24;3392:5;3374:24;:::i;:::-;3365:34;:::i;:::-;3347:53;:::i;:::-;3334:66;;3264:142;;;:::o;3412:75::-;3455:3;3476:5;3469:12;;3412:75;;;:::o;3493:269::-;3603:39;3634:7;3603:39;:::i;:::-;3664:91;3713:41;3737:16;3713:41;:::i;:::-;3705:6;3698:4;3692:11;3664:91;:::i;:::-;3658:4;3651:105;3569:193;3493:269;;;:::o;3768:73::-;3813:3;3768:73;:::o;3847:189::-;3924:32;;:::i;:::-;3965:65;4023:6;4015;4009:4;3965:65;:::i;:::-;3900:136;3847:189;;:::o;4042:186::-;4102:120;4119:3;4112:5;4109:14;4102:120;;;4173:39;4210:1;4203:5;4173:39;:::i;:::-;4146:1;4139:5;4135:13;4126:22;;4102:120;;;4042:186;;:::o;4234:543::-;4335:2;4330:3;4327:11;4324:446;;;4369:38;4401:5;4369:38;:::i;:::-;4453:29;4471:10;4453:29;:::i;:::-;4443:8;4439:44;4636:2;4624:10;4621:18;4618:49;;;4657:8;4642:23;;4618:49;4680:80;4736:22;4754:3;4736:22;:::i;:::-;4726:8;4722:37;4709:11;4680:80;:::i;:::-;4339:431;;4324:446;4234:543;;;:::o;4783:117::-;4837:8;4887:5;4881:4;4877:16;4856:37;;4783:117;;;;:::o;4906:169::-;4950:6;4983:51;5031:1;5027:6;5019:5;5016:1;5012:13;4983:51;:::i;:::-;4979:56;5064:4;5058;5054:15;5044:25;;4957:118;4906:169;;;;:::o;5080:295::-;5156:4;5302:29;5327:3;5321:4;5302:29;:::i;:::-;5294:37;;5364:3;5361:1;5357:11;5351:4;5348:21;5340:29;;5080:295;;;;:::o;5380:1395::-;5497:37;5530:3;5497:37;:::i;:::-;5599:18;5591:6;5588:30;5585:56;;;5621:18;;:::i;:::-;5585:56;5665:38;5697:4;5691:11;5665:38;:::i;:::-;5750:67;5810:6;5802;5796:4;5750:67;:::i;:::-;5844:1;5868:4;5855:17;;5900:2;5892:6;5889:14;5917:1;5912:618;;;;6574:1;6591:6;6588:77;;;6640:9;6635:3;6631:19;6625:26;6616:35;;6588:77;6691:67;6751:6;6744:5;6691:67;:::i;:::-;6685:4;6678:81;6547:222;5882:887;;5912:618;5964:4;5960:9;5952:6;5948:22;5998:37;6030:4;5998:37;:::i;:::-;6057:1;6071:208;6085:7;6082:1;6079:14;6071:208;;;6164:9;6159:3;6155:19;6149:26;6141:6;6134:42;6215:1;6207:6;6203:14;6193:24;;6262:2;6251:9;6247:18;6234:31;;6108:4;6105:1;6101:12;6096:17;;6071:208;;;6307:6;6298:7;6295:19;6292:179;;;6365:9;6360:3;6356:19;6350:26;6408:48;6450:4;6442:6;6438:17;6427:9;6408:48;:::i;:::-;6400:6;6393:64;6315:156;6292:179;6517:1;6513;6505:6;6501:14;6497:22;6491:4;6484:36;5919:611;;;5882:887;;5472:1303;;;5380:1395;;:::o;227:677:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArrays_1334": {
									"entryPoint": 4077,
									"id": 1334,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_checkOwner_84": {
									"entryPoint": 2329,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1318": {
									"entryPoint": 5503,
									"id": 1318,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1248": {
									"entryPoint": 5067,
									"id": 1248,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mintBatch_1051": {
									"entryPoint": 2483,
									"id": 1051,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_1010": {
									"entryPoint": 3111,
									"id": 1010,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1711": {
									"entryPoint": 2617,
									"id": 1711,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_947": {
									"entryPoint": 2625,
									"id": 947,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_892": {
									"entryPoint": 3632,
									"id": 892,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1180": {
									"entryPoint": 3264,
									"id": 1180,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setURI_958": {
									"entryPoint": 2464,
									"id": 958,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2913,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_826": {
									"entryPoint": 3899,
									"id": 826,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_750": {
									"entryPoint": 4125,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@balanceOfBatch_474": {
									"entryPoint": 1392,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_404": {
									"entryPoint": 714,
									"id": 404,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_507": {
									"entryPoint": 1773,
									"id": 507,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintBatch_3005": {
									"entryPoint": 1198,
									"id": 3005,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@mint_2982": {
									"entryPoint": 1683,
									"id": 2982,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1709,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1663,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_597": {
									"entryPoint": 1224,
									"id": 597,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_551": {
									"entryPoint": 1921,
									"id": 551,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_490": {
									"entryPoint": 1751,
									"id": 490,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setURI_2961": {
									"entryPoint": 1030,
									"id": 2961,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1862": {
									"entryPoint": 2223,
									"id": 1862,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_376": {
									"entryPoint": 804,
									"id": 376,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2089,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unsafeMemoryAccess_1685": {
									"entryPoint": 2893,
									"id": 1685,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1698": {
									"entryPoint": 2873,
									"id": 1698,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uri_387": {
									"entryPoint": 1050,
									"id": 387,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7804,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7054,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7254,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 6614,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 10173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 6680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 7553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 8644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 7366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 8299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 10194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 6726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 8134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 8119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 8936,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10239,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10083,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9822,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9943,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8977,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5939,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 6550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 9471,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 5991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 9436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 9612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6599,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6872,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 9584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 9112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 9554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9065,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8840,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9018,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6427,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6400,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 7049,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6405,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5954,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5949,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 9541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 9412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9234,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9370,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 9407,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:31875:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:13",
														"type": ""
													}
												],
												"src": "696:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:13",
														"type": ""
													}
												],
												"src": "841:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:13"
															},
															"nodeType": "YulIf",
															"src": "977:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:13",
														"type": ""
													}
												],
												"src": "924:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:13",
														"type": ""
													}
												],
												"src": "1052:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:13"
															},
															"nodeType": "YulIf",
															"src": "1290:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:13",
														"type": ""
													}
												],
												"src": "1197:474:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1742:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1730:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1737:3:13",
														"type": ""
													}
												],
												"src": "1677:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1899:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1909:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1871:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1883:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1894:4:13",
														"type": ""
													}
												],
												"src": "1801:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2073:105:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2083:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2094:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2055:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2065:7:13",
														"type": ""
													}
												],
												"src": "2029:149:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2226:78:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2282:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:42:13"
															},
															"nodeType": "YulIf",
															"src": "2236:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2219:5:13",
														"type": ""
													}
												],
												"src": "2184:120:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2361:86:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2371:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2339:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2347:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2355:5:13",
														"type": ""
													}
												],
												"src": "2310:137:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2518:262:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2564:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:32:13"
															},
															"nodeType": "YulIf",
															"src": "2528:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "2657:116:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2701:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2488:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2499:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2511:6:13",
														"type": ""
													}
												],
												"src": "2453:327:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2828:48:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2838:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2849:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2810:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2820:7:13",
														"type": ""
													}
												],
												"src": "2786:90:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2941:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2929:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2936:3:13",
														"type": ""
													}
												],
												"src": "2882:109:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3089:118:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3099:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3107:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3061:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3073:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3084:4:13",
														"type": ""
													}
												],
												"src": "2997:210:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3302:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3319:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3322:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3312:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3312:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3312:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3213:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3425:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3442:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3445:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3435:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3435:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3435:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3336:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3507:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3517:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3535:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3542:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3531:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3531:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3551:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3547:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3547:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3527:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3527:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3517:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3490:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3500:6:13",
														"type": ""
													}
												],
												"src": "3459:102:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3612:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3615:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3605:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3605:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3605:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3709:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3712:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3702:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3702:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3702:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3733:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3736:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3726:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3726:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3726:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3567:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3796:238:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3806:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3828:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3858:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3836:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3836:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3824:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3824:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3810:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3975:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3977:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3977:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3977:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3918:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3930:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3915:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3954:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3966:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3951:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3951:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3912:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3912:62:13"
															},
															"nodeType": "YulIf",
															"src": "3909:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4013:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4017:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4006:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4006:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4006:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3782:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3790:4:13",
														"type": ""
													}
												],
												"src": "3753:281:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4081:88:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4091:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "4101:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4101:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4091:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4150:6:13"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "4158:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "4130:19:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4130:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4130:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4065:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4074:6:13",
														"type": ""
													}
												],
												"src": "4040:129:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4242:241:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4347:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4349:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4349:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4349:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4319:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4327:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4316:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:30:13"
															},
															"nodeType": "YulIf",
															"src": "4313:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4379:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4409:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "4387:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4379:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4453:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "4465:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4471:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4453:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4226:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4237:4:13",
														"type": ""
													}
												],
												"src": "4175:308:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4553:82:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4576:3:13"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4581:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4586:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4563:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4563:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4613:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4618:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4609:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4609:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4627:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4602:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4602:27:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4602:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4535:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4540:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4545:6:13",
														"type": ""
													}
												],
												"src": "4489:146:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4725:341:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4735:75:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4802:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4760:41:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4760:49:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4744:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4744:66:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4735:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4826:5:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4833:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4819:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4819:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4819:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4849:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4864:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4871:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4860:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4860:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4853:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4914:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "4916:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4916:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4916:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4895:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4900:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4891:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4891:16:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4909:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4888:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4888:25:13"
															},
															"nodeType": "YulIf",
															"src": "4885:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5043:3:13"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5048:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5053:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "5006:36:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5006:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5006:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4698:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4703:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4711:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4719:5:13",
														"type": ""
													}
												],
												"src": "4641:425:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5148:278:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5197:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "5199:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5199:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5199:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5176:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5184:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5172:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5172:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5191:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5168:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5168:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5161:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5161:35:13"
															},
															"nodeType": "YulIf",
															"src": "5158:122:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5289:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5316:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5303:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5303:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5293:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5332:88:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5393:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5401:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5389:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5389:17:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5408:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5416:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5341:47:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5341:79:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "5332:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5126:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5134:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5142:5:13",
														"type": ""
													}
												],
												"src": "5086:340:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5508:433:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5554:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5556:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5556:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5556:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5529:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5538:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5525:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5525:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5550:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5521:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5521:32:13"
															},
															"nodeType": "YulIf",
															"src": "5518:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "5647:287:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5662:45:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5693:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5704:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5689:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5689:17:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5676:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5676:31:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5666:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5754:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5756:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5756:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5756:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5726:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5734:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5723:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5723:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "5720:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5851:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5896:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5907:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5892:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5892:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5916:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5861:30:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5861:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5851:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5478:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5489:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5501:6:13",
														"type": ""
													}
												],
												"src": "5432:509:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6013:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6059:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6061:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6061:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6061:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6034:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6043:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6030:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6030:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6055:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6026:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6026:32:13"
															},
															"nodeType": "YulIf",
															"src": "6023:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "6152:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6167:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6181:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6171:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6196:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6231:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6242:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6227:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6227:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6251:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6206:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6206:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6196:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5983:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5994:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6006:6:13",
														"type": ""
													}
												],
												"src": "5947:329:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6341:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6352:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6368:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6362:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6362:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6352:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6324:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6334:6:13",
														"type": ""
													}
												],
												"src": "6282:99:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6483:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6500:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6505:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6493:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6493:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6493:19:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6521:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6540:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6545:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6536:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6536:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6521:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6455:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6460:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6471:11:13",
														"type": ""
													}
												],
												"src": "6387:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6624:184:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6634:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6643:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6638:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6703:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6728:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6733:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6724:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6724:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "6747:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6752:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6743:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6743:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6737:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6737:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6717:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6717:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6717:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6664:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6667:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6661:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6661:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6675:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6677:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6686:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6689:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6682:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6682:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6677:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6657:3:13",
																"statements": []
															},
															"src": "6653:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6786:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6791:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6782:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6782:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6800:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6775:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:27:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6775:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6606:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6611:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6616:6:13",
														"type": ""
													}
												],
												"src": "6562:246:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6906:285:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6916:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6963:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6930:32:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6930:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6920:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6978:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7044:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7049:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6985:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6985:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6978:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7104:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7111:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7100:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7100:16:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7118:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7123:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7065:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7065:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7065:65:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7139:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7150:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7177:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7155:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7155:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7146:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7146:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7139:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6887:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6894:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6902:3:13",
														"type": ""
													}
												],
												"src": "6814:377:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7315:195:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7325:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7337:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7348:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7333:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7333:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7325:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7372:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7383:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7368:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7368:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7391:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7397:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7387:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7387:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7361:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7361:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7361:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7417:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7489:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7498:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7425:63:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7425:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7417:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7287:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7299:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7310:4:13",
														"type": ""
													}
												],
												"src": "7197:313:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7598:229:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7703:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7705:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7705:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7705:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7675:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7683:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7672:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7672:30:13"
															},
															"nodeType": "YulIf",
															"src": "7669:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7735:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7747:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7755:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7743:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7743:17:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7735:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7797:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7809:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7815:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7805:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7805:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7797:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7582:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7593:4:13",
														"type": ""
													}
												],
												"src": "7516:311:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7922:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7939:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7942:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7932:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7932:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7932:12:13"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "7833:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8075:608:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8085:90:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8167:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8110:56:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8110:64:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8094:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8094:81:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8085:5:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8184:16:13",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "8195:5:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8188:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8217:5:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8224:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8210:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8210:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8210:21:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8240:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8251:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8258:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8247:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8247:16:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "8240:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8273:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8291:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8303:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8311:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "8299:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8299:17:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8287:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8287:30:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "8277:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8345:103:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "8359:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8359:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8359:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8332:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8340:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8329:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8329:15:13"
															},
															"nodeType": "YulIf",
															"src": "8326:122:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8533:144:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8548:21:13",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:13"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "8552:10:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "8590:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "8616:10:13"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "8628:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "8595:20:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8595:37:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8583:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8583:50:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8583:50:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8646:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "8657:3:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8662:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8653:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8653:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8646:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8486:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8491:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8483:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8483:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8499:25:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8501:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "8512:3:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8517:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8508:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8501:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8461:21:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8463:17:13",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "8474:6:13"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "8467:3:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8457:220:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8045:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8053:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8061:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8069:5:13",
														"type": ""
													}
												],
												"src": "7973:710:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8783:293:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8832:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8834:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8834:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8834:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8811:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8819:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8807:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8807:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8826:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8803:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8803:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8796:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8796:35:13"
															},
															"nodeType": "YulIf",
															"src": "8793:122:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8924:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8951:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8938:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8938:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8928:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8967:103:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9043:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9051:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9039:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9039:17:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9058:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9066:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8976:62:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8976:94:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8967:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8761:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8769:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8777:5:13",
														"type": ""
													}
												],
												"src": "8706:370:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9148:241:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9253:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9255:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9255:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9255:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9225:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9233:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9222:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9222:30:13"
															},
															"nodeType": "YulIf",
															"src": "9219:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9285:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9315:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "9293:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9293:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9285:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9359:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9371:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9377:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9367:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9367:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9359:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9132:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9143:4:13",
														"type": ""
													}
												],
												"src": "9082:307:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9478:340:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9488:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9554:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9513:40:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9513:48:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "9497:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9497:65:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "9488:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "9578:5:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9585:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9571:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9571:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9571:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9601:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "9616:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9623:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9612:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9612:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "9605:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9666:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "9668:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9668:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9668:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "9647:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9652:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9643:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9643:16:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9661:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9640:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9640:25:13"
															},
															"nodeType": "YulIf",
															"src": "9637:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "9795:3:13"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "9800:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9805:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "9758:36:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9758:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9758:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9451:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9456:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9464:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "9472:5:13",
														"type": ""
													}
												],
												"src": "9395:423:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9898:277:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9947:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "9949:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9949:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9949:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9926:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9934:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9922:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9922:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "9941:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "9918:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9918:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9911:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9911:35:13"
															},
															"nodeType": "YulIf",
															"src": "9908:122:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10039:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10066:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10053:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10053:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10043:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10082:87:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10142:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10150:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10138:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10138:17:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10157:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10165:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10091:46:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10091:78:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10082:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9876:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9884:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "9892:5:13",
														"type": ""
													}
												],
												"src": "9837:338:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10357:1187:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10404:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10406:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10406:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10406:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10378:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10387:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10374:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10374:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10399:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10370:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10370:33:13"
															},
															"nodeType": "YulIf",
															"src": "10367:120:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "10497:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10512:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10526:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10516:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10541:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10576:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10587:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10572:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10572:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10596:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10551:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10551:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10541:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10624:303:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10639:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10670:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10681:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10666:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10666:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10653:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10653:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10643:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10732:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "10734:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10734:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10734:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10704:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10712:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10701:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10701:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "10698:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10829:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10889:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10900:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10885:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10885:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10909:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10839:45:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10839:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10829:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10937:303:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10952:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10983:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10994:2:13",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10979:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10979:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10966:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10966:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10956:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11045:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11047:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11047:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11047:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11017:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11025:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11014:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11014:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "11011:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11142:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11202:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11213:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11198:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11198:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11222:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11152:45:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11152:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "11142:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11250:287:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11265:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11296:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11307:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11292:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11292:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11279:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11279:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11269:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11358:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11360:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11360:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11360:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11330:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11338:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11327:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11327:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "11324:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11455:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11499:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11510:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11495:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11495:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11519:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11465:29:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11465:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "11455:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10303:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10314:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10326:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10334:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10342:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10350:6:13",
														"type": ""
													}
												],
												"src": "10181:1363:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11743:1316:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11790:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11792:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11792:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11792:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11764:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11773:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11760:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11760:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11785:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11756:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11756:33:13"
															},
															"nodeType": "YulIf",
															"src": "11753:120:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "11883:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11898:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11912:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11902:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11927:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11962:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11973:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11958:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11958:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11982:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11937:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11937:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11927:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12010:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12025:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12039:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12029:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12055:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12090:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12101:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12086:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12086:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12110:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12065:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12065:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12055:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12138:303:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12153:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12184:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12195:2:13",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12180:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12180:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "12167:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12167:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12157:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12246:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "12248:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12248:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "12248:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "12218:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12226:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12215:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12215:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "12212:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12343:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12403:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12414:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12399:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12399:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12423:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12353:45:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12353:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "12343:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12451:303:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12466:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12497:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12508:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12493:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12493:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "12480:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12480:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12470:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12559:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "12561:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12561:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "12561:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "12531:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12539:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12528:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12528:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "12525:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12656:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12716:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12727:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12712:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12712:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12736:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12666:45:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12666:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "12656:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12764:288:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12779:47:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12810:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12821:3:13",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12806:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12806:19:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "12793:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12793:33:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12783:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12873:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "12875:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12875:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "12875:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "12845:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12853:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12842:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12842:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "12839:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12970:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13014:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13025:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13010:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13010:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13034:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12980:29:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12980:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "12970:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11681:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11692:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11704:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11712:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11720:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11728:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "11736:6:13",
														"type": ""
													}
												],
												"src": "11550:1509:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13147:229:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13252:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "13254:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13254:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13254:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13224:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13232:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13221:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13221:30:13"
															},
															"nodeType": "YulIf",
															"src": "13218:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13284:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13296:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13304:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13292:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13292:17:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "13284:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13346:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "13358:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13364:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13354:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13354:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "13346:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13131:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "13142:4:13",
														"type": ""
													}
												],
												"src": "13065:311:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13501:608:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13511:90:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13593:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "13536:56:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13536:64:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "13520:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13520:81:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "13511:5:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13610:16:13",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "13621:5:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "13614:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "13643:5:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13650:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13636:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13636:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13636:21:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13666:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "13677:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13684:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13673:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13673:16:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "13666:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13699:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13717:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13729:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13737:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "13725:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13725:17:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13713:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13713:30:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "13703:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13771:103:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "13785:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13785:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13785:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "13758:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "13766:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13755:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13755:15:13"
															},
															"nodeType": "YulIf",
															"src": "13752:122:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13959:144:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13974:21:13",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "13992:3:13"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "13978:10:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "14016:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "14042:10:13"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "14054:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "14021:20:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14021:37:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14009:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14009:50:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14009:50:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14072:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "14083:3:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14088:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14079:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14079:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "14072:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "13912:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "13917:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13909:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13909:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13925:25:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13927:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "13938:3:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13943:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13934:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13934:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "13927:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13887:21:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13889:17:13",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "13900:6:13"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "13893:3:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "13883:220:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13471:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13479:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13487:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "13495:5:13",
														"type": ""
													}
												],
												"src": "13399:710:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14209:293:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14258:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "14260:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14260:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14260:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14237:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14245:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14233:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14233:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "14252:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "14229:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14229:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14222:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14222:35:13"
															},
															"nodeType": "YulIf",
															"src": "14219:122:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14350:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14377:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "14364:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14364:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14354:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14393:103:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "14469:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14477:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14465:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14465:17:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14484:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "14492:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14402:62:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14402:94:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "14393:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14187:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14195:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "14203:5:13",
														"type": ""
													}
												],
												"src": "14132:370:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14641:761:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14687:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14689:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14689:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14689:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14662:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14671:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14658:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14658:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14683:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14654:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14654:32:13"
															},
															"nodeType": "YulIf",
															"src": "14651:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "14780:302:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14795:45:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14826:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14837:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14822:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14822:17:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "14809:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14809:31:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14799:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "14887:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "14889:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14889:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "14889:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "14859:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14867:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14856:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14856:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "14853:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14984:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15044:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15055:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15040:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15040:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15064:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "14994:45:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14994:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14984:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15092:303:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15107:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15138:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15149:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15134:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15134:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "15121:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15121:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15111:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "15200:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "15202:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15202:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "15202:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "15172:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15180:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15169:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15169:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "15166:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15297:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15357:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15368:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15353:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15353:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15377:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "15307:45:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15307:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "15297:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14603:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14614:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14626:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14634:6:13",
														"type": ""
													}
												],
												"src": "14508:894:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15482:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15493:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15509:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15503:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15503:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "15493:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15465:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15475:6:13",
														"type": ""
													}
												],
												"src": "15408:114:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15639:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15656:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15661:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15649:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15649:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15649:19:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15677:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15696:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15701:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15692:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15692:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "15677:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15611:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15616:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "15627:11:13",
														"type": ""
													}
												],
												"src": "15528:184:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15790:60:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15800:11:13",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "15808:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "15800:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15821:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "15833:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15838:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15829:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15829:14:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "15821:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "15777:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "15785:4:13",
														"type": ""
													}
												],
												"src": "15718:132:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15911:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15928:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15951:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "15933:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15933:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15921:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15921:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15921:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15899:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15906:3:13",
														"type": ""
													}
												],
												"src": "15856:108:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16050:99:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16094:6:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16102:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16060:33:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16060:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16060:46:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16115:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16133:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16138:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16129:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16129:14:13"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "16115:10:13"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16023:6:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16031:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "16039:10:13",
														"type": ""
													}
												],
												"src": "15970:179:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16230:38:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16240:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "16252:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16257:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16248:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16248:14:13"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "16240:4:13"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "16217:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "16225:4:13",
														"type": ""
													}
												],
												"src": "16155:113:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16428:608:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16438:68:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16500:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16452:47:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16452:54:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16442:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16515:93:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16596:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16601:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16522:73:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16522:86:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16515:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16617:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16682:5:13"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16632:49:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16632:56:13"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "16621:7:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16697:21:13",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "16711:7:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "16701:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16787:224:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "16801:34:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "16828:6:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "16822:5:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16822:13:13"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "16805:13:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "16848:70:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "16899:13:13"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "16914:3:13"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "16855:43:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16855:63:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "16848:3:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "16931:70:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "16994:6:13"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "16941:52:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16941:60:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16931:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "16749:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16752:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "16746:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16746:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "16760:18:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16762:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "16771:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16774:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "16767:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16767:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "16762:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "16731:14:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "16733:10:13",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "16742:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "16737:1:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "16727:284:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17020:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "17027:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17020:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16407:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16414:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16423:3:13",
														"type": ""
													}
												],
												"src": "16304:732:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17190:225:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17200:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17212:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17223:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17208:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17208:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17200:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17247:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17258:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17243:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17243:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17266:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17272:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17262:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17262:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17236:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17236:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17236:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17292:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17394:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17403:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17300:93:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17300:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17292:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17162:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17174:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17185:4:13",
														"type": ""
													}
												],
												"src": "17042:373:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17547:817:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17594:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "17596:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17596:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17596:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17568:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17577:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17564:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17564:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17589:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "17560:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17560:33:13"
															},
															"nodeType": "YulIf",
															"src": "17557:120:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "17687:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17702:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17716:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17706:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17731:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17766:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17777:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17762:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17762:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17786:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "17741:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17741:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "17731:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17814:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17829:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17843:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17833:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17859:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17894:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17905:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17890:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17890:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17914:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "17869:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17869:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "17859:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17942:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17957:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17971:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17961:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17987:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "18022:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18033:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18018:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18018:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18042:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "17997:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17997:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "17987:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "18070:287:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18085:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "18116:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18127:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18112:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18112:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "18099:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18099:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18089:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "18178:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "18180:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18180:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "18180:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "18150:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18158:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "18147:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18147:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "18144:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "18275:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "18319:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18330:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18315:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18315:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18339:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "18285:29:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18285:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "18275:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17493:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "17504:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17516:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17524:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17532:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "17540:6:13",
														"type": ""
													}
												],
												"src": "17421:943:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18435:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18452:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18475:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "18457:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18457:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18445:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18445:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18445:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18423:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18430:3:13",
														"type": ""
													}
												],
												"src": "18370:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18592:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18602:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18614:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18625:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18610:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18610:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18602:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18682:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18695:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18706:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18691:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18691:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18638:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18638:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18638:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18564:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18576:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18587:4:13",
														"type": ""
													}
												],
												"src": "18494:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18762:76:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18816:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18825:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18828:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18818:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18818:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18818:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18785:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18807:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "18792:14:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18792:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18782:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18782:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18775:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18775:40:13"
															},
															"nodeType": "YulIf",
															"src": "18772:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18755:5:13",
														"type": ""
													}
												],
												"src": "18722:116:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18893:84:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18903:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "18925:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "18912:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18912:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "18903:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18965:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "18941:23:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18941:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18941:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "18871:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18879:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18887:5:13",
														"type": ""
													}
												],
												"src": "18844:133:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19063:388:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19109:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "19111:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19111:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19111:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19084:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19093:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19080:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19080:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19105:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19076:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19076:32:13"
															},
															"nodeType": "YulIf",
															"src": "19073:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "19202:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19217:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19231:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19221:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19246:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19281:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19292:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19277:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19277:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19301:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "19256:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19256:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "19246:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19329:115:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19344:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19358:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19348:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19374:60:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19406:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19417:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19402:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19402:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19426:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "19384:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19384:50:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "19374:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19025:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19036:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19048:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19056:6:13",
														"type": ""
													}
												],
												"src": "18983:468:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19540:391:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19586:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "19588:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19588:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19588:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19561:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19570:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19557:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19557:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19582:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19553:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19553:32:13"
															},
															"nodeType": "YulIf",
															"src": "19550:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "19679:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19694:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19708:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19698:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19723:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19758:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19769:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19754:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19754:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19778:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "19733:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19733:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "19723:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19806:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19821:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19835:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19825:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19851:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19886:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19897:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19882:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19882:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19906:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "19861:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19861:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "19851:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19502:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19513:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19525:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19533:6:13",
														"type": ""
													}
												],
												"src": "19457:474:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20080:946:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20127:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "20129:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20129:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20129:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20101:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20110:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20097:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20097:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20122:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "20093:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20093:33:13"
															},
															"nodeType": "YulIf",
															"src": "20090:120:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "20220:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20235:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20249:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20239:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20264:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20299:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20310:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20295:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20295:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20319:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "20274:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20274:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "20264:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20347:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20362:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20376:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20366:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20392:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20427:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20438:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20423:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20423:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20447:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "20402:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20402:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "20392:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20475:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20490:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20504:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20494:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20520:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20555:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20566:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20551:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20551:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20575:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "20530:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20530:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "20520:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20603:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20618:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20632:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20622:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20648:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20683:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20694:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20679:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20679:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20703:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "20658:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20658:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "20648:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20731:288:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20746:47:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20777:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20788:3:13",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20773:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20773:19:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "20760:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20760:33:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20750:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "20840:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "20842:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20842:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "20842:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "20812:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20820:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20809:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20809:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "20806:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20937:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20981:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20992:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20977:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20977:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21001:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "20947:29:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20947:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "20937:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20018:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "20029:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20041:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20049:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20057:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "20065:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "20073:6:13",
														"type": ""
													}
												],
												"src": "19937:1089:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21098:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21144:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "21146:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21146:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21146:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21119:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21128:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21115:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21115:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21140:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "21111:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21111:32:13"
															},
															"nodeType": "YulIf",
															"src": "21108:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "21237:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21252:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21266:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21256:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21281:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21316:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21327:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21312:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21312:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21336:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "21291:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21291:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "21281:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21068:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "21079:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21091:6:13",
														"type": ""
													}
												],
												"src": "21032:329:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21395:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21412:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21415:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21405:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21405:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21405:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21509:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21512:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21502:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21502:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21502:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21533:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21536:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21526:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21526:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21526:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "21367:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21604:269:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21614:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "21628:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21634:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "21624:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21624:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "21614:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21645:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "21675:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21681:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21671:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21671:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "21649:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21722:51:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "21736:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "21750:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21758:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "21746:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21746:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "21736:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "21702:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21695:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21695:26:13"
															},
															"nodeType": "YulIf",
															"src": "21692:81:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21825:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "21839:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21839:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21839:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "21789:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "21812:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21820:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "21809:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21809:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "21786:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21786:38:13"
															},
															"nodeType": "YulIf",
															"src": "21783:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "21588:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21597:6:13",
														"type": ""
													}
												],
												"src": "21553:320:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22005:206:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22015:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22027:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22038:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22023:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22023:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22015:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22095:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22108:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22119:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22104:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22104:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22051:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22051:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22051:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22176:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22189:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22200:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22185:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22185:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22132:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22132:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22132:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21969:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21981:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21989:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22000:4:13",
														"type": ""
													}
												],
												"src": "21879:332:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22343:206:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22353:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22365:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22376:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22361:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22361:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22353:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22433:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22446:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22457:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22442:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22442:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22389:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22389:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22389:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22514:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22527:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22538:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22523:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22523:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22470:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22470:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22470:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22307:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22319:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22327:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22338:4:13",
														"type": ""
													}
												],
												"src": "22217:332:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22583:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22600:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22603:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22593:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22593:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22593:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22697:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22700:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22690:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22690:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22690:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22721:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22724:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22714:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22714:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22714:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "22555:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22769:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22786:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22789:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22779:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22779:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22779:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22883:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22886:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22876:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22876:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22876:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22907:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22910:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22900:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22900:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22900:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "22741:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22970:190:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22980:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23007:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22989:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22989:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "22980:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23103:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "23105:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23105:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23105:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23028:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23035:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "23025:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23025:77:13"
															},
															"nodeType": "YulIf",
															"src": "23022:103:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23134:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23145:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23152:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23141:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23141:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "23134:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22956:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "22966:3:13",
														"type": ""
													}
												],
												"src": "22927:233:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23220:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23230:11:13",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "23238:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "23230:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23258:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "23261:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23251:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23251:14:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23251:14:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23274:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23292:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23295:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "23282:9:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23282:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "23274:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "23207:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "23215:4:13",
														"type": ""
													}
												],
												"src": "23166:141:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23357:49:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23367:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23385:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23392:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23381:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23381:14:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23397:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "23377:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23377:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "23367:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23340:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "23350:6:13",
														"type": ""
													}
												],
												"src": "23313:93:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23465:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23475:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "23500:4:13"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23506:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "23496:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23496:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "23475:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "23440:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23446:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "23456:8:13",
														"type": ""
													}
												],
												"src": "23412:107:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23601:317:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23611:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "23632:10:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23644:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "23628:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23628:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "23615:9:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23655:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "23686:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23697:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "23667:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23667:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "23659:4:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23773:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "23804:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "23815:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "23785:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23785:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "23773:8:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23833:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23846:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "23857:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "23853:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23853:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "23842:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23842:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "23833:5:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23872:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23885:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "23896:8:13"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "23906:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "23892:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23892:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "23882:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23882:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "23872:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23562:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "23569:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "23581:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "23594:6:13",
														"type": ""
													}
												],
												"src": "23525:393:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23956:28:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23966:12:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "23973:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "23966:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23942:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "23952:3:13",
														"type": ""
													}
												],
												"src": "23924:60:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24050:82:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24060:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "24118:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "24100:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24100:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "24091:8:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24091:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24073:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24073:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "24060:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24030:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "24040:9:13",
														"type": ""
													}
												],
												"src": "23990:142:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24185:28:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24195:12:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "24202:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "24195:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24171:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "24181:3:13",
														"type": ""
													}
												],
												"src": "24138:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24295:193:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24305:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "24360:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24329:30:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24329:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "24309:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "24384:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "24424:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "24418:5:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24418:11:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "24431:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "24463:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "24439:23:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24439:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "24390:27:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24390:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "24377:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24377:105:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24377:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "24272:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "24278:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "24286:7:13",
														"type": ""
													}
												],
												"src": "24219:269:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24543:24:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24553:8:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "24560:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "24553:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "24539:3:13",
														"type": ""
													}
												],
												"src": "24494:73:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24626:136:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24636:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24650:30:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24650:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "24640:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "24735:4:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "24741:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "24749:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24691:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24691:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24691:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "24612:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "24618:6:13",
														"type": ""
													}
												],
												"src": "24573:189:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24818:136:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24885:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "24929:5:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24936:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "24899:29:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24899:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24899:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "24838:5:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "24845:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "24835:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24835:14:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "24850:26:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "24852:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "24865:5:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24872:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "24861:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24861:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "24852:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "24832:2:13",
																"statements": []
															},
															"src": "24828:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "24806:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24813:3:13",
														"type": ""
													}
												],
												"src": "24768:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25039:464:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25065:431:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "25079:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "25127:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "25095:31:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25095:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "25083:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "25146:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "25169:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "25197:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "25179:17:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25179:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "25165:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25165:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "25150:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "25366:27:13",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "25368:23:13",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "25383:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "25368:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "25350:10:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25362:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "25347:2:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25347:18:13"
																		},
																		"nodeType": "YulIf",
																		"src": "25344:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "25435:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "25452:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "25480:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "25462:17:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "25462:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "25448:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25448:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "25406:28:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25406:80:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25406:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "25056:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25061:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "25053:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25053:11:13"
															},
															"nodeType": "YulIf",
															"src": "25050:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "25015:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "25022:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "25027:10:13",
														"type": ""
													}
												],
												"src": "24960:543:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25572:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25582:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "25607:4:13"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25613:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "25603:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25603:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "25582:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "25547:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25553:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "25563:8:13",
														"type": ""
													}
												],
												"src": "25509:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25683:118:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25693:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25742:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "25745:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "25738:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25738:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25757:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "25753:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25753:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "25709:28:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25709:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "25705:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25705:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "25697:4:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25770:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "25784:4:13"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "25790:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "25780:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25780:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "25770:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "25660:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "25666:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "25676:6:13",
														"type": ""
													}
												],
												"src": "25632:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25887:214:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26020:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "26047:4:13"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "26053:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "26028:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26028:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "26020:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26066:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "26077:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26087:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "26090:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "26083:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26083:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "26074:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26074:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "26066:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "25868:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "25874:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "25882:4:13",
														"type": ""
													}
												],
												"src": "25806:295:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26198:1303:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26209:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "26256:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "26223:32:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26223:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "26213:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26345:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "26347:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26347:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26347:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "26317:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26325:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "26314:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26314:30:13"
															},
															"nodeType": "YulIf",
															"src": "26311:56:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26377:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "26423:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "26417:5:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26417:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "26391:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26391:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "26381:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "26522:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "26528:6:13"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "26536:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "26476:45:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26476:67:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26476:67:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26553:18:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "26570:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "26557:9:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26581:17:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "26594:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "26581:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "26645:611:13",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "26659:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "26678:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "26690:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "26686:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "26686:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "26674:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26674:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "26663:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "26710:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "26756:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "26724:31:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26724:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "26714:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "26774:10:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26783:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "26778:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "26842:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "26867:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "26885:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "26890:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "26881:3:13"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "26881:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "26875:5:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "26875:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "26860:6:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "26860:42:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "26860:42:13"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "26919:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "26933:6:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "26941:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "26929:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "26929:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "26919:6:13"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "26960:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "26977:9:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "26988:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "26973:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "26973:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "26960:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "26808:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "26811:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "26805:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26805:14:13"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "26820:21:13",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "26822:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "26831:1:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "26834:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "26827:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "26827:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "26822:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "26801:3:13",
																					"statements": []
																				},
																				"src": "26797:208:13"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "27041:156:13",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "27059:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "27086:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "27091:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "27082:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "27082:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "27076:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "27076:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "27063:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "27126:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "27153:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "27168:6:13"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "27176:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "27164:3:13"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "27164:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "27134:18:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "27134:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "27119:6:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "27119:64:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "27119:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "27024:7:13"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "27033:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "27021:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27021:19:13"
																				},
																				"nodeType": "YulIf",
																				"src": "27018:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "27217:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "27231:6:13"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "27239:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "27227:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "27227:14:13"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "27243:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "27223:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "27223:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "27210:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27210:36:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "27210:36:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "26638:618:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26643:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "27273:222:13",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "27287:14:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27300:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "27291:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "27324:67:13",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "27342:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "27361:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "27366:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "27357:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "27357:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "27351:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "27351:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "27342:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "27317:6:13"
																				},
																				"nodeType": "YulIf",
																				"src": "27314:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "27411:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "27470:5:13"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "27477:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "27417:52:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "27417:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "27404:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27404:81:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "27404:81:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "27265:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "26618:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26626:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "26615:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26615:14:13"
															},
															"nodeType": "YulSwitch",
															"src": "26608:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "26187:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "26193:3:13",
														"type": ""
													}
												],
												"src": "26106:1395:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27689:371:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27699:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27711:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27722:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27707:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27707:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27699:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27780:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27793:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27804:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27789:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27789:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27736:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27736:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27736:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "27861:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27874:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27885:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27870:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27870:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27817:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27817:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27817:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "27943:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27956:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27967:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27952:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27952:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27899:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27899:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27899:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "28025:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28038:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28049:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28034:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28034:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27981:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27981:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27981:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27637:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "27649:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "27657:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "27665:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27673:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27684:4:13",
														"type": ""
													}
												],
												"src": "27507:553:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28110:147:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28120:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28143:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "28125:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28125:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "28120:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28154:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "28177:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "28159:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28159:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "28154:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28188:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28199:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "28202:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28195:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28195:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "28188:3:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28228:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "28230:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28230:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28230:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28220:1:13"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "28223:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "28217:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28217:10:13"
															},
															"nodeType": "YulIf",
															"src": "28214:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "28097:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "28100:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "28106:3:13",
														"type": ""
													}
												],
												"src": "28066:191:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28489:408:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28499:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28511:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28522:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28507:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28507:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28499:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28546:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28557:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28542:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28542:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28565:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28571:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28561:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28561:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28535:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28535:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28535:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28591:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "28693:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28702:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28599:93:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28599:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28591:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28728:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28739:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28724:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28724:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28748:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28754:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28744:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28744:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28717:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28717:48:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28717:48:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28774:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "28876:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28885:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28782:93:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28782:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28774:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28453:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "28465:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28473:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28484:4:13",
														"type": ""
													}
												],
												"src": "28263:634:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28961:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28972:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28988:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "28982:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28982:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "28972:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28944:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "28954:6:13",
														"type": ""
													}
												],
												"src": "28903:98:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29102:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29119:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29124:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29112:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29112:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29112:19:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29140:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29159:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29164:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29155:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29155:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "29140:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "29074:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "29079:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "29090:11:13",
														"type": ""
													}
												],
												"src": "29007:168:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29271:283:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29281:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29327:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "29295:31:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29295:38:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "29285:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29342:77:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29407:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29412:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29349:57:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29349:70:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "29342:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "29467:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29474:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29463:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29463:16:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29481:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29486:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "29428:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29428:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29428:65:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29502:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29513:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "29540:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "29518:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29518:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29509:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29509:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "29502:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29252:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "29259:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "29267:3:13",
														"type": ""
													}
												],
												"src": "29181:373:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29788:523:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29798:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29810:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29821:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29806:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29806:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29798:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "29879:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29892:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29903:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29888:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29888:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29835:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29835:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29835:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "29960:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29973:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29984:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29969:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29969:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29916:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29916:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29916:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "30042:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30055:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30066:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30051:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30051:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29998:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29998:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29998:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "30124:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30137:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30148:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30133:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30133:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30080:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "30080:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30080:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30173:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30184:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30169:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30169:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "30194:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30200:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30190:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30190:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30162:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "30162:49:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30162:49:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30220:84:13",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "30290:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "30299:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30228:61:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "30228:76:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30220:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29728:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "29740:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "29748:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "29756:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "29764:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "29772:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29783:4:13",
														"type": ""
													}
												],
												"src": "29560:751:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30379:79:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30389:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "30404:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30398:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "30398:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "30389:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "30446:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "30420:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "30420:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30420:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "30357:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "30365:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30373:5:13",
														"type": ""
													}
												],
												"src": "30317:141:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30540:273:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30586:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "30588:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30588:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30588:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "30561:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30570:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30557:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30557:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30582:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "30553:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "30553:32:13"
															},
															"nodeType": "YulIf",
															"src": "30550:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "30679:127:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "30694:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30708:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "30698:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "30723:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "30768:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "30779:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "30764:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30764:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "30788:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "30733:30:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30733:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "30723:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30510:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "30521:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "30533:6:13",
														"type": ""
													}
												],
												"src": "30464:349:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31147:725:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31157:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "31169:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31180:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31165:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31165:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31157:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "31238:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31251:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31262:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31247:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31247:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31194:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31194:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31194:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "31319:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31332:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31343:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31328:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31328:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31275:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31275:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31275:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31368:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31379:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31364:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31364:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "31388:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31394:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31384:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31384:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31357:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31357:48:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31357:48:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31414:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "31516:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "31525:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31422:93:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31422:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31414:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31551:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31562:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31547:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31547:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "31571:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31577:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31567:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31567:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31540:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31540:48:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31540:48:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31597:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "31699:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "31708:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31605:93:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31605:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31597:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31734:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31745:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31730:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31730:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "31755:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31761:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31751:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31751:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31723:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31723:49:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31723:49:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31781:84:13",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "31851:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "31860:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31789:61:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31789:76:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31781:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "31087:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "31099:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "31107:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "31115:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "31123:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "31131:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "31142:4:13",
														"type": ""
													}
												],
												"src": "30819:1053:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100e95760003560e01c8063715018a61161008c578063a22cb46511610066578063a22cb46514610246578063e985e9c514610262578063f242432a14610292578063f2fde38b146102ae576100e9565b8063715018a614610202578063731133e91461020c5780638da5cb5b14610228576100e9565b80630e89341c116100c85780630e89341c1461016a5780631f7fdffa1461019a5780632eb2c2d6146101b65780634e1273f4146101d2576100e9565b8062fdd58e146100ee57806301ffc9a71461011e57806302fe53051461014e575b600080fd5b610108600480360381019061010391906117db565b6102ca565b604051610115919061182a565b60405180910390f35b6101386004803603810190610133919061189d565b610324565b60405161014591906118e5565b60405180910390f35b61016860048036038101906101639190611a46565b610406565b005b610184600480360381019061017f9190611a8f565b61041a565b6040516101919190611b3b565b60405180910390f35b6101b460048036038101906101af9190611cc6565b6104ae565b005b6101d060048036038101906101cb9190611d81565b6104c8565b005b6101ec60048036038101906101e79190611f13565b610570565b6040516101f99190612049565b60405180910390f35b61020a61067f565b005b6102266004803603810190610221919061206b565b610693565b005b6102306106ad565b60405161023d91906120fd565b60405180910390f35b610260600480360381019061025b9190612144565b6106d7565b005b61027c60048036038101906102779190612184565b6106ed565b60405161028991906118e5565b60405180910390f35b6102ac60048036038101906102a791906121c4565b610781565b005b6102c860048036038101906102c3919061225b565b610829565b005b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103ef57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103ff57506103fe826108af565b5b9050919050565b61040e610919565b610417816109a0565b50565b606060028054610429906122b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610455906122b7565b80156104a25780601f10610477576101008083540402835291602001916104a2565b820191906000526020600020905b81548152906001019060200180831161048557829003601f168201915b50505050509050919050565b6104b6610919565b6104c2848484846109b3565b50505050565b60006104d2610a39565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610517575061051586826106ed565b155b1561055b5780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016105529291906122e8565b60405180910390fd5b6105688686868686610a41565b505050505050565b606081518351146105bc57815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016105b3929190612311565b60405180910390fd5b6000835167ffffffffffffffff8111156105d9576105d861191b565b5b6040519080825280602002602001820160405280156106075781602001602082028036833780820191505090505b50905060005b84518110156106745761064461062c8287610b3990919063ffffffff16565b61063f8387610b4d90919063ffffffff16565b6102ca565b8282815181106106575761065661233a565b5b6020026020010181815250508061066d90612398565b905061060d565b508091505092915050565b610687610919565b6106916000610b61565b565b61069b610919565b6106a784848484610c27565b50505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106e96106e2610a39565b8383610cc0565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600061078b610a39565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156107d057506107ce86826106ed565b155b156108145780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161080b9291906122e8565b60405180910390fd5b6108218686868686610e30565b505050505050565b610831610919565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108a35760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161089a91906120fd565b60405180910390fd5b6108ac81610b61565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610921610a39565b73ffffffffffffffffffffffffffffffffffffffff1661093f6106ad565b73ffffffffffffffffffffffffffffffffffffffff161461099e57610962610a39565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161099591906120fd565b60405180910390fd5b565b80600290816109af919061258c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a255760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610a1c91906120fd565b60405180910390fd5b610a33600085858585610f3b565b50505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ab35760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610aaa91906120fd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610b255760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610b1c91906120fd565b60405180910390fd5b610b328585858585610f3b565b5050505050565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c995760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610c9091906120fd565b60405180910390fd5b600080610ca68585610fed565b91509150610cb8600087848487610f3b565b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d325760006040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610d2991906120fd565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e2391906118e5565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ea25760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610e9991906120fd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610f145760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610f0b91906120fd565b60405180910390fd5b600080610f218585610fed565b91509150610f328787848487610f3b565b50505050505050565b610f478585858561101d565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610fe6576000610f85610a39565b90506001845103610fd5576000610fa6600086610b4d90919063ffffffff16565b90506000610fbe600086610b4d90919063ffffffff16565b9050610fce8389898585896113cb565b5050610fe4565b610fe381878787878761157f565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b805182511461106757815181516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161105e929190612311565b60405180910390fd5b6000611071610a39565b905060005b83518110156112865760006110948286610b4d90919063ffffffff16565b905060006110ab8386610b4d90919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146111d857600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561118057888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401611177949392919061265e565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614611273578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461126b91906126a3565b925050819055505b50508061127f90612398565b9050611076565b5060018351036113455760006112a6600085610b4d90919063ffffffff16565b905060006112be600085610b4d90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051611336929190612311565b60405180910390a450506113c4565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516113bb9291906126d7565b60405180910390a45b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115611577578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161142c959493929190612763565b6020604051808303816000875af192505050801561146857506040513d601f19601f8201168201806040525081019061146591906127d2565b60015b6114ec573d8060008114611498576040519150601f19603f3d011682016040523d82523d6000602084013e61149d565b606091505b5060008151036114e457846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114db91906120fd565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461157557846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161156c91906120fd565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b111561172b578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016115e09594939291906127ff565b6020604051808303816000875af192505050801561161c57506040513d601f19601f8201168201806040525081019061161991906127d2565b60015b6116a0573d806000811461164c576040519150601f19603f3d011682016040523d82523d6000602084013e611651565b606091505b50600081510361169857846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161168f91906120fd565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461172957846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161172091906120fd565b60405180910390fd5b505b505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061177282611747565b9050919050565b61178281611767565b811461178d57600080fd5b50565b60008135905061179f81611779565b92915050565b6000819050919050565b6117b8816117a5565b81146117c357600080fd5b50565b6000813590506117d5816117af565b92915050565b600080604083850312156117f2576117f161173d565b5b600061180085828601611790565b9250506020611811858286016117c6565b9150509250929050565b611824816117a5565b82525050565b600060208201905061183f600083018461181b565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61187a81611845565b811461188557600080fd5b50565b60008135905061189781611871565b92915050565b6000602082840312156118b3576118b261173d565b5b60006118c184828501611888565b91505092915050565b60008115159050919050565b6118df816118ca565b82525050565b60006020820190506118fa60008301846118d6565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6119538261190a565b810181811067ffffffffffffffff821117156119725761197161191b565b5b80604052505050565b6000611985611733565b9050611991828261194a565b919050565b600067ffffffffffffffff8211156119b1576119b061191b565b5b6119ba8261190a565b9050602081019050919050565b82818337600083830152505050565b60006119e96119e484611996565b61197b565b905082815260208101848484011115611a0557611a04611905565b5b611a108482856119c7565b509392505050565b600082601f830112611a2d57611a2c611900565b5b8135611a3d8482602086016119d6565b91505092915050565b600060208284031215611a5c57611a5b61173d565b5b600082013567ffffffffffffffff811115611a7a57611a79611742565b5b611a8684828501611a18565b91505092915050565b600060208284031215611aa557611aa461173d565b5b6000611ab3848285016117c6565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611af6578082015181840152602081019050611adb565b60008484015250505050565b6000611b0d82611abc565b611b178185611ac7565b9350611b27818560208601611ad8565b611b308161190a565b840191505092915050565b60006020820190508181036000830152611b558184611b02565b905092915050565b600067ffffffffffffffff821115611b7857611b7761191b565b5b602082029050602081019050919050565b600080fd5b6000611ba1611b9c84611b5d565b61197b565b90508083825260208201905060208402830185811115611bc457611bc3611b89565b5b835b81811015611bed5780611bd988826117c6565b845260208401935050602081019050611bc6565b5050509392505050565b600082601f830112611c0c57611c0b611900565b5b8135611c1c848260208601611b8e565b91505092915050565b600067ffffffffffffffff821115611c4057611c3f61191b565b5b611c498261190a565b9050602081019050919050565b6000611c69611c6484611c25565b61197b565b905082815260208101848484011115611c8557611c84611905565b5b611c908482856119c7565b509392505050565b600082601f830112611cad57611cac611900565b5b8135611cbd848260208601611c56565b91505092915050565b60008060008060808587031215611ce057611cdf61173d565b5b6000611cee87828801611790565b945050602085013567ffffffffffffffff811115611d0f57611d0e611742565b5b611d1b87828801611bf7565b935050604085013567ffffffffffffffff811115611d3c57611d3b611742565b5b611d4887828801611bf7565b925050606085013567ffffffffffffffff811115611d6957611d68611742565b5b611d7587828801611c98565b91505092959194509250565b600080600080600060a08688031215611d9d57611d9c61173d565b5b6000611dab88828901611790565b9550506020611dbc88828901611790565b945050604086013567ffffffffffffffff811115611ddd57611ddc611742565b5b611de988828901611bf7565b935050606086013567ffffffffffffffff811115611e0a57611e09611742565b5b611e1688828901611bf7565b925050608086013567ffffffffffffffff811115611e3757611e36611742565b5b611e4388828901611c98565b9150509295509295909350565b600067ffffffffffffffff821115611e6b57611e6a61191b565b5b602082029050602081019050919050565b6000611e8f611e8a84611e50565b61197b565b90508083825260208201905060208402830185811115611eb257611eb1611b89565b5b835b81811015611edb5780611ec78882611790565b845260208401935050602081019050611eb4565b5050509392505050565b600082601f830112611efa57611ef9611900565b5b8135611f0a848260208601611e7c565b91505092915050565b60008060408385031215611f2a57611f2961173d565b5b600083013567ffffffffffffffff811115611f4857611f47611742565b5b611f5485828601611ee5565b925050602083013567ffffffffffffffff811115611f7557611f74611742565b5b611f8185828601611bf7565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611fc0816117a5565b82525050565b6000611fd28383611fb7565b60208301905092915050565b6000602082019050919050565b6000611ff682611f8b565b6120008185611f96565b935061200b83611fa7565b8060005b8381101561203c5781516120238882611fc6565b975061202e83611fde565b92505060018101905061200f565b5085935050505092915050565b600060208201905081810360008301526120638184611feb565b905092915050565b600080600080608085870312156120855761208461173d565b5b600061209387828801611790565b94505060206120a4878288016117c6565b93505060406120b5878288016117c6565b925050606085013567ffffffffffffffff8111156120d6576120d5611742565b5b6120e287828801611c98565b91505092959194509250565b6120f781611767565b82525050565b600060208201905061211260008301846120ee565b92915050565b612121816118ca565b811461212c57600080fd5b50565b60008135905061213e81612118565b92915050565b6000806040838503121561215b5761215a61173d565b5b600061216985828601611790565b925050602061217a8582860161212f565b9150509250929050565b6000806040838503121561219b5761219a61173d565b5b60006121a985828601611790565b92505060206121ba85828601611790565b9150509250929050565b600080600080600060a086880312156121e0576121df61173d565b5b60006121ee88828901611790565b95505060206121ff88828901611790565b9450506040612210888289016117c6565b9350506060612221888289016117c6565b925050608086013567ffffffffffffffff81111561224257612241611742565b5b61224e88828901611c98565b9150509295509295909350565b6000602082840312156122715761227061173d565b5b600061227f84828501611790565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806122cf57607f821691505b6020821081036122e2576122e1612288565b5b50919050565b60006040820190506122fd60008301856120ee565b61230a60208301846120ee565b9392505050565b6000604082019050612326600083018561181b565b612333602083018461181b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006123a3826117a5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123d5576123d4612369565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026124427fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612405565b61244c8683612405565b95508019841693508086168417925050509392505050565b6000819050919050565b600061248961248461247f846117a5565b612464565b6117a5565b9050919050565b6000819050919050565b6124a38361246e565b6124b76124af82612490565b848454612412565b825550505050565b600090565b6124cc6124bf565b6124d781848461249a565b505050565b5b818110156124fb576124f06000826124c4565b6001810190506124dd565b5050565b601f82111561254057612511816123e0565b61251a846123f5565b81016020851015612529578190505b61253d612535856123f5565b8301826124dc565b50505b505050565b600082821c905092915050565b600061256360001984600802612545565b1980831691505092915050565b600061257c8383612552565b9150826002028217905092915050565b61259582611abc565b67ffffffffffffffff8111156125ae576125ad61191b565b5b6125b882546122b7565b6125c38282856124ff565b600060209050601f8311600181146125f657600084156125e4578287015190505b6125ee8582612570565b865550612656565b601f198416612604866123e0565b60005b8281101561262c57848901518255600182019150602085019450602081019050612607565b868310156126495784890151612645601f891682612552565b8355505b6001600288020188555050505b505050505050565b600060808201905061267360008301876120ee565b612680602083018661181b565b61268d604083018561181b565b61269a606083018461181b565b95945050505050565b60006126ae826117a5565b91506126b9836117a5565b92508282019050808211156126d1576126d0612369565b5b92915050565b600060408201905081810360008301526126f18185611feb565b905081810360208301526127058184611feb565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60006127358261270e565b61273f8185612719565b935061274f818560208601611ad8565b6127588161190a565b840191505092915050565b600060a08201905061277860008301886120ee565b61278560208301876120ee565b612792604083018661181b565b61279f606083018561181b565b81810360808301526127b1818461272a565b90509695505050505050565b6000815190506127cc81611871565b92915050565b6000602082840312156127e8576127e761173d565b5b60006127f6848285016127bd565b91505092915050565b600060a08201905061281460008301886120ee565b61282160208301876120ee565b81810360408301526128338186611feb565b905081810360608301526128478185611feb565b9050818103608083015261285b818461272a565b9050969550505050505056fea26469706673582212203240a21d2a5db3545717108610678671a5b832785764259d22f3dfd78a4f144464736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2AE JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x228 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1D2 JUMPI PUSH2 0xE9 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x14E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x182A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST PUSH2 0x324 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1A46 JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x1CC6 JUMP JUMPDEST PUSH2 0x4AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x4C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x1F13 JUMP JUMPDEST PUSH2 0x570 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x2049 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH2 0x67F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x230 PUSH2 0x6AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x2144 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x2184 JUMP JUMPDEST PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x21C4 JUMP JUMPDEST PUSH2 0x781 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x225B JUMP JUMPDEST PUSH2 0x829 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3EF JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3FF JUMPI POP PUSH2 0x3FE DUP3 PUSH2 0x8AF JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40E PUSH2 0x919 JUMP JUMPDEST PUSH2 0x417 DUP2 PUSH2 0x9A0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x429 SWAP1 PUSH2 0x22B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x455 SWAP1 PUSH2 0x22B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x477 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x485 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B6 PUSH2 0x919 JUMP JUMPDEST PUSH2 0x4C2 DUP5 DUP5 DUP5 DUP5 PUSH2 0x9B3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D2 PUSH2 0xA39 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x517 JUMPI POP PUSH2 0x515 DUP7 DUP3 PUSH2 0x6ED JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x55B JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x552 SWAP3 SWAP2 SWAP1 PUSH2 0x22E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x568 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xA41 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5BC JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B3 SWAP3 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5D9 JUMPI PUSH2 0x5D8 PUSH2 0x191B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x607 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x674 JUMPI PUSH2 0x644 PUSH2 0x62C DUP3 DUP8 PUSH2 0xB39 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x63F DUP4 DUP8 PUSH2 0xB4D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2CA JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x657 JUMPI PUSH2 0x656 PUSH2 0x233A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x66D SWAP1 PUSH2 0x2398 JUMP JUMPDEST SWAP1 POP PUSH2 0x60D JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x687 PUSH2 0x919 JUMP JUMPDEST PUSH2 0x691 PUSH1 0x0 PUSH2 0xB61 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x69B PUSH2 0x919 JUMP JUMPDEST PUSH2 0x6A7 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC27 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6E9 PUSH2 0x6E2 PUSH2 0xA39 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xCC0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78B PUSH2 0xA39 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x7D0 JUMPI POP PUSH2 0x7CE DUP7 DUP3 PUSH2 0x6ED JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x814 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80B SWAP3 SWAP2 SWAP1 PUSH2 0x22E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x821 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xE30 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x831 PUSH2 0x919 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89A SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8AC DUP2 PUSH2 0xB61 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x921 PUSH2 0xA39 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x93F PUSH2 0x6AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x99E JUMPI PUSH2 0x962 PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x995 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0x9AF SWAP2 SWAP1 PUSH2 0x258C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA25 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1C SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA33 PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 PUSH2 0xF3B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAB3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAA SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB25 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1C SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB32 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xF3B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC99 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC90 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCA6 DUP6 DUP6 PUSH2 0xFED JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xCB8 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0xF3B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD32 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD29 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE23 SWAP2 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEA2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE99 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF14 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0B SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF21 DUP6 DUP6 PUSH2 0xFED JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xF32 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xF3B JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF47 DUP6 DUP6 DUP6 DUP6 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFE6 JUMPI PUSH1 0x0 PUSH2 0xF85 PUSH2 0xA39 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0xFD5 JUMPI PUSH1 0x0 PUSH2 0xFA6 PUSH1 0x0 DUP7 PUSH2 0xB4D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFBE PUSH1 0x0 DUP7 PUSH2 0xB4D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xFCE DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x13CB JUMP JUMPDEST POP POP PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0xFE3 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x157F JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1067 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105E SWAP3 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1071 PUSH2 0xA39 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1286 JUMPI PUSH1 0x0 PUSH2 0x1094 DUP3 DUP7 PUSH2 0xB4D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10AB DUP4 DUP7 PUSH2 0xB4D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11D8 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1180 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1177 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x265E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1273 JUMPI DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x126B SWAP2 SWAP1 PUSH2 0x26A3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x127F SWAP1 PUSH2 0x2398 JUMP JUMPDEST SWAP1 POP PUSH2 0x1076 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x1345 JUMPI PUSH1 0x0 PUSH2 0x12A6 PUSH1 0x0 DUP6 PUSH2 0xB4D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12BE PUSH1 0x0 DUP6 PUSH2 0xB4D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1336 SWAP3 SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x13C4 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x13BB SWAP3 SWAP2 SWAP1 PUSH2 0x26D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1577 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2763 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1468 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1465 SWAP2 SWAP1 PUSH2 0x27D2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x14EC JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1498 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x149D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x14E4 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DB SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1575 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x156C SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x172B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27FF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x161C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1619 SWAP2 SWAP1 PUSH2 0x27D2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x16A0 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x164C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1651 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1698 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168F SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1729 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1720 SWAP2 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1772 DUP3 PUSH2 0x1747 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1782 DUP2 PUSH2 0x1767 JUMP JUMPDEST DUP2 EQ PUSH2 0x178D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x179F DUP2 PUSH2 0x1779 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17B8 DUP2 PUSH2 0x17A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x17C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17D5 DUP2 PUSH2 0x17AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17F2 JUMPI PUSH2 0x17F1 PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1800 DUP6 DUP3 DUP7 ADD PUSH2 0x1790 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1811 DUP6 DUP3 DUP7 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1824 DUP2 PUSH2 0x17A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x183F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x181B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x187A DUP2 PUSH2 0x1845 JUMP JUMPDEST DUP2 EQ PUSH2 0x1885 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1897 DUP2 PUSH2 0x1871 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B3 JUMPI PUSH2 0x18B2 PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18C1 DUP5 DUP3 DUP6 ADD PUSH2 0x1888 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18DF DUP2 PUSH2 0x18CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18FA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1953 DUP3 PUSH2 0x190A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1972 JUMPI PUSH2 0x1971 PUSH2 0x191B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1985 PUSH2 0x1733 JUMP JUMPDEST SWAP1 POP PUSH2 0x1991 DUP3 DUP3 PUSH2 0x194A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x19B1 JUMPI PUSH2 0x19B0 PUSH2 0x191B JUMP JUMPDEST JUMPDEST PUSH2 0x19BA DUP3 PUSH2 0x190A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E9 PUSH2 0x19E4 DUP5 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0x197B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A05 JUMPI PUSH2 0x1A04 PUSH2 0x1905 JUMP JUMPDEST JUMPDEST PUSH2 0x1A10 DUP5 DUP3 DUP6 PUSH2 0x19C7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A2D JUMPI PUSH2 0x1A2C PUSH2 0x1900 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A3D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x19D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A5C JUMPI PUSH2 0x1A5B PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A7A JUMPI PUSH2 0x1A79 PUSH2 0x1742 JUMP JUMPDEST JUMPDEST PUSH2 0x1A86 DUP5 DUP3 DUP6 ADD PUSH2 0x1A18 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AA5 JUMPI PUSH2 0x1AA4 PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AB3 DUP5 DUP3 DUP6 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1ADB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B0D DUP3 PUSH2 0x1ABC JUMP JUMPDEST PUSH2 0x1B17 DUP2 DUP6 PUSH2 0x1AC7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B27 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0x1B30 DUP2 PUSH2 0x190A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B55 DUP2 DUP5 PUSH2 0x1B02 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B78 JUMPI PUSH2 0x1B77 PUSH2 0x191B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BA1 PUSH2 0x1B9C DUP5 PUSH2 0x1B5D JUMP JUMPDEST PUSH2 0x197B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1BC4 JUMPI PUSH2 0x1BC3 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1BED JUMPI DUP1 PUSH2 0x1BD9 DUP9 DUP3 PUSH2 0x17C6 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BC6 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C0C JUMPI PUSH2 0x1C0B PUSH2 0x1900 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C1C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1B8E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C40 JUMPI PUSH2 0x1C3F PUSH2 0x191B JUMP JUMPDEST JUMPDEST PUSH2 0x1C49 DUP3 PUSH2 0x190A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C69 PUSH2 0x1C64 DUP5 PUSH2 0x1C25 JUMP JUMPDEST PUSH2 0x197B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C85 JUMPI PUSH2 0x1C84 PUSH2 0x1905 JUMP JUMPDEST JUMPDEST PUSH2 0x1C90 DUP5 DUP3 DUP6 PUSH2 0x19C7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CAD JUMPI PUSH2 0x1CAC PUSH2 0x1900 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CBD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C56 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CE0 JUMPI PUSH2 0x1CDF PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CEE DUP8 DUP3 DUP9 ADD PUSH2 0x1790 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D0F JUMPI PUSH2 0x1D0E PUSH2 0x1742 JUMP JUMPDEST JUMPDEST PUSH2 0x1D1B DUP8 DUP3 DUP9 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D3C JUMPI PUSH2 0x1D3B PUSH2 0x1742 JUMP JUMPDEST JUMPDEST PUSH2 0x1D48 DUP8 DUP3 DUP9 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D69 JUMPI PUSH2 0x1D68 PUSH2 0x1742 JUMP JUMPDEST JUMPDEST PUSH2 0x1D75 DUP8 DUP3 DUP9 ADD PUSH2 0x1C98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D9D JUMPI PUSH2 0x1D9C PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DAB DUP9 DUP3 DUP10 ADD PUSH2 0x1790 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1DBC DUP9 DUP3 DUP10 ADD PUSH2 0x1790 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DDD JUMPI PUSH2 0x1DDC PUSH2 0x1742 JUMP JUMPDEST JUMPDEST PUSH2 0x1DE9 DUP9 DUP3 DUP10 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E0A JUMPI PUSH2 0x1E09 PUSH2 0x1742 JUMP JUMPDEST JUMPDEST PUSH2 0x1E16 DUP9 DUP3 DUP10 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E37 JUMPI PUSH2 0x1E36 PUSH2 0x1742 JUMP JUMPDEST JUMPDEST PUSH2 0x1E43 DUP9 DUP3 DUP10 ADD PUSH2 0x1C98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E6B JUMPI PUSH2 0x1E6A PUSH2 0x191B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E8F PUSH2 0x1E8A DUP5 PUSH2 0x1E50 JUMP JUMPDEST PUSH2 0x197B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1EB2 JUMPI PUSH2 0x1EB1 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EDB JUMPI DUP1 PUSH2 0x1EC7 DUP9 DUP3 PUSH2 0x1790 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EB4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EFA JUMPI PUSH2 0x1EF9 PUSH2 0x1900 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F0A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F2A JUMPI PUSH2 0x1F29 PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F48 JUMPI PUSH2 0x1F47 PUSH2 0x1742 JUMP JUMPDEST JUMPDEST PUSH2 0x1F54 DUP6 DUP3 DUP7 ADD PUSH2 0x1EE5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F75 JUMPI PUSH2 0x1F74 PUSH2 0x1742 JUMP JUMPDEST JUMPDEST PUSH2 0x1F81 DUP6 DUP3 DUP7 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FC0 DUP2 PUSH2 0x17A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD2 DUP4 DUP4 PUSH2 0x1FB7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF6 DUP3 PUSH2 0x1F8B JUMP JUMPDEST PUSH2 0x2000 DUP2 DUP6 PUSH2 0x1F96 JUMP JUMPDEST SWAP4 POP PUSH2 0x200B DUP4 PUSH2 0x1FA7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x203C JUMPI DUP2 MLOAD PUSH2 0x2023 DUP9 DUP3 PUSH2 0x1FC6 JUMP JUMPDEST SWAP8 POP PUSH2 0x202E DUP4 PUSH2 0x1FDE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x200F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2063 DUP2 DUP5 PUSH2 0x1FEB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2085 JUMPI PUSH2 0x2084 PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2093 DUP8 DUP3 DUP9 ADD PUSH2 0x1790 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x20A4 DUP8 DUP3 DUP9 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x20B5 DUP8 DUP3 DUP9 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20D6 JUMPI PUSH2 0x20D5 PUSH2 0x1742 JUMP JUMPDEST JUMPDEST PUSH2 0x20E2 DUP8 DUP3 DUP9 ADD PUSH2 0x1C98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x20F7 DUP2 PUSH2 0x1767 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2112 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2121 DUP2 PUSH2 0x18CA JUMP JUMPDEST DUP2 EQ PUSH2 0x212C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x213E DUP2 PUSH2 0x2118 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x215B JUMPI PUSH2 0x215A PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2169 DUP6 DUP3 DUP7 ADD PUSH2 0x1790 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x217A DUP6 DUP3 DUP7 ADD PUSH2 0x212F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x219B JUMPI PUSH2 0x219A PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21A9 DUP6 DUP3 DUP7 ADD PUSH2 0x1790 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21BA DUP6 DUP3 DUP7 ADD PUSH2 0x1790 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x21E0 JUMPI PUSH2 0x21DF PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21EE DUP9 DUP3 DUP10 ADD PUSH2 0x1790 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x21FF DUP9 DUP3 DUP10 ADD PUSH2 0x1790 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2210 DUP9 DUP3 DUP10 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2221 DUP9 DUP3 DUP10 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2242 JUMPI PUSH2 0x2241 PUSH2 0x1742 JUMP JUMPDEST JUMPDEST PUSH2 0x224E DUP9 DUP3 DUP10 ADD PUSH2 0x1C98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2271 JUMPI PUSH2 0x2270 PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x227F DUP5 DUP3 DUP6 ADD PUSH2 0x1790 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x22CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x22E2 JUMPI PUSH2 0x22E1 PUSH2 0x2288 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22FD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x20EE JUMP JUMPDEST PUSH2 0x230A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20EE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2326 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x2333 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x181B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23A3 DUP3 PUSH2 0x17A5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x23D5 JUMPI PUSH2 0x23D4 PUSH2 0x2369 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2442 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2405 JUMP JUMPDEST PUSH2 0x244C DUP7 DUP4 PUSH2 0x2405 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2489 PUSH2 0x2484 PUSH2 0x247F DUP5 PUSH2 0x17A5 JUMP JUMPDEST PUSH2 0x2464 JUMP JUMPDEST PUSH2 0x17A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24A3 DUP4 PUSH2 0x246E JUMP JUMPDEST PUSH2 0x24B7 PUSH2 0x24AF DUP3 PUSH2 0x2490 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2412 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x24CC PUSH2 0x24BF JUMP JUMPDEST PUSH2 0x24D7 DUP2 DUP5 DUP5 PUSH2 0x249A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x24FB JUMPI PUSH2 0x24F0 PUSH1 0x0 DUP3 PUSH2 0x24C4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x24DD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2540 JUMPI PUSH2 0x2511 DUP2 PUSH2 0x23E0 JUMP JUMPDEST PUSH2 0x251A DUP5 PUSH2 0x23F5 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2529 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x253D PUSH2 0x2535 DUP6 PUSH2 0x23F5 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x24DC JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2563 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2545 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x257C DUP4 DUP4 PUSH2 0x2552 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2595 DUP3 PUSH2 0x1ABC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25AE JUMPI PUSH2 0x25AD PUSH2 0x191B JUMP JUMPDEST JUMPDEST PUSH2 0x25B8 DUP3 SLOAD PUSH2 0x22B7 JUMP JUMPDEST PUSH2 0x25C3 DUP3 DUP3 DUP6 PUSH2 0x24FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x25F6 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x25E4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x25EE DUP6 DUP3 PUSH2 0x2570 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2656 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2604 DUP7 PUSH2 0x23E0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x262C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2607 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2649 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2645 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2552 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2673 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x20EE JUMP JUMPDEST PUSH2 0x2680 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x268D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x269A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x181B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26AE DUP3 PUSH2 0x17A5 JUMP JUMPDEST SWAP2 POP PUSH2 0x26B9 DUP4 PUSH2 0x17A5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x26D1 JUMPI PUSH2 0x26D0 PUSH2 0x2369 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26F1 DUP2 DUP6 PUSH2 0x1FEB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2705 DUP2 DUP5 PUSH2 0x1FEB JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2735 DUP3 PUSH2 0x270E JUMP JUMPDEST PUSH2 0x273F DUP2 DUP6 PUSH2 0x2719 JUMP JUMPDEST SWAP4 POP PUSH2 0x274F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0x2758 DUP2 PUSH2 0x190A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2778 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x20EE JUMP JUMPDEST PUSH2 0x2785 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x20EE JUMP JUMPDEST PUSH2 0x2792 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x279F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x181B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x27B1 DUP2 DUP5 PUSH2 0x272A JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x27CC DUP2 PUSH2 0x1871 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27E8 JUMPI PUSH2 0x27E7 PUSH2 0x173D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27F6 DUP5 DUP3 DUP6 ADD PUSH2 0x27BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2814 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x20EE JUMP JUMPDEST PUSH2 0x2821 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x20EE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2833 DUP2 DUP7 PUSH2 0x1FEB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2847 DUP2 DUP6 PUSH2 0x1FEB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x285B DUP2 DUP5 PUSH2 0x272A JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN BLOCKHASH LOG2 SAR 0x2A 0x5D 0xB3 SLOAD JUMPI OR LT DUP7 LT PUSH8 0x8671A5B832785764 0x25 SWAP14 0x22 RETURN 0xDF 0xD7 DUP11 0x4F EQ PREVRANDAO PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "227:677:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2246:132:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1379:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;436:89:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2083:103:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;710:191:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4013:429:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2535:552;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2292:101:0;;;:::i;:::-;;533:169:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1637:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:144:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3366:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3590:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2542:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2246:132:2;2323:7;2349:9;:13;2359:2;2349:13;;;;;;;;;;;:22;2363:7;2349:22;;;;;;;;;;;;;;;;2342:29;;2246:132;;;;:::o;1379:305::-;1481:4;1531:26;1516:41;;;:11;:41;;;;:109;;;;1588:37;1573:52;;;:11;:52;;;;1516:109;:161;;;;1641:36;1665:11;1641:23;:36::i;:::-;1516:161;1497:180;;1379:305;;;:::o;436:89:12:-;1530:13:0;:11;:13::i;:::-;502:15:12::1;510:6;502:7;:15::i;:::-;436:89:::0;:::o;2083:103:2:-;2143:13;2175:4;2168:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2083:103;;;:::o;710:191:12:-;1530:13:0;:11;:13::i;:::-;859:34:12::1;870:2;874:3;879:7;888:4;859:10;:34::i;:::-;710:191:::0;;;;:::o;4013:429:2:-;4207:14;4224:12;:10;:12::i;:::-;4207:29;;4258:6;4250:14;;:4;:14;;;;:49;;;;;4269:30;4286:4;4292:6;4269:16;:30::i;:::-;4268:31;4250:49;4246:129;;;4351:6;4359:4;4322:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4246:129;4384:51;4407:4;4413:2;4417:3;4422:6;4430:4;4384:22;:51::i;:::-;4197:245;4013:429;;;;;:::o;2535:552::-;2659:16;2710:3;:10;2691:8;:15;:29;2687:121;;2769:3;:10;2781:8;:15;2743:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2687:121;2818:30;2865:8;:15;2851:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2818:63;;2897:9;2892:158;2916:8;:15;2912:1;:19;2892:158;;;2971:68;2981:30;3009:1;2981:8;:27;;:30;;;;:::i;:::-;3013:25;3036:1;3013:3;:22;;:25;;;;:::i;:::-;2971:9;:68::i;:::-;2952:13;2966:1;2952:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2933:3;;;;:::i;:::-;;;2892:158;;;;3067:13;3060:20;;;2535:552;;;;:::o;2292:101:0:-;1530:13;:11;:13::i;:::-;2356:30:::1;2383:1;2356:18;:30::i;:::-;2292:101::o:0;533:169:12:-;1530:13:0;:11;:13::i;:::-;662:32:12::1;668:7;677:2;681:6;689:4;662:5;:32::i;:::-;533:169:::0;;;;:::o;1637:85:0:-;1683:7;1709:6;;;;;;;;;;;1702:13;;1637:85;:::o;3155:144:2:-;3240:52;3259:12;:10;:12::i;:::-;3273:8;3283;3240:18;:52::i;:::-;3155:144;;:::o;3366:157::-;3456:4;3479:18;:27;3498:7;3479:27;;;;;;;;;;;;;;;:37;3507:8;3479:37;;;;;;;;;;;;;;;;;;;;;;;;;3472:44;;3366:157;;;;:::o;3590:351::-;3713:14;3730:12;:10;:12::i;:::-;3713:29;;3764:6;3756:14;;:4;:14;;;;:49;;;;;3775:30;3792:4;3798:6;3775:16;:30::i;:::-;3774:31;3756:49;3752:129;;;3857:6;3865:4;3828:42;;;;;;;;;;;;:::i;:::-;;;;;;;;3752:129;3890:44;3908:4;3914:2;3918;3922:5;3929:4;3890:17;:44::i;:::-;3703:238;3590:351;;;;;:::o;2542:215:0:-;1530:13;:11;:13::i;:::-;2646:1:::1;2626:22;;:8;:22;;::::0;2622:91:::1;;2699:1;2671:31;;;;;;;;;;;:::i;:::-;;;;;;;;2622:91;2722:28;2741:8;2722:18;:28::i;:::-;2542:215:::0;:::o;761:146:9:-;837:4;875:25;860:40;;;:11;:40;;;;853:47;;761:146;;;:::o;1795:162:0:-;1865:12;:10;:12::i;:::-;1854:23;;:7;:5;:7::i;:::-;:23;;;1850:101;;1927:12;:10;:12::i;:::-;1900:40;;;;;;;;;;;:::i;:::-;;;;;;;;1850:101;1795:162::o;10281:86:2:-;10354:6;10347:4;:13;;;;;;:::i;:::-;;10281:86;:::o;11522:282::-;11657:1;11643:16;;:2;:16;;;11639:88;;11713:1;11682:34;;;;;;;;;;;:::i;:::-;;;;;;;;11639:88;11736:61;11771:1;11775:2;11779:3;11784:6;11792:4;11736:26;:61::i;:::-;11522:282;;;;:::o;655:96:7:-;708:7;734:10;727:17;;655:96;:::o;9014:445:2:-;9221:1;9207:16;;:2;:16;;;9203:88;;9277:1;9246:34;;;;;;;;;;;:::i;:::-;;;;;;;;9203:88;9320:1;9304:18;;:4;:18;;;9300:88;;9374:1;9345:32;;;;;;;;;;;:::i;:::-;;;;;;;;9300:88;9397:55;9424:4;9430:2;9434:3;9439:6;9447:4;9397:26;:55::i;:::-;9014:445;;;;;:::o;4602:197:6:-;4688:11;4776:4;4771:3;4767:14;4760:4;4755:3;4751:14;4747:35;4741:42;4734:49;;4602:197;;;;:::o;4203:::-;4289:11;4377:4;4372:3;4368:14;4361:4;4356:3;4352:14;4348:35;4342:42;4335:49;;4203:197;;;;:::o;2911:187:0:-;2984:16;3003:6;;;;;;;;;;;2984:25;;3028:8;3019:6;;:17;;;;;;;;;;;;;;;;;;3082:8;3051:40;;3072:8;3051:40;;;;;;;;;;;;2974:124;2911:187;:::o;10745:346:2:-;10855:1;10841:16;;:2;:16;;;10837:88;;10911:1;10880:34;;;;;;;;;;;:::i;:::-;;;;;;;;10837:88;10935:20;10957:23;10984:29;11003:2;11007:5;10984:18;:29::i;:::-;10934:79;;;;11023:61;11058:1;11062:2;11066:3;11071:6;11079:4;11023:26;:61::i;:::-;10827:264;;10745:346;;;;:::o;13267:315::-;13394:1;13374:22;;:8;:22;;;13370:94;;13450:1;13419:34;;;;;;;;;;;:::i;:::-;;;;;;;;13370:94;13511:8;13473:18;:25;13492:5;13473:25;;;;;;;;;;;;;;;:35;13499:8;13473:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13556:8;13534:41;;13549:5;13534:41;;;13566:8;13534:41;;;;;;:::i;:::-;;;;;;;;13267:315;;;:::o;8150:463::-;8286:1;8272:16;;:2;:16;;;8268:88;;8342:1;8311:34;;;;;;;;;;;:::i;:::-;;;;;;;;8268:88;8385:1;8369:18;;:4;:18;;;8365:88;;8439:1;8410:32;;;;;;;;;;;:::i;:::-;;;;;;;;8365:88;8463:20;8485:23;8512:29;8531:2;8535:5;8512:18;:29::i;:::-;8462:79;;;;8551:55;8578:4;8584:2;8588:3;8593:6;8601:4;8551:26;:55::i;:::-;8258:355;;8150:463;;;;;:::o;7003:690::-;7204:30;7212:4;7218:2;7222:3;7227:6;7204:7;:30::i;:::-;7262:1;7248:16;;:2;:16;;;7244:443;;7280:16;7299:12;:10;:12::i;:::-;7280:31;;7343:1;7329:3;:10;:15;7325:352;;7364:10;7377:25;7400:1;7377:3;:22;;:25;;;;:::i;:::-;7364:38;;7420:13;7436:28;7462:1;7436:6;:25;;:28;;;;:::i;:::-;7420:44;;7482:67;7513:8;7523:4;7529:2;7533;7537:5;7544:4;7482:30;:67::i;:::-;7346:218;;7325:352;;;7588:74;7624:8;7634:4;7640:2;7644:3;7649:6;7657:4;7588:35;:74::i;:::-;7325:352;7266:421;7244:443;7003:690;;;;;:::o;16079:849::-;16187:23;16212;16373:4;16367:11;16357:21;;16443:1;16435:6;16428:17;16581:8;16574:4;16566:6;16562:17;16555:35;16703:4;16695:6;16691:17;16681:27;;16736:1;16728:6;16721:17;16777:8;16770:4;16762:6;16758:17;16751:35;16906:4;16898:6;16894:17;16888:4;16881:31;16079:849;;;;;:::o;5143:1281::-;5278:6;:13;5264:3;:10;:27;5260:117;;5340:3;:10;5352:6;:13;5314:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5260:117;5387:16;5406:12;:10;:12::i;:::-;5387:31;;5434:9;5429:691;5453:3;:10;5449:1;:14;5429:691;;;5484:10;5497:25;5520:1;5497:3;:22;;:25;;;;:::i;:::-;5484:38;;5536:13;5552:28;5578:1;5552:6;:25;;:28;;;;:::i;:::-;5536:44;;5615:1;5599:18;;:4;:18;;;5595:420;;5637:19;5659:9;:13;5669:2;5659:13;;;;;;;;;;;:19;5673:4;5659:19;;;;;;;;;;;;;;;;5637:41;;5714:5;5700:11;:19;5696:129;;;5777:4;5783:11;5796:5;5803:2;5750:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5696:129;5977:5;5963:11;:19;5941:9;:13;5951:2;5941:13;;;;;;;;;;;:19;5955:4;5941:19;;;;;;;;;;;;;;;:41;;;;5619:396;5595:420;6047:1;6033:16;;:2;:16;;;6029:81;;6090:5;6069:9;:13;6079:2;6069:13;;;;;;;;;;;:17;6083:2;6069:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6029:81;5470:650;;5465:3;;;;:::i;:::-;;;5429:691;;;;6148:1;6134:3;:10;:15;6130:288;;6165:10;6178:25;6201:1;6178:3;:22;;:25;;;;:::i;:::-;6165:38;;6217:13;6233:28;6259:1;6233:6;:25;;:28;;;;:::i;:::-;6217:44;;6311:2;6280:45;;6305:4;6280:45;;6295:8;6280:45;;;6315:2;6319:5;6280:45;;;;;;;:::i;:::-;;;;;;;;6151:185;;6130:288;;;6391:2;6361:46;;6385:4;6361:46;;6375:8;6361:46;;;6395:3;6400:6;6361:46;;;;;;;:::i;:::-;;;;;;;;6130:288;5250:1174;5143:1281;;;;:::o;13760:974::-;13983:1;13966:2;:14;;;:18;13962:766;;;14021:2;14004:38;;;14043:8;14053:4;14059:2;14063:5;14070:4;14004:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14000:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14376:1;14359:6;:13;:18;14355:349;;14486:2;14463:26;;;;;;;;;;;:::i;:::-;;;;;;;;14355:349;14656:6;14650:13;14641:6;14637:2;14633:15;14626:38;14000:718;14136:43;;;14124:55;;;:8;:55;;;;14120:174;;14272:2;14249:26;;;;;;;;;;;:::i;:::-;;;;;;;;14120:174;14076:232;13962:766;13760:974;;;;;;:::o;14922:1041::-;15170:1;15153:2;:14;;;:18;15149:808;;;15208:2;15191:43;;;15235:8;15245:4;15251:3;15256:6;15264:4;15191:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15187:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15605:1;15588:6;:13;:18;15584:349;;15715:2;15692:26;;;;;;;;;;;:::i;:::-;;;;;;;;15584:349;15885:6;15879:13;15870:6;15866:2;15862:15;15855:38;15187:760;15360:48;;;15348:60;;;:8;:60;;;;15344:179;;15501:2;15478:26;;;;;;;;;;;:::i;:::-;;;;;;;;15344:179;15270:267;15149:808;14922:1041;;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:117::-;3322:1;3319;3312:12;3336:117;3445:1;3442;3435:12;3459:102;3500:6;3551:2;3547:7;3542:2;3535:5;3531:14;3527:28;3517:38;;3459:102;;;:::o;3567:180::-;3615:77;3612:1;3605:88;3712:4;3709:1;3702:15;3736:4;3733:1;3726:15;3753:281;3836:27;3858:4;3836:27;:::i;:::-;3828:6;3824:40;3966:6;3954:10;3951:22;3930:18;3918:10;3915:34;3912:62;3909:88;;;3977:18;;:::i;:::-;3909:88;4017:10;4013:2;4006:22;3796:238;3753:281;;:::o;4040:129::-;4074:6;4101:20;;:::i;:::-;4091:30;;4130:33;4158:4;4150:6;4130:33;:::i;:::-;4040:129;;;:::o;4175:308::-;4237:4;4327:18;4319:6;4316:30;4313:56;;;4349:18;;:::i;:::-;4313:56;4387:29;4409:6;4387:29;:::i;:::-;4379:37;;4471:4;4465;4461:15;4453:23;;4175:308;;;:::o;4489:146::-;4586:6;4581:3;4576;4563:30;4627:1;4618:6;4613:3;4609:16;4602:27;4489:146;;;:::o;4641:425::-;4719:5;4744:66;4760:49;4802:6;4760:49;:::i;:::-;4744:66;:::i;:::-;4735:75;;4833:6;4826:5;4819:21;4871:4;4864:5;4860:16;4909:3;4900:6;4895:3;4891:16;4888:25;4885:112;;;4916:79;;:::i;:::-;4885:112;5006:54;5053:6;5048:3;5043;5006:54;:::i;:::-;4725:341;4641:425;;;;;:::o;5086:340::-;5142:5;5191:3;5184:4;5176:6;5172:17;5168:27;5158:122;;5199:79;;:::i;:::-;5158:122;5316:6;5303:20;5341:79;5416:3;5408:6;5401:4;5393:6;5389:17;5341:79;:::i;:::-;5332:88;;5148:278;5086:340;;;;:::o;5432:509::-;5501:6;5550:2;5538:9;5529:7;5525:23;5521:32;5518:119;;;5556:79;;:::i;:::-;5518:119;5704:1;5693:9;5689:17;5676:31;5734:18;5726:6;5723:30;5720:117;;;5756:79;;:::i;:::-;5720:117;5861:63;5916:7;5907:6;5896:9;5892:22;5861:63;:::i;:::-;5851:73;;5647:287;5432:509;;;;:::o;5947:329::-;6006:6;6055:2;6043:9;6034:7;6030:23;6026:32;6023:119;;;6061:79;;:::i;:::-;6023:119;6181:1;6206:53;6251:7;6242:6;6231:9;6227:22;6206:53;:::i;:::-;6196:63;;6152:117;5947:329;;;;:::o;6282:99::-;6334:6;6368:5;6362:12;6352:22;;6282:99;;;:::o;6387:169::-;6471:11;6505:6;6500:3;6493:19;6545:4;6540:3;6536:14;6521:29;;6387:169;;;;:::o;6562:246::-;6643:1;6653:113;6667:6;6664:1;6661:13;6653:113;;;6752:1;6747:3;6743:11;6737:18;6733:1;6728:3;6724:11;6717:39;6689:2;6686:1;6682:10;6677:15;;6653:113;;;6800:1;6791:6;6786:3;6782:16;6775:27;6624:184;6562:246;;;:::o;6814:377::-;6902:3;6930:39;6963:5;6930:39;:::i;:::-;6985:71;7049:6;7044:3;6985:71;:::i;:::-;6978:78;;7065:65;7123:6;7118:3;7111:4;7104:5;7100:16;7065:65;:::i;:::-;7155:29;7177:6;7155:29;:::i;:::-;7150:3;7146:39;7139:46;;6906:285;6814:377;;;;:::o;7197:313::-;7310:4;7348:2;7337:9;7333:18;7325:26;;7397:9;7391:4;7387:20;7383:1;7372:9;7368:17;7361:47;7425:78;7498:4;7489:6;7425:78;:::i;:::-;7417:86;;7197:313;;;;:::o;7516:311::-;7593:4;7683:18;7675:6;7672:30;7669:56;;;7705:18;;:::i;:::-;7669:56;7755:4;7747:6;7743:17;7735:25;;7815:4;7809;7805:15;7797:23;;7516:311;;;:::o;7833:117::-;7942:1;7939;7932:12;7973:710;8069:5;8094:81;8110:64;8167:6;8110:64;:::i;:::-;8094:81;:::i;:::-;8085:90;;8195:5;8224:6;8217:5;8210:21;8258:4;8251:5;8247:16;8240:23;;8311:4;8303:6;8299:17;8291:6;8287:30;8340:3;8332:6;8329:15;8326:122;;;8359:79;;:::i;:::-;8326:122;8474:6;8457:220;8491:6;8486:3;8483:15;8457:220;;;8566:3;8595:37;8628:3;8616:10;8595:37;:::i;:::-;8590:3;8583:50;8662:4;8657:3;8653:14;8646:21;;8533:144;8517:4;8512:3;8508:14;8501:21;;8457:220;;;8461:21;8075:608;;7973:710;;;;;:::o;8706:370::-;8777:5;8826:3;8819:4;8811:6;8807:17;8803:27;8793:122;;8834:79;;:::i;:::-;8793:122;8951:6;8938:20;8976:94;9066:3;9058:6;9051:4;9043:6;9039:17;8976:94;:::i;:::-;8967:103;;8783:293;8706:370;;;;:::o;9082:307::-;9143:4;9233:18;9225:6;9222:30;9219:56;;;9255:18;;:::i;:::-;9219:56;9293:29;9315:6;9293:29;:::i;:::-;9285:37;;9377:4;9371;9367:15;9359:23;;9082:307;;;:::o;9395:423::-;9472:5;9497:65;9513:48;9554:6;9513:48;:::i;:::-;9497:65;:::i;:::-;9488:74;;9585:6;9578:5;9571:21;9623:4;9616:5;9612:16;9661:3;9652:6;9647:3;9643:16;9640:25;9637:112;;;9668:79;;:::i;:::-;9637:112;9758:54;9805:6;9800:3;9795;9758:54;:::i;:::-;9478:340;9395:423;;;;;:::o;9837:338::-;9892:5;9941:3;9934:4;9926:6;9922:17;9918:27;9908:122;;9949:79;;:::i;:::-;9908:122;10066:6;10053:20;10091:78;10165:3;10157:6;10150:4;10142:6;10138:17;10091:78;:::i;:::-;10082:87;;9898:277;9837:338;;;;:::o;10181:1363::-;10326:6;10334;10342;10350;10399:3;10387:9;10378:7;10374:23;10370:33;10367:120;;;10406:79;;:::i;:::-;10367:120;10526:1;10551:53;10596:7;10587:6;10576:9;10572:22;10551:53;:::i;:::-;10541:63;;10497:117;10681:2;10670:9;10666:18;10653:32;10712:18;10704:6;10701:30;10698:117;;;10734:79;;:::i;:::-;10698:117;10839:78;10909:7;10900:6;10889:9;10885:22;10839:78;:::i;:::-;10829:88;;10624:303;10994:2;10983:9;10979:18;10966:32;11025:18;11017:6;11014:30;11011:117;;;11047:79;;:::i;:::-;11011:117;11152:78;11222:7;11213:6;11202:9;11198:22;11152:78;:::i;:::-;11142:88;;10937:303;11307:2;11296:9;11292:18;11279:32;11338:18;11330:6;11327:30;11324:117;;;11360:79;;:::i;:::-;11324:117;11465:62;11519:7;11510:6;11499:9;11495:22;11465:62;:::i;:::-;11455:72;;11250:287;10181:1363;;;;;;;:::o;11550:1509::-;11704:6;11712;11720;11728;11736;11785:3;11773:9;11764:7;11760:23;11756:33;11753:120;;;11792:79;;:::i;:::-;11753:120;11912:1;11937:53;11982:7;11973:6;11962:9;11958:22;11937:53;:::i;:::-;11927:63;;11883:117;12039:2;12065:53;12110:7;12101:6;12090:9;12086:22;12065:53;:::i;:::-;12055:63;;12010:118;12195:2;12184:9;12180:18;12167:32;12226:18;12218:6;12215:30;12212:117;;;12248:79;;:::i;:::-;12212:117;12353:78;12423:7;12414:6;12403:9;12399:22;12353:78;:::i;:::-;12343:88;;12138:303;12508:2;12497:9;12493:18;12480:32;12539:18;12531:6;12528:30;12525:117;;;12561:79;;:::i;:::-;12525:117;12666:78;12736:7;12727:6;12716:9;12712:22;12666:78;:::i;:::-;12656:88;;12451:303;12821:3;12810:9;12806:19;12793:33;12853:18;12845:6;12842:30;12839:117;;;12875:79;;:::i;:::-;12839:117;12980:62;13034:7;13025:6;13014:9;13010:22;12980:62;:::i;:::-;12970:72;;12764:288;11550:1509;;;;;;;;:::o;13065:311::-;13142:4;13232:18;13224:6;13221:30;13218:56;;;13254:18;;:::i;:::-;13218:56;13304:4;13296:6;13292:17;13284:25;;13364:4;13358;13354:15;13346:23;;13065:311;;;:::o;13399:710::-;13495:5;13520:81;13536:64;13593:6;13536:64;:::i;:::-;13520:81;:::i;:::-;13511:90;;13621:5;13650:6;13643:5;13636:21;13684:4;13677:5;13673:16;13666:23;;13737:4;13729:6;13725:17;13717:6;13713:30;13766:3;13758:6;13755:15;13752:122;;;13785:79;;:::i;:::-;13752:122;13900:6;13883:220;13917:6;13912:3;13909:15;13883:220;;;13992:3;14021:37;14054:3;14042:10;14021:37;:::i;:::-;14016:3;14009:50;14088:4;14083:3;14079:14;14072:21;;13959:144;13943:4;13938:3;13934:14;13927:21;;13883:220;;;13887:21;13501:608;;13399:710;;;;;:::o;14132:370::-;14203:5;14252:3;14245:4;14237:6;14233:17;14229:27;14219:122;;14260:79;;:::i;:::-;14219:122;14377:6;14364:20;14402:94;14492:3;14484:6;14477:4;14469:6;14465:17;14402:94;:::i;:::-;14393:103;;14209:293;14132:370;;;;:::o;14508:894::-;14626:6;14634;14683:2;14671:9;14662:7;14658:23;14654:32;14651:119;;;14689:79;;:::i;:::-;14651:119;14837:1;14826:9;14822:17;14809:31;14867:18;14859:6;14856:30;14853:117;;;14889:79;;:::i;:::-;14853:117;14994:78;15064:7;15055:6;15044:9;15040:22;14994:78;:::i;:::-;14984:88;;14780:302;15149:2;15138:9;15134:18;15121:32;15180:18;15172:6;15169:30;15166:117;;;15202:79;;:::i;:::-;15166:117;15307:78;15377:7;15368:6;15357:9;15353:22;15307:78;:::i;:::-;15297:88;;15092:303;14508:894;;;;;:::o;15408:114::-;15475:6;15509:5;15503:12;15493:22;;15408:114;;;:::o;15528:184::-;15627:11;15661:6;15656:3;15649:19;15701:4;15696:3;15692:14;15677:29;;15528:184;;;;:::o;15718:132::-;15785:4;15808:3;15800:11;;15838:4;15833:3;15829:14;15821:22;;15718:132;;;:::o;15856:108::-;15933:24;15951:5;15933:24;:::i;:::-;15928:3;15921:37;15856:108;;:::o;15970:179::-;16039:10;16060:46;16102:3;16094:6;16060:46;:::i;:::-;16138:4;16133:3;16129:14;16115:28;;15970:179;;;;:::o;16155:113::-;16225:4;16257;16252:3;16248:14;16240:22;;16155:113;;;:::o;16304:732::-;16423:3;16452:54;16500:5;16452:54;:::i;:::-;16522:86;16601:6;16596:3;16522:86;:::i;:::-;16515:93;;16632:56;16682:5;16632:56;:::i;:::-;16711:7;16742:1;16727:284;16752:6;16749:1;16746:13;16727:284;;;16828:6;16822:13;16855:63;16914:3;16899:13;16855:63;:::i;:::-;16848:70;;16941:60;16994:6;16941:60;:::i;:::-;16931:70;;16787:224;16774:1;16771;16767:9;16762:14;;16727:284;;;16731:14;17027:3;17020:10;;16428:608;;;16304:732;;;;:::o;17042:373::-;17185:4;17223:2;17212:9;17208:18;17200:26;;17272:9;17266:4;17262:20;17258:1;17247:9;17243:17;17236:47;17300:108;17403:4;17394:6;17300:108;:::i;:::-;17292:116;;17042:373;;;;:::o;17421:943::-;17516:6;17524;17532;17540;17589:3;17577:9;17568:7;17564:23;17560:33;17557:120;;;17596:79;;:::i;:::-;17557:120;17716:1;17741:53;17786:7;17777:6;17766:9;17762:22;17741:53;:::i;:::-;17731:63;;17687:117;17843:2;17869:53;17914:7;17905:6;17894:9;17890:22;17869:53;:::i;:::-;17859:63;;17814:118;17971:2;17997:53;18042:7;18033:6;18022:9;18018:22;17997:53;:::i;:::-;17987:63;;17942:118;18127:2;18116:9;18112:18;18099:32;18158:18;18150:6;18147:30;18144:117;;;18180:79;;:::i;:::-;18144:117;18285:62;18339:7;18330:6;18319:9;18315:22;18285:62;:::i;:::-;18275:72;;18070:287;17421:943;;;;;;;:::o;18370:118::-;18457:24;18475:5;18457:24;:::i;:::-;18452:3;18445:37;18370:118;;:::o;18494:222::-;18587:4;18625:2;18614:9;18610:18;18602:26;;18638:71;18706:1;18695:9;18691:17;18682:6;18638:71;:::i;:::-;18494:222;;;;:::o;18722:116::-;18792:21;18807:5;18792:21;:::i;:::-;18785:5;18782:32;18772:60;;18828:1;18825;18818:12;18772:60;18722:116;:::o;18844:133::-;18887:5;18925:6;18912:20;18903:29;;18941:30;18965:5;18941:30;:::i;:::-;18844:133;;;;:::o;18983:468::-;19048:6;19056;19105:2;19093:9;19084:7;19080:23;19076:32;19073:119;;;19111:79;;:::i;:::-;19073:119;19231:1;19256:53;19301:7;19292:6;19281:9;19277:22;19256:53;:::i;:::-;19246:63;;19202:117;19358:2;19384:50;19426:7;19417:6;19406:9;19402:22;19384:50;:::i;:::-;19374:60;;19329:115;18983:468;;;;;:::o;19457:474::-;19525:6;19533;19582:2;19570:9;19561:7;19557:23;19553:32;19550:119;;;19588:79;;:::i;:::-;19550:119;19708:1;19733:53;19778:7;19769:6;19758:9;19754:22;19733:53;:::i;:::-;19723:63;;19679:117;19835:2;19861:53;19906:7;19897:6;19886:9;19882:22;19861:53;:::i;:::-;19851:63;;19806:118;19457:474;;;;;:::o;19937:1089::-;20041:6;20049;20057;20065;20073;20122:3;20110:9;20101:7;20097:23;20093:33;20090:120;;;20129:79;;:::i;:::-;20090:120;20249:1;20274:53;20319:7;20310:6;20299:9;20295:22;20274:53;:::i;:::-;20264:63;;20220:117;20376:2;20402:53;20447:7;20438:6;20427:9;20423:22;20402:53;:::i;:::-;20392:63;;20347:118;20504:2;20530:53;20575:7;20566:6;20555:9;20551:22;20530:53;:::i;:::-;20520:63;;20475:118;20632:2;20658:53;20703:7;20694:6;20683:9;20679:22;20658:53;:::i;:::-;20648:63;;20603:118;20788:3;20777:9;20773:19;20760:33;20820:18;20812:6;20809:30;20806:117;;;20842:79;;:::i;:::-;20806:117;20947:62;21001:7;20992:6;20981:9;20977:22;20947:62;:::i;:::-;20937:72;;20731:288;19937:1089;;;;;;;;:::o;21032:329::-;21091:6;21140:2;21128:9;21119:7;21115:23;21111:32;21108:119;;;21146:79;;:::i;:::-;21108:119;21266:1;21291:53;21336:7;21327:6;21316:9;21312:22;21291:53;:::i;:::-;21281:63;;21237:117;21032:329;;;;:::o;21367:180::-;21415:77;21412:1;21405:88;21512:4;21509:1;21502:15;21536:4;21533:1;21526:15;21553:320;21597:6;21634:1;21628:4;21624:12;21614:22;;21681:1;21675:4;21671:12;21702:18;21692:81;;21758:4;21750:6;21746:17;21736:27;;21692:81;21820:2;21812:6;21809:14;21789:18;21786:38;21783:84;;21839:18;;:::i;:::-;21783:84;21604:269;21553:320;;;:::o;21879:332::-;22000:4;22038:2;22027:9;22023:18;22015:26;;22051:71;22119:1;22108:9;22104:17;22095:6;22051:71;:::i;:::-;22132:72;22200:2;22189:9;22185:18;22176:6;22132:72;:::i;:::-;21879:332;;;;;:::o;22217:::-;22338:4;22376:2;22365:9;22361:18;22353:26;;22389:71;22457:1;22446:9;22442:17;22433:6;22389:71;:::i;:::-;22470:72;22538:2;22527:9;22523:18;22514:6;22470:72;:::i;:::-;22217:332;;;;;:::o;22555:180::-;22603:77;22600:1;22593:88;22700:4;22697:1;22690:15;22724:4;22721:1;22714:15;22741:180;22789:77;22786:1;22779:88;22886:4;22883:1;22876:15;22910:4;22907:1;22900:15;22927:233;22966:3;22989:24;23007:5;22989:24;:::i;:::-;22980:33;;23035:66;23028:5;23025:77;23022:103;;23105:18;;:::i;:::-;23022:103;23152:1;23145:5;23141:13;23134:20;;22927:233;;;:::o;23166:141::-;23215:4;23238:3;23230:11;;23261:3;23258:1;23251:14;23295:4;23292:1;23282:18;23274:26;;23166:141;;;:::o;23313:93::-;23350:6;23397:2;23392;23385:5;23381:14;23377:23;23367:33;;23313:93;;;:::o;23412:107::-;23456:8;23506:5;23500:4;23496:16;23475:37;;23412:107;;;;:::o;23525:393::-;23594:6;23644:1;23632:10;23628:18;23667:97;23697:66;23686:9;23667:97;:::i;:::-;23785:39;23815:8;23804:9;23785:39;:::i;:::-;23773:51;;23857:4;23853:9;23846:5;23842:21;23833:30;;23906:4;23896:8;23892:19;23885:5;23882:30;23872:40;;23601:317;;23525:393;;;;;:::o;23924:60::-;23952:3;23973:5;23966:12;;23924:60;;;:::o;23990:142::-;24040:9;24073:53;24091:34;24100:24;24118:5;24100:24;:::i;:::-;24091:34;:::i;:::-;24073:53;:::i;:::-;24060:66;;23990:142;;;:::o;24138:75::-;24181:3;24202:5;24195:12;;24138:75;;;:::o;24219:269::-;24329:39;24360:7;24329:39;:::i;:::-;24390:91;24439:41;24463:16;24439:41;:::i;:::-;24431:6;24424:4;24418:11;24390:91;:::i;:::-;24384:4;24377:105;24295:193;24219:269;;;:::o;24494:73::-;24539:3;24494:73;:::o;24573:189::-;24650:32;;:::i;:::-;24691:65;24749:6;24741;24735:4;24691:65;:::i;:::-;24626:136;24573:189;;:::o;24768:186::-;24828:120;24845:3;24838:5;24835:14;24828:120;;;24899:39;24936:1;24929:5;24899:39;:::i;:::-;24872:1;24865:5;24861:13;24852:22;;24828:120;;;24768:186;;:::o;24960:543::-;25061:2;25056:3;25053:11;25050:446;;;25095:38;25127:5;25095:38;:::i;:::-;25179:29;25197:10;25179:29;:::i;:::-;25169:8;25165:44;25362:2;25350:10;25347:18;25344:49;;;25383:8;25368:23;;25344:49;25406:80;25462:22;25480:3;25462:22;:::i;:::-;25452:8;25448:37;25435:11;25406:80;:::i;:::-;25065:431;;25050:446;24960:543;;;:::o;25509:117::-;25563:8;25613:5;25607:4;25603:16;25582:37;;25509:117;;;;:::o;25632:169::-;25676:6;25709:51;25757:1;25753:6;25745:5;25742:1;25738:13;25709:51;:::i;:::-;25705:56;25790:4;25784;25780:15;25770:25;;25683:118;25632:169;;;;:::o;25806:295::-;25882:4;26028:29;26053:3;26047:4;26028:29;:::i;:::-;26020:37;;26090:3;26087:1;26083:11;26077:4;26074:21;26066:29;;25806:295;;;;:::o;26106:1395::-;26223:37;26256:3;26223:37;:::i;:::-;26325:18;26317:6;26314:30;26311:56;;;26347:18;;:::i;:::-;26311:56;26391:38;26423:4;26417:11;26391:38;:::i;:::-;26476:67;26536:6;26528;26522:4;26476:67;:::i;:::-;26570:1;26594:4;26581:17;;26626:2;26618:6;26615:14;26643:1;26638:618;;;;27300:1;27317:6;27314:77;;;27366:9;27361:3;27357:19;27351:26;27342:35;;27314:77;27417:67;27477:6;27470:5;27417:67;:::i;:::-;27411:4;27404:81;27273:222;26608:887;;26638:618;26690:4;26686:9;26678:6;26674:22;26724:37;26756:4;26724:37;:::i;:::-;26783:1;26797:208;26811:7;26808:1;26805:14;26797:208;;;26890:9;26885:3;26881:19;26875:26;26867:6;26860:42;26941:1;26933:6;26929:14;26919:24;;26988:2;26977:9;26973:18;26960:31;;26834:4;26831:1;26827:12;26822:17;;26797:208;;;27033:6;27024:7;27021:19;27018:179;;;27091:9;27086:3;27082:19;27076:26;27134:48;27176:4;27168:6;27164:17;27153:9;27134:48;:::i;:::-;27126:6;27119:64;27041:156;27018:179;27243:1;27239;27231:6;27227:14;27223:22;27217:4;27210:36;26645:611;;;26608:887;;26198:1303;;;26106:1395;;:::o;27507:553::-;27684:4;27722:3;27711:9;27707:19;27699:27;;27736:71;27804:1;27793:9;27789:17;27780:6;27736:71;:::i;:::-;27817:72;27885:2;27874:9;27870:18;27861:6;27817:72;:::i;:::-;27899;27967:2;27956:9;27952:18;27943:6;27899:72;:::i;:::-;27981;28049:2;28038:9;28034:18;28025:6;27981:72;:::i;:::-;27507:553;;;;;;;:::o;28066:191::-;28106:3;28125:20;28143:1;28125:20;:::i;:::-;28120:25;;28159:20;28177:1;28159:20;:::i;:::-;28154:25;;28202:1;28199;28195:9;28188:16;;28223:3;28220:1;28217:10;28214:36;;;28230:18;;:::i;:::-;28214:36;28066:191;;;;:::o;28263:634::-;28484:4;28522:2;28511:9;28507:18;28499:26;;28571:9;28565:4;28561:20;28557:1;28546:9;28542:17;28535:47;28599:108;28702:4;28693:6;28599:108;:::i;:::-;28591:116;;28754:9;28748:4;28744:20;28739:2;28728:9;28724:18;28717:48;28782:108;28885:4;28876:6;28782:108;:::i;:::-;28774:116;;28263:634;;;;;:::o;28903:98::-;28954:6;28988:5;28982:12;28972:22;;28903:98;;;:::o;29007:168::-;29090:11;29124:6;29119:3;29112:19;29164:4;29159:3;29155:14;29140:29;;29007:168;;;;:::o;29181:373::-;29267:3;29295:38;29327:5;29295:38;:::i;:::-;29349:70;29412:6;29407:3;29349:70;:::i;:::-;29342:77;;29428:65;29486:6;29481:3;29474:4;29467:5;29463:16;29428:65;:::i;:::-;29518:29;29540:6;29518:29;:::i;:::-;29513:3;29509:39;29502:46;;29271:283;29181:373;;;;:::o;29560:751::-;29783:4;29821:3;29810:9;29806:19;29798:27;;29835:71;29903:1;29892:9;29888:17;29879:6;29835:71;:::i;:::-;29916:72;29984:2;29973:9;29969:18;29960:6;29916:72;:::i;:::-;29998;30066:2;30055:9;30051:18;30042:6;29998:72;:::i;:::-;30080;30148:2;30137:9;30133:18;30124:6;30080:72;:::i;:::-;30200:9;30194:4;30190:20;30184:3;30173:9;30169:19;30162:49;30228:76;30299:4;30290:6;30228:76;:::i;:::-;30220:84;;29560:751;;;;;;;;:::o;30317:141::-;30373:5;30404:6;30398:13;30389:22;;30420:32;30446:5;30420:32;:::i;:::-;30317:141;;;;:::o;30464:349::-;30533:6;30582:2;30570:9;30561:7;30557:23;30553:32;30550:119;;;30588:79;;:::i;:::-;30550:119;30708:1;30733:63;30788:7;30779:6;30768:9;30764:22;30733:63;:::i;:::-;30723:73;;30679:127;30464:349;;;;:::o;30819:1053::-;31142:4;31180:3;31169:9;31165:19;31157:27;;31194:71;31262:1;31251:9;31247:17;31238:6;31194:71;:::i;:::-;31275:72;31343:2;31332:9;31328:18;31319:6;31275:72;:::i;:::-;31394:9;31388:4;31384:20;31379:2;31368:9;31364:18;31357:48;31422:108;31525:4;31516:6;31422:108;:::i;:::-;31414:116;;31577:9;31571:4;31567:20;31562:2;31551:9;31547:18;31540:48;31605:108;31708:4;31699:6;31605:108;:::i;:::-;31597:116;;31761:9;31755:4;31751:20;31745:3;31734:9;31730:19;31723:49;31789:76;31860:4;31851:6;31789:76;:::i;:::-;31781:84;;30819:1053;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2079400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256,uint256,bytes)": "infinite",
								"mintBatch(address,uint256[],uint256[],bytes)": "infinite",
								"owner()": "2589",
								"renounceOwnership()": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setURI(string)": "infinite",
								"supportsInterface(bytes4)": "819",
								"transferOwnership(address)": "infinite",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 227,
									"end": 904,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 227,
									"end": 904,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 227,
									"end": 904,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 269,
									"end": 428,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 269,
									"end": 428,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 269,
									"end": 428,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 269,
									"end": 428,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 269,
									"end": 428,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 269,
									"end": 428,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 269,
									"end": 428,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 269,
									"end": 428,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 269,
									"end": 428,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 407,
									"end": 419,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1250,
									"end": 1312,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1250,
									"end": 1312,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1250,
									"end": 1312,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1250,
									"end": 1312,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1250,
									"end": 1312,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1250,
									"end": 1312,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1250,
									"end": 1312,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1250,
									"end": 1312,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1250,
									"end": 1312,
									"name": "PUSH",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 1250,
									"end": 1312,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1250,
									"end": 1312,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1250,
									"end": 1312,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1250,
									"end": 1312,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1250,
									"end": 1312,
									"name": "PUSH data",
									"source": 2,
									"value": "CC14D9D152288110BB6CD8F00736A77DBD45E58D117A5B7D4A7AB6BD571D2C8C"
								},
								{
									"begin": 1250,
									"end": 1312,
									"name": "PUSH",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 1250,
									"end": 1312,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1250,
									"end": 1312,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1292,
									"end": 1305,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1300,
									"end": 1304,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1292,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1292,
									"end": 1299,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1292,
									"end": 1299,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1292,
									"end": 1305,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1292,
									"end": 1305,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1292,
									"end": 1305,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1292,
									"end": 1305,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1292,
									"end": 1305,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1250,
									"end": 1312,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1272,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1272,
									"end": 1298,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1272,
									"end": 1284,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1272,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1272,
									"end": 1298,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1272,
									"end": 1298,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1268,
									"end": 1363,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1268,
									"end": 1363,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1349,
									"end": 1350,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1321,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1321,
									"end": 1352,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1268,
									"end": 1363,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1268,
									"end": 1363,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1372,
									"end": 1404,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1391,
									"end": 1403,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1372,
									"end": 1390,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1372,
									"end": 1390,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1372,
									"end": 1390,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1372,
									"end": 1404,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1372,
									"end": 1404,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1372,
									"end": 1404,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1372,
									"end": 1404,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1372,
									"end": 1404,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1224,
									"end": 1411,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 269,
									"end": 428,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 227,
									"end": 904,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 227,
									"end": 904,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10281,
									"end": 10367,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 10281,
									"end": 10367,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10354,
									"end": 10360,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 10347,
									"end": 10351,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 10347,
									"end": 10360,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10347,
									"end": 10360,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 10347,
									"end": 10360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 10347,
									"end": 10360,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 10347,
									"end": 10360,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10347,
									"end": 10360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 10347,
									"end": 10360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 10347,
									"end": 10360,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 10347,
									"end": 10360,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10347,
									"end": 10360,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10281,
									"end": 10367,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10281,
									"end": 10367,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2911,
									"end": 3098,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2911,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2984,
									"end": 3000,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3003,
									"end": 3009,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2984,
									"end": 3009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2984,
									"end": 3009,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3028,
									"end": 3036,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3025,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3019,
									"end": 3025,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3019,
									"end": 3036,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3082,
									"end": 3090,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3072,
									"end": 3080,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3051,
									"end": 3091,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2974,
									"end": 3098,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2911,
									"end": 3098,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2911,
									"end": 3098,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1606,
									"end": 1612,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1640,
									"end": 1645,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1634,
									"end": 1646,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1624,
									"end": 1646,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1624,
									"end": 1646,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1554,
									"end": 1653,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1659,
									"end": 1839,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 1659,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1707,
									"end": 1784,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1704,
									"end": 1705,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1697,
									"end": 1785,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1804,
									"end": 1808,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1801,
									"end": 1802,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1794,
									"end": 1809,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1828,
									"end": 1832,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1825,
									"end": 1826,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1818,
									"end": 1833,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1845,
									"end": 2025,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 1845,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1893,
									"end": 1970,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1890,
									"end": 1891,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1883,
									"end": 1971,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1990,
									"end": 1994,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1987,
									"end": 1988,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1980,
									"end": 1995,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2014,
									"end": 2018,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2011,
									"end": 2012,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2004,
									"end": 2019,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2075,
									"end": 2081,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2112,
									"end": 2113,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 2106,
									"end": 2110,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2102,
									"end": 2114,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 2092,
									"end": 2114,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2092,
									"end": 2114,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2159,
									"end": 2160,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2153,
									"end": 2157,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2149,
									"end": 2161,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2180,
									"end": 2198,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2236,
									"end": 2240,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2224,
									"end": 2241,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2214,
									"end": 2241,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2214,
									"end": 2241,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "tag",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2298,
									"end": 2300,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2290,
									"end": 2296,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2287,
									"end": 2301,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 2267,
									"end": 2285,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2264,
									"end": 2302,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 2317,
									"end": 2335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "tag",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2082,
									"end": 2351,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2031,
									"end": 2351,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2432,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2421,
									"end": 2432,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2421,
									"end": 2432,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2452,
									"end": 2455,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2442,
									"end": 2456,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2486,
									"end": 2490,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2473,
									"end": 2491,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 2465,
									"end": 2491,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2465,
									"end": 2491,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2357,
									"end": 2498,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2588,
									"end": 2590,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2583,
									"end": 2585,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2576,
									"end": 2581,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2572,
									"end": 2586,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2568,
									"end": 2591,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 2558,
									"end": 2591,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2558,
									"end": 2591,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2504,
									"end": 2597,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2647,
									"end": 2655,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2697,
									"end": 2702,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2691,
									"end": 2695,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 2703,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2666,
									"end": 2703,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2666,
									"end": 2703,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2603,
									"end": 2710,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2785,
									"end": 2791,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2835,
									"end": 2836,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 2823,
									"end": 2833,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2819,
									"end": 2837,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 2888,
									"end": 2954,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2877,
									"end": 2886,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 2858,
									"end": 2955,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 3006,
									"end": 3014,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2995,
									"end": 3004,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 2976,
									"end": 3015,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2964,
									"end": 3015,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 2964,
									"end": 3015,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3048,
									"end": 3052,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3044,
									"end": 3053,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 3037,
									"end": 3042,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3033,
									"end": 3054,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3024,
									"end": 3054,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 3024,
									"end": 3054,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3097,
									"end": 3101,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3087,
									"end": 3095,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3083,
									"end": 3102,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3076,
									"end": 3081,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3073,
									"end": 3103,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 3063,
									"end": 3103,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3063,
									"end": 3103,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2792,
									"end": 3109,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2792,
									"end": 3109,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2716,
									"end": 3109,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3152,
									"end": 3159,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3181,
									"end": 3186,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3170,
									"end": 3186,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3170,
									"end": 3186,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3115,
									"end": 3192,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3226,
									"end": 3229,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3247,
									"end": 3252,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3240,
									"end": 3252,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3240,
									"end": 3252,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3198,
									"end": 3258,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3314,
									"end": 3323,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 3392,
									"end": 3397,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 3374,
									"end": 3398,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "tag",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 3365,
									"end": 3399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "tag",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 3347,
									"end": 3400,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "tag",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3334,
									"end": 3400,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3334,
									"end": 3400,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3264,
									"end": 3406,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3455,
									"end": 3458,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3476,
									"end": 3481,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3469,
									"end": 3481,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3469,
									"end": 3481,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3412,
									"end": 3487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 3634,
									"end": 3641,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3603,
									"end": 3642,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 3737,
									"end": 3753,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 3713,
									"end": 3754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "tag",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3705,
									"end": 3711,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3698,
									"end": 3702,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3692,
									"end": 3703,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 3664,
									"end": 3755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "tag",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3658,
									"end": 3662,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3651,
									"end": 3756,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3569,
									"end": 3762,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3493,
									"end": 3762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3768,
									"end": 3841,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 3768,
									"end": 3841,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3813,
									"end": 3816,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3768,
									"end": 3841,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3768,
									"end": 3841,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "tag",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 3924,
									"end": 3956,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "tag",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 4023,
									"end": 4029,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4015,
									"end": 4021,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4009,
									"end": 4013,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 3965,
									"end": 4030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "tag",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3900,
									"end": 4036,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3847,
									"end": 4036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "tag",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4119,
									"end": 4122,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4112,
									"end": 4117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4109,
									"end": 4123,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 4210,
									"end": 4211,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4203,
									"end": 4208,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 4173,
									"end": 4212,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "tag",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4146,
									"end": 4147,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4139,
									"end": 4144,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4135,
									"end": 4148,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4126,
									"end": 4148,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4126,
									"end": 4148,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "tag",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4042,
									"end": 4228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "tag",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4335,
									"end": 4337,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4330,
									"end": 4333,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4327,
									"end": 4338,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 4401,
									"end": 4406,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 4369,
									"end": 4407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "tag",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 4471,
									"end": 4481,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 4453,
									"end": 4482,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "tag",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4439,
									"end": 4483,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4636,
									"end": 4638,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4624,
									"end": 4634,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4621,
									"end": 4639,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4657,
									"end": 4665,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4642,
									"end": 4665,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4642,
									"end": 4665,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "tag",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 4754,
									"end": 4757,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 4736,
									"end": 4758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "tag",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4726,
									"end": 4734,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4722,
									"end": 4759,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4709,
									"end": 4720,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 4680,
									"end": 4760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "tag",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4339,
									"end": 4770,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4339,
									"end": 4770,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "tag",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4234,
									"end": 4777,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "tag",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4837,
									"end": 4845,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4887,
									"end": 4892,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4881,
									"end": 4885,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4877,
									"end": 4893,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 4856,
									"end": 4893,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4856,
									"end": 4893,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4783,
									"end": 4900,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "tag",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4950,
									"end": 4956,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 5031,
									"end": 5032,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5027,
									"end": 5033,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5019,
									"end": 5024,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5016,
									"end": 5017,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 4983,
									"end": 5034,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "tag",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4979,
									"end": 5035,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5064,
									"end": 5068,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5058,
									"end": 5062,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5054,
									"end": 5069,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5044,
									"end": 5069,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5044,
									"end": 5069,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4957,
									"end": 5075,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4906,
									"end": 5075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5156,
									"end": 5160,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 5327,
									"end": 5330,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5321,
									"end": 5325,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 5302,
									"end": 5331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "tag",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5294,
									"end": 5331,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5294,
									"end": 5331,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5364,
									"end": 5367,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5361,
									"end": 5362,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 5357,
									"end": 5368,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 5351,
									"end": 5355,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5348,
									"end": 5369,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 5340,
									"end": 5369,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5340,
									"end": 5369,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5080,
									"end": 5375,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 5530,
									"end": 5533,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 5497,
									"end": 5534,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "tag",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5599,
									"end": 5617,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5591,
									"end": 5597,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5588,
									"end": 5618,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 5621,
									"end": 5639,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "tag",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "tag",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 5697,
									"end": 5701,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5691,
									"end": 5702,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 5665,
									"end": 5703,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "tag",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 5810,
									"end": 5816,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5802,
									"end": 5808,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5796,
									"end": 5800,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 5750,
									"end": 5817,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "tag",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5844,
									"end": 5845,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5868,
									"end": 5872,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5855,
									"end": 5872,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5855,
									"end": 5872,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5900,
									"end": 5902,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5892,
									"end": 5898,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5889,
									"end": 5903,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 5917,
									"end": 5918,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6574,
									"end": 6575,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6591,
									"end": 6597,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6640,
									"end": 6649,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6635,
									"end": 6638,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 6631,
									"end": 6650,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6625,
									"end": 6651,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6616,
									"end": 6651,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6616,
									"end": 6651,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "tag",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 6751,
									"end": 6757,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6744,
									"end": 6749,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 6691,
									"end": 6758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "tag",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6685,
									"end": 6689,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 6678,
									"end": 6759,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 6547,
									"end": 6769,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "tag",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5964,
									"end": 5968,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5960,
									"end": 5969,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5952,
									"end": 5958,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5948,
									"end": 5970,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "125"
								},
								{
									"begin": 6030,
									"end": 6034,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 5998,
									"end": 6035,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "tag",
									"source": 13,
									"value": "125"
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6057,
									"end": 6058,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "tag",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6085,
									"end": 6092,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6082,
									"end": 6083,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6079,
									"end": 6093,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6164,
									"end": 6173,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6159,
									"end": 6162,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 6155,
									"end": 6174,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6149,
									"end": 6175,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6141,
									"end": 6147,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6134,
									"end": 6176,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 6215,
									"end": 6216,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 6207,
									"end": 6213,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6203,
									"end": 6217,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6193,
									"end": 6217,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6193,
									"end": 6217,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6262,
									"end": 6264,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6251,
									"end": 6260,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6247,
									"end": 6265,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6234,
									"end": 6265,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 6234,
									"end": 6265,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6108,
									"end": 6112,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6105,
									"end": 6106,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6101,
									"end": 6113,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6096,
									"end": 6113,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6096,
									"end": 6113,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "tag",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6307,
									"end": 6313,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 6298,
									"end": 6305,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6295,
									"end": 6314,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6365,
									"end": 6374,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6360,
									"end": 6363,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 6356,
									"end": 6375,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6350,
									"end": 6376,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 6450,
									"end": 6454,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 6442,
									"end": 6448,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 6438,
									"end": 6455,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 6427,
									"end": 6436,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 6408,
									"end": 6456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "tag",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6400,
									"end": 6406,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6393,
									"end": 6457,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 6315,
									"end": 6471,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "tag",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6517,
									"end": 6518,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 6513,
									"end": 6514,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 6505,
									"end": 6511,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 6501,
									"end": 6515,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 6497,
									"end": 6519,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6491,
									"end": 6495,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 6484,
									"end": 6520,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5919,
									"end": 6530,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5919,
									"end": 6530,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5919,
									"end": 6530,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "tag",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5472,
									"end": 6775,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5472,
									"end": 6775,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5472,
									"end": 6775,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5380,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 227,
									"end": 904,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 227,
									"end": 904,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 227,
									"end": 904,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 227,
									"end": 904,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 227,
									"end": 904,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 227,
									"end": 904,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 227,
									"end": 904,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 227,
									"end": 904,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 227,
									"end": 904,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203240a21d2a5db3545717108610678671a5b832785764259d22f3dfd78a4f144464736f6c63430008130033",
									".code": [
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "A22CB465"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "A22CB465"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "E985E9C5"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "F242432A"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "731133E9"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "E89341C"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "E89341C"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "1F7FDFFA"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "2EB2C2D6"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "4E1273F4"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "FDD58E"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "2FE5305"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 904,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 227,
											"end": 904,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2246,
											"end": 2378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2246,
											"end": 2378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2246,
											"end": 2378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1379,
											"end": 1684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1379,
											"end": 1684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1379,
											"end": 1684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 436,
											"end": 525,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 436,
											"end": 525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 436,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 436,
											"end": 525,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 436,
											"end": 525,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 436,
											"end": 525,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 436,
											"end": 525,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 436,
											"end": 525,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 436,
											"end": 525,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 436,
											"end": 525,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 436,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 436,
											"end": 525,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 436,
											"end": 525,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 436,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 436,
											"end": 525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 436,
											"end": 525,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 436,
											"end": 525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 436,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 436,
											"end": 525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 436,
											"end": 525,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 436,
											"end": 525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 436,
											"end": 525,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2083,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2083,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2083,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 710,
											"end": 901,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 710,
											"end": 901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 710,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 710,
											"end": 901,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 710,
											"end": 901,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 710,
											"end": 901,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 710,
											"end": 901,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 710,
											"end": 901,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 710,
											"end": 901,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 710,
											"end": 901,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 710,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 710,
											"end": 901,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 710,
											"end": 901,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 710,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 710,
											"end": 901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 710,
											"end": 901,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 710,
											"end": 901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 710,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 710,
											"end": 901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 710,
											"end": 901,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 710,
											"end": 901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 710,
											"end": 901,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4013,
											"end": 4442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4013,
											"end": 4442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2535,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2535,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2535,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2292,
											"end": 2393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 533,
											"end": 702,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 533,
											"end": 702,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 533,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 533,
											"end": 702,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 533,
											"end": 702,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 533,
											"end": 702,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 533,
											"end": 702,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 533,
											"end": 702,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 533,
											"end": 702,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 533,
											"end": 702,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 533,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 533,
											"end": 702,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 533,
											"end": 702,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 533,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 533,
											"end": 702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 533,
											"end": 702,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 533,
											"end": 702,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 533,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 533,
											"end": 702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 533,
											"end": 702,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 533,
											"end": 702,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 533,
											"end": 702,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1637,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1637,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3155,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3155,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3366,
											"end": 3523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3366,
											"end": 3523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3366,
											"end": 3523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3590,
											"end": 3941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3590,
											"end": 3941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2542,
											"end": 2757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2542,
											"end": 2757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2330,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2361,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2370,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2349,
											"end": 2371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2349,
											"end": 2371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2371,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2371,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2371,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2371,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2371,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2371,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2371,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2371,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2371,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2371,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2342,
											"end": 2371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2342,
											"end": 2371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1481,
											"end": 1485,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1557,
											"name": "PUSH",
											"source": 2,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1516,
											"end": 1557,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1516,
											"end": 1557,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1557,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1527,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1557,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1516,
											"end": 1557,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1557,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1557,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1516,
											"end": 1625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1625,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1625,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1573,
											"end": 1625,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1573,
											"end": 1625,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1625,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1584,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1625,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1573,
											"end": 1625,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1625,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1625,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1516,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1677,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1516,
											"end": 1677,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1677,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1665,
											"end": 1676,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1641,
											"end": 1677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1677,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1641,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1677,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1516,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1677,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1677,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1379,
											"end": 1684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 436,
											"end": 525,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 436,
											"end": 525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1530,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1530,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 502,
											"end": 517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 510,
											"end": 516,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 502,
											"end": 509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 502,
											"end": 517,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 502,
											"end": 517,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 502,
											"end": 517,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 436,
											"end": 525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 436,
											"end": 525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2175,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2168,
											"end": 2179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2168,
											"end": 2179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 710,
											"end": 901,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 710,
											"end": 901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1530,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1530,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 859,
											"end": 893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 870,
											"end": 872,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 874,
											"end": 877,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 879,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 888,
											"end": 892,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 859,
											"end": 869,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 859,
											"end": 893,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 859,
											"end": 893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 859,
											"end": 893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 710,
											"end": 901,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 710,
											"end": 901,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 710,
											"end": 901,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 710,
											"end": 901,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 710,
											"end": 901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4207,
											"end": 4221,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4224,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4224,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4224,
											"end": 4236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4236,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4224,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4207,
											"end": 4236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4207,
											"end": 4236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4258,
											"end": 4264,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4254,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4264,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4264,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4299,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4250,
											"end": 4299,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4286,
											"end": 4290,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4292,
											"end": 4298,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4269,
											"end": 4299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4299,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4269,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4268,
											"end": 4299,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4250,
											"end": 4299,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4250,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4246,
											"end": 4375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4246,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4246,
											"end": 4375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4357,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4363,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4322,
											"end": 4364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4364,
											"name": "PUSH",
											"source": 2,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4322,
											"end": 4364,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4364,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4364,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4322,
											"end": 4364,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4322,
											"end": 4364,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4322,
											"end": 4364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4364,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4322,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4322,
											"end": 4364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4364,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4246,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4246,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4384,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4407,
											"end": 4411,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4413,
											"end": 4415,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4417,
											"end": 4420,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4422,
											"end": 4428,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4430,
											"end": 4434,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4384,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4384,
											"end": 4435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4384,
											"end": 4435,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4384,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4442,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2675,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2710,
											"end": 2713,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2720,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2691,
											"end": 2699,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2691,
											"end": 2706,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2691,
											"end": 2720,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2687,
											"end": 2808,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2769,
											"end": 2772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2769,
											"end": 2779,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2789,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2796,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2797,
											"name": "PUSH",
											"source": 2,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2743,
											"end": 2797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2797,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2797,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2743,
											"end": 2797,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2797,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2743,
											"end": 2797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2797,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2743,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2797,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2797,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2797,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2808,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2687,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 2848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2873,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2880,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2851,
											"end": 2881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 2881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 2881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2892,
											"end": 3050,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2892,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2924,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2931,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 2913,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 2931,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2892,
											"end": 3050,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2892,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2892,
											"end": 3050,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3009,
											"end": 3010,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2989,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2981,
											"end": 3008,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3036,
											"end": 3037,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3016,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3013,
											"end": 3035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3038,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3038,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3038,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3013,
											"end": 3038,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3038,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3013,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2971,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3039,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2971,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2965,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2968,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2968,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2968,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2968,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2952,
											"end": 2968,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2952,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2952,
											"end": 2968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2968,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2952,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2968,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2952,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2968,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2952,
											"end": 2968,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2968,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2952,
											"end": 2968,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2968,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 3039,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 3039,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 3039,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 3039,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 3039,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2936,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2933,
											"end": 2936,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2933,
											"end": 2936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2936,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2933,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2936,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2936,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2892,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2892,
											"end": 3050,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2892,
											"end": 3050,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2892,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2892,
											"end": 3050,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3067,
											"end": 3080,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3080,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3060,
											"end": 3080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 3087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2292,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1530,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1530,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2383,
											"end": 2384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2374,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2356,
											"end": 2386,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2386,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2356,
											"end": 2386,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 533,
											"end": 702,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 533,
											"end": 702,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1530,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1530,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 662,
											"end": 694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 668,
											"end": 675,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 677,
											"end": 679,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 681,
											"end": 687,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 689,
											"end": 693,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 662,
											"end": 667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 662,
											"end": 694,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 662,
											"end": 694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 662,
											"end": 694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 533,
											"end": 702,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 533,
											"end": 702,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 533,
											"end": 702,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 533,
											"end": 702,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 533,
											"end": 702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1637,
											"end": 1722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3259,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3259,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3259,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3259,
											"end": 3271,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3259,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3291,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3240,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3460,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3479,
											"end": 3497,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3505,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3515,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3479,
											"end": 3516,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3472,
											"end": 3516,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3472,
											"end": 3516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3730,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3730,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3730,
											"end": 3742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3730,
											"end": 3742,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3730,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3742,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3713,
											"end": 3742,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3770,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3756,
											"end": 3770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3760,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3770,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3756,
											"end": 3770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3770,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3770,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3805,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3805,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3756,
											"end": 3805,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3792,
											"end": 3796,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 3804,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3775,
											"end": 3805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3805,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3775,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 3805,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3805,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3756,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3881,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3752,
											"end": 3881,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 3863,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3865,
											"end": 3869,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3828,
											"end": 3870,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3828,
											"end": 3870,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3828,
											"end": 3870,
											"name": "PUSH",
											"source": 2,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3828,
											"end": 3870,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3828,
											"end": 3870,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3828,
											"end": 3870,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3828,
											"end": 3870,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3828,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3828,
											"end": 3870,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3828,
											"end": 3870,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3828,
											"end": 3870,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3828,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3828,
											"end": 3870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3828,
											"end": 3870,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3828,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3828,
											"end": 3870,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3828,
											"end": 3870,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3828,
											"end": 3870,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3828,
											"end": 3870,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3828,
											"end": 3870,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3828,
											"end": 3870,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3828,
											"end": 3870,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3752,
											"end": 3881,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3752,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3890,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3914,
											"end": 3916,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3918,
											"end": 3920,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3922,
											"end": 3927,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3929,
											"end": 3933,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3890,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3890,
											"end": 3934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3890,
											"end": 3934,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3890,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3703,
											"end": 3941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1530,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1530,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1530,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2646,
											"end": 2647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2648,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2634,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2648,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2648,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2713,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2622,
											"end": 2713,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2671,
											"end": 2702,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2702,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2713,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2622,
											"end": 2713,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2741,
											"end": 2749,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2722,
											"end": 2750,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2750,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2722,
											"end": 2750,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 761,
											"end": 907,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 761,
											"end": 907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 875,
											"end": 900,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 860,
											"end": 900,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 860,
											"end": 900,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 860,
											"end": 900,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 860,
											"end": 871,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 860,
											"end": 900,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 860,
											"end": 900,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 860,
											"end": 900,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 860,
											"end": 900,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 853,
											"end": 900,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 853,
											"end": 900,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 761,
											"end": 907,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 761,
											"end": 907,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 761,
											"end": 907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 761,
											"end": 907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 1957,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1795,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1865,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1865,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1877,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1865,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1877,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1854,
											"end": 1877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1854,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1854,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1861,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1854,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1877,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1854,
											"end": 1877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1877,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1850,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1850,
											"end": 1951,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1927,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1927,
											"end": 1939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1939,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1927,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1900,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1940,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1850,
											"end": 1951,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1850,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10281,
											"end": 10367,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 10281,
											"end": 10367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10354,
											"end": 10360,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10347,
											"end": 10351,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10347,
											"end": 10360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10347,
											"end": 10360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10347,
											"end": 10360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 10347,
											"end": 10360,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10347,
											"end": 10360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10347,
											"end": 10360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 10347,
											"end": 10360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10347,
											"end": 10360,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 10347,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10347,
											"end": 10360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10281,
											"end": 10367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10281,
											"end": 10367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11522,
											"end": 11804,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 11522,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11657,
											"end": 11658,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11643,
											"end": 11659,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11643,
											"end": 11659,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11643,
											"end": 11645,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11643,
											"end": 11659,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11643,
											"end": 11659,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11643,
											"end": 11659,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11639,
											"end": 11727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 11639,
											"end": 11727,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11713,
											"end": 11714,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 11682,
											"end": 11716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11639,
											"end": 11727,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 11639,
											"end": 11727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11736,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 11771,
											"end": 11772,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11775,
											"end": 11777,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11779,
											"end": 11782,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11784,
											"end": 11790,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11792,
											"end": 11796,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11736,
											"end": 11762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 11736,
											"end": 11797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11736,
											"end": 11797,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 11736,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11522,
											"end": 11804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11522,
											"end": 11804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11522,
											"end": 11804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11522,
											"end": 11804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11522,
											"end": 11804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 655,
											"end": 751,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 655,
											"end": 751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 708,
											"end": 715,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 727,
											"end": 744,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 727,
											"end": 744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 655,
											"end": 751,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 655,
											"end": 751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9014,
											"end": 9459,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 9014,
											"end": 9459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9221,
											"end": 9222,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9207,
											"end": 9223,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9207,
											"end": 9223,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9207,
											"end": 9209,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9207,
											"end": 9223,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9207,
											"end": 9223,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9207,
											"end": 9223,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9203,
											"end": 9291,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 9203,
											"end": 9291,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9278,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9246,
											"end": 9280,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9246,
											"end": 9280,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9246,
											"end": 9280,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9246,
											"end": 9280,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9246,
											"end": 9280,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9246,
											"end": 9280,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9246,
											"end": 9280,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9246,
											"end": 9280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 9246,
											"end": 9280,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9246,
											"end": 9280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9246,
											"end": 9280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 9246,
											"end": 9280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9246,
											"end": 9280,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 9246,
											"end": 9280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9246,
											"end": 9280,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9246,
											"end": 9280,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9246,
											"end": 9280,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9246,
											"end": 9280,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9246,
											"end": 9280,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9246,
											"end": 9280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9246,
											"end": 9280,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9203,
											"end": 9291,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 9203,
											"end": 9291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9304,
											"end": 9322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9304,
											"end": 9322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9304,
											"end": 9308,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9304,
											"end": 9322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9304,
											"end": 9322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9304,
											"end": 9322,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9300,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 9300,
											"end": 9388,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9374,
											"end": 9375,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9345,
											"end": 9377,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9345,
											"end": 9377,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9345,
											"end": 9377,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9345,
											"end": 9377,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9345,
											"end": 9377,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9345,
											"end": 9377,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9345,
											"end": 9377,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9345,
											"end": 9377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 9345,
											"end": 9377,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9345,
											"end": 9377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9345,
											"end": 9377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 9345,
											"end": 9377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9345,
											"end": 9377,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 9345,
											"end": 9377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9345,
											"end": 9377,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9345,
											"end": 9377,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9345,
											"end": 9377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9345,
											"end": 9377,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9345,
											"end": 9377,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9345,
											"end": 9377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9345,
											"end": 9377,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9300,
											"end": 9388,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 9300,
											"end": 9388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9397,
											"end": 9452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 9424,
											"end": 9428,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9430,
											"end": 9432,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9434,
											"end": 9437,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9439,
											"end": 9445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9447,
											"end": 9451,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9397,
											"end": 9423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 9397,
											"end": 9452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9397,
											"end": 9452,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 9397,
											"end": 9452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9014,
											"end": 9459,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9014,
											"end": 9459,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9014,
											"end": 9459,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9014,
											"end": 9459,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9014,
											"end": 9459,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9014,
											"end": 9459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4602,
											"end": 4799,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4602,
											"end": 4799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4688,
											"end": 4699,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 4780,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4771,
											"end": 4774,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 4781,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4760,
											"end": 4764,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4755,
											"end": 4758,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4751,
											"end": 4765,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4782,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4783,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4783,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4783,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4602,
											"end": 4799,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4602,
											"end": 4799,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4602,
											"end": 4799,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4602,
											"end": 4799,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4602,
											"end": 4799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4203,
											"end": 4400,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4203,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4289,
											"end": 4300,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4381,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4372,
											"end": 4375,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4382,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4365,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4356,
											"end": 4359,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4352,
											"end": 4366,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4348,
											"end": 4383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4342,
											"end": 4384,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4384,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4384,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4203,
											"end": 4400,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4203,
											"end": 4400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4203,
											"end": 4400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4203,
											"end": 4400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4203,
											"end": 4400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 3098,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2911,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3003,
											"end": 3009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3051,
											"end": 3091,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2974,
											"end": 3098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 3098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 3098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10745,
											"end": 11091,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 10745,
											"end": 11091,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10855,
											"end": 10856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10841,
											"end": 10857,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10841,
											"end": 10857,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10841,
											"end": 10843,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10841,
											"end": 10857,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10841,
											"end": 10857,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10841,
											"end": 10857,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 10837,
											"end": 10925,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10911,
											"end": 10912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 10880,
											"end": 10914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10914,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10925,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 10837,
											"end": 10925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 10955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10957,
											"end": 10980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10984,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 11003,
											"end": 11005,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11007,
											"end": 11012,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10984,
											"end": 11002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 10984,
											"end": 11013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10984,
											"end": 11013,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 10984,
											"end": 11013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10934,
											"end": 11013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10934,
											"end": 11013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10934,
											"end": 11013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10934,
											"end": 11013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11023,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 11058,
											"end": 11059,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11062,
											"end": 11064,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11066,
											"end": 11069,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11071,
											"end": 11077,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11079,
											"end": 11083,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11023,
											"end": 11049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 11023,
											"end": 11084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11023,
											"end": 11084,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 11023,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10827,
											"end": 11091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10827,
											"end": 11091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10745,
											"end": 11091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10745,
											"end": 11091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10745,
											"end": 11091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10745,
											"end": 11091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10745,
											"end": 11091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13267,
											"end": 13582,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 13267,
											"end": 13582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13394,
											"end": 13395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13374,
											"end": 13396,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13374,
											"end": 13396,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13374,
											"end": 13382,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13374,
											"end": 13396,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13374,
											"end": 13396,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13374,
											"end": 13396,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13370,
											"end": 13464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 13370,
											"end": 13464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13450,
											"end": 13451,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13419,
											"end": 13453,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13419,
											"end": 13453,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13419,
											"end": 13453,
											"name": "PUSH",
											"source": 2,
											"value": "CED3E10000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13419,
											"end": 13453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13419,
											"end": 13453,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13419,
											"end": 13453,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13419,
											"end": 13453,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13419,
											"end": 13453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 13419,
											"end": 13453,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13419,
											"end": 13453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13419,
											"end": 13453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 13419,
											"end": 13453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13419,
											"end": 13453,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 13419,
											"end": 13453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13419,
											"end": 13453,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13419,
											"end": 13453,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13419,
											"end": 13453,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13419,
											"end": 13453,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13419,
											"end": 13453,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13419,
											"end": 13453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13419,
											"end": 13453,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13370,
											"end": 13464,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 13370,
											"end": 13464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13511,
											"end": 13519,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13491,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13473,
											"end": 13498,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13492,
											"end": 13497,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13498,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13473,
											"end": 13498,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13498,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13473,
											"end": 13498,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13498,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13498,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13498,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13473,
											"end": 13498,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13498,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13498,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13498,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13498,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13473,
											"end": 13498,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13498,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13473,
											"end": 13498,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13499,
											"end": 13507,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13508,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13473,
											"end": 13508,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13508,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13473,
											"end": 13508,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13508,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13473,
											"end": 13508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13508,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13473,
											"end": 13508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13473,
											"end": 13508,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13473,
											"end": 13519,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 13473,
											"end": 13519,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13519,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13519,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13519,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13519,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 13473,
											"end": 13519,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13519,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13519,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13519,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13519,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13519,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13519,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13519,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13519,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13519,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13519,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13473,
											"end": 13519,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13556,
											"end": 13564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13534,
											"end": 13575,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13534,
											"end": 13575,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13549,
											"end": 13554,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13534,
											"end": 13575,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13534,
											"end": 13575,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13534,
											"end": 13575,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13566,
											"end": 13574,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13534,
											"end": 13575,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13534,
											"end": 13575,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13534,
											"end": 13575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 13534,
											"end": 13575,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13534,
											"end": 13575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13534,
											"end": 13575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 13534,
											"end": 13575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13534,
											"end": 13575,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 13534,
											"end": 13575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13534,
											"end": 13575,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13534,
											"end": 13575,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13534,
											"end": 13575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13534,
											"end": 13575,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13534,
											"end": 13575,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13534,
											"end": 13575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13534,
											"end": 13575,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 13267,
											"end": 13582,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13267,
											"end": 13582,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13267,
											"end": 13582,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13267,
											"end": 13582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8150,
											"end": 8613,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 8150,
											"end": 8613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8286,
											"end": 8287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8272,
											"end": 8288,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8272,
											"end": 8288,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8272,
											"end": 8274,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8272,
											"end": 8288,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8272,
											"end": 8288,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8272,
											"end": 8288,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8268,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 8268,
											"end": 8356,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8342,
											"end": 8343,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 8311,
											"end": 8345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8311,
											"end": 8345,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8268,
											"end": 8356,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 8268,
											"end": 8356,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8385,
											"end": 8386,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8369,
											"end": 8387,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8369,
											"end": 8387,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8369,
											"end": 8373,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8369,
											"end": 8387,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8369,
											"end": 8387,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8369,
											"end": 8387,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8365,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 8365,
											"end": 8453,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8439,
											"end": 8440,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8410,
											"end": 8442,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8410,
											"end": 8442,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8410,
											"end": 8442,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8410,
											"end": 8442,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8410,
											"end": 8442,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8410,
											"end": 8442,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8410,
											"end": 8442,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8410,
											"end": 8442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 8410,
											"end": 8442,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8410,
											"end": 8442,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8410,
											"end": 8442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 8410,
											"end": 8442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8410,
											"end": 8442,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 8410,
											"end": 8442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8410,
											"end": 8442,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8410,
											"end": 8442,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8410,
											"end": 8442,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8410,
											"end": 8442,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8410,
											"end": 8442,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8410,
											"end": 8442,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8410,
											"end": 8442,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8365,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 8365,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8483,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8485,
											"end": 8508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 8531,
											"end": 8533,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8535,
											"end": 8540,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 8512,
											"end": 8541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8541,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 8512,
											"end": 8541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8462,
											"end": 8541,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8462,
											"end": 8541,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8462,
											"end": 8541,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8462,
											"end": 8541,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8551,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 8578,
											"end": 8582,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8584,
											"end": 8586,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8588,
											"end": 8591,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8593,
											"end": 8599,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8601,
											"end": 8605,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8551,
											"end": 8577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 8551,
											"end": 8606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8551,
											"end": 8606,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 8551,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8258,
											"end": 8613,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8258,
											"end": 8613,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8150,
											"end": 8613,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8150,
											"end": 8613,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8150,
											"end": 8613,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8150,
											"end": 8613,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8150,
											"end": 8613,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8150,
											"end": 8613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7003,
											"end": 7693,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 7003,
											"end": 7693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7204,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 7212,
											"end": 7216,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7218,
											"end": 7220,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7222,
											"end": 7225,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7227,
											"end": 7233,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7204,
											"end": 7211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 7204,
											"end": 7234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7204,
											"end": 7234,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 7204,
											"end": 7234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7262,
											"end": 7263,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7250,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7244,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 7244,
											"end": 7687,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7280,
											"end": 7296,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7299,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 7299,
											"end": 7309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 7299,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7299,
											"end": 7311,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 7299,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7280,
											"end": 7311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7280,
											"end": 7311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7343,
											"end": 7344,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7329,
											"end": 7332,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7329,
											"end": 7339,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7329,
											"end": 7344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7325,
											"end": 7677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 7325,
											"end": 7677,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7364,
											"end": 7374,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 7400,
											"end": 7401,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7380,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7377,
											"end": 7399,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7377,
											"end": 7399,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7377,
											"end": 7402,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7377,
											"end": 7402,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7377,
											"end": 7402,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7377,
											"end": 7402,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7377,
											"end": 7402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7377,
											"end": 7402,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 7377,
											"end": 7402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7364,
											"end": 7402,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7364,
											"end": 7402,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7420,
											"end": 7433,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7436,
											"end": 7464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 7462,
											"end": 7463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7436,
											"end": 7442,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7436,
											"end": 7461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7436,
											"end": 7461,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7436,
											"end": 7464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7436,
											"end": 7464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7436,
											"end": 7464,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7436,
											"end": 7464,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7436,
											"end": 7464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7436,
											"end": 7464,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 7436,
											"end": 7464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7420,
											"end": 7464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7420,
											"end": 7464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7482,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 7513,
											"end": 7521,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7523,
											"end": 7527,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7529,
											"end": 7531,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7533,
											"end": 7535,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7537,
											"end": 7542,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7548,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7482,
											"end": 7512,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 7482,
											"end": 7549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7482,
											"end": 7549,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 7482,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7325,
											"end": 7677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 7325,
											"end": 7677,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7325,
											"end": 7677,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 7325,
											"end": 7677,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7588,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 7624,
											"end": 7632,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7638,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7640,
											"end": 7642,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7644,
											"end": 7647,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7649,
											"end": 7655,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7657,
											"end": 7661,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7588,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 7588,
											"end": 7662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7588,
											"end": 7662,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 7588,
											"end": 7662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7325,
											"end": 7677,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 7325,
											"end": 7677,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7266,
											"end": 7687,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7244,
											"end": 7687,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 7244,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7003,
											"end": 7693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7003,
											"end": 7693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7003,
											"end": 7693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7003,
											"end": 7693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7003,
											"end": 7693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7003,
											"end": 7693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16079,
											"end": 16928,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 16079,
											"end": 16928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16187,
											"end": 16210,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 16212,
											"end": 16235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16373,
											"end": 16377,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16367,
											"end": 16378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16357,
											"end": 16378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16357,
											"end": 16378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16443,
											"end": 16444,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16435,
											"end": 16441,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16428,
											"end": 16445,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16581,
											"end": 16589,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16574,
											"end": 16578,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16566,
											"end": 16572,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16562,
											"end": 16579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16555,
											"end": 16590,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16703,
											"end": 16707,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16695,
											"end": 16701,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16691,
											"end": 16708,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16681,
											"end": 16708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16681,
											"end": 16708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16736,
											"end": 16737,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16728,
											"end": 16734,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16721,
											"end": 16738,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16777,
											"end": 16785,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16770,
											"end": 16774,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16762,
											"end": 16768,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16758,
											"end": 16775,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16751,
											"end": 16786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16906,
											"end": 16910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16898,
											"end": 16904,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16894,
											"end": 16911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16888,
											"end": 16892,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16881,
											"end": 16912,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16079,
											"end": 16928,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16079,
											"end": 16928,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16079,
											"end": 16928,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16079,
											"end": 16928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16079,
											"end": 16928,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16079,
											"end": 16928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 6424,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 5143,
											"end": 6424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5278,
											"end": 5284,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5278,
											"end": 5291,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5267,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5274,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5291,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5260,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 5260,
											"end": 5377,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5340,
											"end": 5343,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5340,
											"end": 5350,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5352,
											"end": 5358,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5352,
											"end": 5365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5366,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5314,
											"end": 5366,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5366,
											"name": "PUSH",
											"source": 2,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5314,
											"end": 5366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5366,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5366,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5314,
											"end": 5366,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 5314,
											"end": 5366,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5366,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 5314,
											"end": 5366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5366,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 5314,
											"end": 5366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5366,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5314,
											"end": 5366,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5366,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5366,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5366,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5260,
											"end": 5377,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 5260,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5387,
											"end": 5403,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 5406,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 5406,
											"end": 5418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5406,
											"end": 5418,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 5406,
											"end": 5418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5387,
											"end": 5418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5387,
											"end": 5418,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5434,
											"end": 5443,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5429,
											"end": 6120,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 5429,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5456,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5449,
											"end": 5450,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5449,
											"end": 5463,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5429,
											"end": 6120,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5429,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 5429,
											"end": 6120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5484,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5497,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 5520,
											"end": 5521,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5497,
											"end": 5500,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5497,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5497,
											"end": 5519,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5497,
											"end": 5522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5497,
											"end": 5522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5497,
											"end": 5522,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5497,
											"end": 5522,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5497,
											"end": 5522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5497,
											"end": 5522,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 5497,
											"end": 5522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5484,
											"end": 5522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5484,
											"end": 5522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5536,
											"end": 5549,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 5578,
											"end": 5579,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5558,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5552,
											"end": 5577,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5580,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5580,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5580,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5580,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 5552,
											"end": 5580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5536,
											"end": 5580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5536,
											"end": 5580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5615,
											"end": 5616,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5617,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5599,
											"end": 5617,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5599,
											"end": 5603,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5599,
											"end": 5617,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5599,
											"end": 5617,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5599,
											"end": 5617,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5595,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 5595,
											"end": 6015,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5637,
											"end": 5656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5659,
											"end": 5668,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5669,
											"end": 5671,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5672,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5672,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5659,
											"end": 5672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5672,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5672,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5659,
											"end": 5672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5659,
											"end": 5672,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5678,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5673,
											"end": 5677,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5678,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5659,
											"end": 5678,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5678,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5659,
											"end": 5678,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5678,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5678,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5678,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5659,
											"end": 5678,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5678,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5678,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5678,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5659,
											"end": 5678,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5678,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5659,
											"end": 5678,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5659,
											"end": 5678,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5637,
											"end": 5678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5637,
											"end": 5678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5714,
											"end": 5719,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5700,
											"end": 5711,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5700,
											"end": 5719,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5696,
											"end": 5825,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5696,
											"end": 5825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 5696,
											"end": 5825,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5777,
											"end": 5781,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5783,
											"end": 5794,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5796,
											"end": 5801,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5803,
											"end": 5805,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "3DEE4C500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 5750,
											"end": 5806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5750,
											"end": 5806,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5696,
											"end": 5825,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 5696,
											"end": 5825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 5982,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5963,
											"end": 5974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5963,
											"end": 5982,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5950,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5941,
											"end": 5954,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5951,
											"end": 5953,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5954,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5954,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5954,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5941,
											"end": 5954,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5954,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5954,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5954,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5954,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5941,
											"end": 5954,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5954,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5941,
											"end": 5954,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5960,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5955,
											"end": 5959,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5960,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5941,
											"end": 5960,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5960,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5941,
											"end": 5960,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5960,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5960,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5960,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5941,
											"end": 5960,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5960,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5960,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5960,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5960,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5941,
											"end": 5960,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5960,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5941,
											"end": 5960,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5982,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5982,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5941,
											"end": 5982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5619,
											"end": 6015,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5595,
											"end": 6015,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 5595,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6047,
											"end": 6048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6033,
											"end": 6049,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6033,
											"end": 6049,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6033,
											"end": 6035,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6033,
											"end": 6049,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6033,
											"end": 6049,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6033,
											"end": 6049,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6029,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 6029,
											"end": 6110,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6090,
											"end": 6095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6069,
											"end": 6082,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6079,
											"end": 6081,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6082,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6082,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6082,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6069,
											"end": 6082,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6082,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6082,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6082,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6069,
											"end": 6082,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6082,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6069,
											"end": 6082,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6083,
											"end": 6085,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6086,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6069,
											"end": 6095,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6095,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6095,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 6069,
											"end": 6095,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 6069,
											"end": 6095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6095,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 6069,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6095,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6095,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6069,
											"end": 6095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6029,
											"end": 6110,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 6029,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5470,
											"end": 6120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5470,
											"end": 6120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5468,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 5465,
											"end": 5468,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 5465,
											"end": 5468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5468,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 5465,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5468,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5468,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5429,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 5429,
											"end": 6120,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5429,
											"end": 6120,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 5429,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5429,
											"end": 6120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6148,
											"end": 6149,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6134,
											"end": 6137,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6144,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6149,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6130,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 6130,
											"end": 6418,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6165,
											"end": 6175,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6178,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 6201,
											"end": 6202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6178,
											"end": 6181,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6178,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6178,
											"end": 6200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6178,
											"end": 6203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6178,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6178,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6178,
											"end": 6203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6178,
											"end": 6203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6178,
											"end": 6203,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 6178,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6165,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6165,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6217,
											"end": 6230,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 6259,
											"end": 6260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6239,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6233,
											"end": 6258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6261,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6233,
											"end": 6261,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6261,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 6233,
											"end": 6261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6217,
											"end": 6261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6217,
											"end": 6261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6311,
											"end": 6313,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6305,
											"end": 6309,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6295,
											"end": 6303,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6315,
											"end": 6317,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6319,
											"end": 6324,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6280,
											"end": 6325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6130,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 6130,
											"end": 6418,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6130,
											"end": 6418,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 6130,
											"end": 6418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6391,
											"end": 6393,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6385,
											"end": 6389,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6375,
											"end": 6383,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6395,
											"end": 6398,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6406,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 6361,
											"end": 6407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6407,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6130,
											"end": 6418,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 6130,
											"end": 6418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5250,
											"end": 6424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 6424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 6424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 6424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 6424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 6424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13760,
											"end": 14734,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 13760,
											"end": 14734,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13983,
											"end": 13984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13966,
											"end": 13968,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13966,
											"end": 13980,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13966,
											"end": 13980,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13966,
											"end": 13980,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 13966,
											"end": 13984,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13962,
											"end": 14728,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13962,
											"end": 14728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 13962,
											"end": 14728,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14021,
											"end": 14023,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14042,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14004,
											"end": 14042,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14042,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14043,
											"end": 14051,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14053,
											"end": 14057,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14059,
											"end": 14061,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14063,
											"end": 14068,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14070,
											"end": 14074,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 14004,
											"end": 14075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 14004,
											"end": 14075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 14004,
											"end": 14075,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14376,
											"end": 14377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14359,
											"end": 14365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14359,
											"end": 14372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14359,
											"end": 14377,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 14355,
											"end": 14704,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14486,
											"end": 14488,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 14463,
											"end": 14489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14704,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 14355,
											"end": 14704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14656,
											"end": 14662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14650,
											"end": 14663,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14641,
											"end": 14647,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14637,
											"end": 14639,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14633,
											"end": 14648,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14626,
											"end": 14664,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 14000,
											"end": 14718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14136,
											"end": 14179,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14136,
											"end": 14179,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14136,
											"end": 14179,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14124,
											"end": 14179,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14124,
											"end": 14179,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14124,
											"end": 14179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14124,
											"end": 14132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14124,
											"end": 14179,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14124,
											"end": 14179,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14124,
											"end": 14179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14124,
											"end": 14179,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14120,
											"end": 14294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 14120,
											"end": 14294,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14272,
											"end": 14274,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14249,
											"end": 14275,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14249,
											"end": 14275,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14249,
											"end": 14275,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14249,
											"end": 14275,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14249,
											"end": 14275,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14249,
											"end": 14275,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14249,
											"end": 14275,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14249,
											"end": 14275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 14249,
											"end": 14275,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14249,
											"end": 14275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14249,
											"end": 14275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 14249,
											"end": 14275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14249,
											"end": 14275,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 14249,
											"end": 14275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14249,
											"end": 14275,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14249,
											"end": 14275,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14249,
											"end": 14275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14249,
											"end": 14275,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14249,
											"end": 14275,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14249,
											"end": 14275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14249,
											"end": 14275,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14120,
											"end": 14294,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 14120,
											"end": 14294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14076,
											"end": 14308,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13962,
											"end": 14728,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 13962,
											"end": 14728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13760,
											"end": 14734,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13760,
											"end": 14734,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13760,
											"end": 14734,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13760,
											"end": 14734,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13760,
											"end": 14734,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13760,
											"end": 14734,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13760,
											"end": 14734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14922,
											"end": 15963,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 14922,
											"end": 15963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15170,
											"end": 15171,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15153,
											"end": 15155,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15153,
											"end": 15167,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15153,
											"end": 15167,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15153,
											"end": 15167,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 15153,
											"end": 15171,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 15149,
											"end": 15957,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15149,
											"end": 15957,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 15149,
											"end": 15957,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15208,
											"end": 15210,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15234,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15191,
											"end": 15234,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15234,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 15235,
											"end": 15243,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15245,
											"end": 15249,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15251,
											"end": 15254,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15256,
											"end": 15262,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15264,
											"end": 15268,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 15191,
											"end": 15269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 15191,
											"end": 15269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 15191,
											"end": 15269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15605,
											"end": 15606,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15588,
											"end": 15594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15588,
											"end": 15601,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15588,
											"end": 15606,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15584,
											"end": 15933,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 15584,
											"end": 15933,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15715,
											"end": 15717,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15692,
											"end": 15718,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15692,
											"end": 15718,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15692,
											"end": 15718,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15692,
											"end": 15718,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15692,
											"end": 15718,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15692,
											"end": 15718,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15692,
											"end": 15718,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15692,
											"end": 15718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 15692,
											"end": 15718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15692,
											"end": 15718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15692,
											"end": 15718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 15692,
											"end": 15718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15692,
											"end": 15718,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 15692,
											"end": 15718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15692,
											"end": 15718,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15692,
											"end": 15718,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15692,
											"end": 15718,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15692,
											"end": 15718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15692,
											"end": 15718,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15692,
											"end": 15718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15692,
											"end": 15718,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15584,
											"end": 15933,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 15584,
											"end": 15933,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15885,
											"end": 15891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15879,
											"end": 15892,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15876,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15866,
											"end": 15868,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15862,
											"end": 15877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15893,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 15187,
											"end": 15947,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15360,
											"end": 15408,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 15360,
											"end": 15408,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 15360,
											"end": 15408,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 15348,
											"end": 15408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15348,
											"end": 15408,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15348,
											"end": 15408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15348,
											"end": 15356,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15348,
											"end": 15408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15348,
											"end": 15408,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15348,
											"end": 15408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15348,
											"end": 15408,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15344,
											"end": 15523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 15344,
											"end": 15523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15501,
											"end": 15503,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15478,
											"end": 15504,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15478,
											"end": 15504,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15478,
											"end": 15504,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15478,
											"end": 15504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15478,
											"end": 15504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15478,
											"end": 15504,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15478,
											"end": 15504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15478,
											"end": 15504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 15478,
											"end": 15504,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15478,
											"end": 15504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15478,
											"end": 15504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 15478,
											"end": 15504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15478,
											"end": 15504,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 15478,
											"end": 15504,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15478,
											"end": 15504,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15478,
											"end": 15504,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15478,
											"end": 15504,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15478,
											"end": 15504,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15478,
											"end": 15504,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15478,
											"end": 15504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15478,
											"end": 15504,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15344,
											"end": 15523,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 15344,
											"end": 15523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15270,
											"end": 15537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15149,
											"end": 15957,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 15149,
											"end": 15957,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14922,
											"end": 15963,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14922,
											"end": 15963,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14922,
											"end": 15963,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14922,
											"end": 15963,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14922,
											"end": 15963,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14922,
											"end": 15963,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14922,
											"end": 15963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 2256,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2184,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 2409,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 2566,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 2711,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 2963,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 3135,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3213,
											"end": 3330,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 3213,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3322,
											"end": 3323,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3319,
											"end": 3320,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3312,
											"end": 3324,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3336,
											"end": 3453,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 3336,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3445,
											"end": 3446,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3443,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3435,
											"end": 3447,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3500,
											"end": 3506,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3553,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3547,
											"end": 3554,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3542,
											"end": 3544,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3531,
											"end": 3545,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3527,
											"end": 3555,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3517,
											"end": 3555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3517,
											"end": 3555,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3459,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3567,
											"end": 3747,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 3567,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3615,
											"end": 3692,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3612,
											"end": 3613,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3693,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3716,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 3709,
											"end": 3710,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3702,
											"end": 3717,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3736,
											"end": 3740,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3733,
											"end": 3734,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3726,
											"end": 3741,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 3858,
											"end": 3862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 3836,
											"end": 3863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 3834,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3824,
											"end": 3864,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 3964,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3951,
											"end": 3973,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3930,
											"end": 3948,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3918,
											"end": 3928,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3915,
											"end": 3949,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3912,
											"end": 3974,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 3977,
											"end": 3995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4017,
											"end": 4027,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4013,
											"end": 4015,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4006,
											"end": 4028,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3796,
											"end": 4034,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3753,
											"end": 4034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4074,
											"end": 4080,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 4101,
											"end": 4121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4091,
											"end": 4121,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4091,
											"end": 4121,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 4158,
											"end": 4162,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4150,
											"end": 4156,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 4130,
											"end": 4163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4040,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4237,
											"end": 4241,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4319,
											"end": 4325,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 4349,
											"end": 4367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 4409,
											"end": 4415,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 4387,
											"end": 4416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4379,
											"end": 4416,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4379,
											"end": 4416,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4471,
											"end": 4475,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4465,
											"end": 4469,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4461,
											"end": 4476,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4476,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4476,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4635,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 4489,
											"end": 4635,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4586,
											"end": 4592,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4581,
											"end": 4584,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4576,
											"end": 4579,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4593,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 4627,
											"end": 4628,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4624,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4613,
											"end": 4616,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4609,
											"end": 4625,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4602,
											"end": 4629,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 5066,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 4641,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4744,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 4760,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 4802,
											"end": 4808,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4760,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 4760,
											"end": 4809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4760,
											"end": 4809,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 4760,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4744,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 4744,
											"end": 4810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4744,
											"end": 4810,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 4744,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4810,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4810,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4833,
											"end": 4839,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4826,
											"end": 4831,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4840,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4871,
											"end": 4875,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4864,
											"end": 4869,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4860,
											"end": 4876,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4909,
											"end": 4912,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4900,
											"end": 4906,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4898,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4891,
											"end": 4907,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4888,
											"end": 4913,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4885,
											"end": 4997,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4885,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 4885,
											"end": 4997,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4916,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 4916,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 4916,
											"end": 4995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4916,
											"end": 4995,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 4916,
											"end": 4995,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4885,
											"end": 4997,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 4885,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5006,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 5053,
											"end": 5059,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5048,
											"end": 5051,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5043,
											"end": 5046,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5006,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 5006,
											"end": 5060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5006,
											"end": 5060,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 5006,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4725,
											"end": 5066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 5066,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 5066,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 5066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 5066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 5066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4641,
											"end": 5066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5086,
											"end": 5426,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 5086,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5147,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5194,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5184,
											"end": 5188,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5176,
											"end": 5182,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5172,
											"end": 5189,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5168,
											"end": 5195,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5158,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 5158,
											"end": 5280,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5199,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 5199,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 5199,
											"end": 5278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5199,
											"end": 5278,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 5199,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5158,
											"end": 5280,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 5158,
											"end": 5280,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5316,
											"end": 5322,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5303,
											"end": 5323,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 5416,
											"end": 5419,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5414,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5401,
											"end": 5405,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5389,
											"end": 5406,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 5341,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5420,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 5341,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5420,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5420,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5148,
											"end": 5426,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5086,
											"end": 5426,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5086,
											"end": 5426,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5086,
											"end": 5426,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5086,
											"end": 5426,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5086,
											"end": 5426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5432,
											"end": 5941,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 5432,
											"end": 5941,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5552,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5538,
											"end": 5547,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5529,
											"end": 5536,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5548,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5521,
											"end": 5553,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5518,
											"end": 5637,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5518,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 5518,
											"end": 5637,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5556,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 5556,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 5556,
											"end": 5635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5556,
											"end": 5635,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 5556,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5518,
											"end": 5637,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 5518,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5704,
											"end": 5705,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5702,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5689,
											"end": 5706,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5676,
											"end": 5707,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5734,
											"end": 5752,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5726,
											"end": 5732,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5723,
											"end": 5753,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5756,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 5756,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 5756,
											"end": 5835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5756,
											"end": 5835,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 5756,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5861,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 5916,
											"end": 5923,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5907,
											"end": 5913,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5896,
											"end": 5905,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5892,
											"end": 5914,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5861,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 5861,
											"end": 5924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5861,
											"end": 5924,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 5861,
											"end": 5924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5924,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5924,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5647,
											"end": 5934,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5432,
											"end": 5941,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5432,
											"end": 5941,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5432,
											"end": 5941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5432,
											"end": 5941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5432,
											"end": 5941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5947,
											"end": 6276,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 5947,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6006,
											"end": 6012,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6057,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6043,
											"end": 6052,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6034,
											"end": 6041,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6030,
											"end": 6053,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6026,
											"end": 6058,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6023,
											"end": 6142,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6023,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 6023,
											"end": 6142,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6061,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 6061,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 6061,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6061,
											"end": 6140,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 6061,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6023,
											"end": 6142,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 6023,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6181,
											"end": 6182,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6206,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 6251,
											"end": 6258,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6242,
											"end": 6248,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6231,
											"end": 6240,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6227,
											"end": 6249,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 6206,
											"end": 6259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6259,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 6206,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6259,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6259,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6152,
											"end": 6269,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5947,
											"end": 6276,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5947,
											"end": 6276,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5947,
											"end": 6276,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5947,
											"end": 6276,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5947,
											"end": 6276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6381,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 6282,
											"end": 6381,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6334,
											"end": 6340,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6368,
											"end": 6373,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6362,
											"end": 6374,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6352,
											"end": 6374,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6352,
											"end": 6374,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6381,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6381,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6381,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6282,
											"end": 6381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6387,
											"end": 6556,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 6387,
											"end": 6556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6471,
											"end": 6482,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6505,
											"end": 6511,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6500,
											"end": 6503,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6545,
											"end": 6549,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6540,
											"end": 6543,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6536,
											"end": 6550,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6521,
											"end": 6550,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6521,
											"end": 6550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6387,
											"end": 6556,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6387,
											"end": 6556,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6387,
											"end": 6556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6387,
											"end": 6556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6387,
											"end": 6556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6562,
											"end": 6808,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 6562,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6643,
											"end": 6644,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6653,
											"end": 6766,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 6653,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6667,
											"end": 6673,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6664,
											"end": 6665,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6661,
											"end": 6674,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6653,
											"end": 6766,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6653,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 6653,
											"end": 6766,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6752,
											"end": 6753,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6747,
											"end": 6750,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6743,
											"end": 6754,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6737,
											"end": 6755,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6734,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6728,
											"end": 6731,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6724,
											"end": 6735,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6717,
											"end": 6756,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6691,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6686,
											"end": 6687,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6682,
											"end": 6692,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6677,
											"end": 6692,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6677,
											"end": 6692,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6653,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 6653,
											"end": 6766,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6653,
											"end": 6766,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 6653,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6800,
											"end": 6801,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6797,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6786,
											"end": 6789,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6782,
											"end": 6798,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6775,
											"end": 6802,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6624,
											"end": 6808,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6562,
											"end": 6808,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6562,
											"end": 6808,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6562,
											"end": 6808,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6562,
											"end": 6808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 7191,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 6814,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6902,
											"end": 6905,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 6963,
											"end": 6968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6930,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 6930,
											"end": 6969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6930,
											"end": 6969,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 6930,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6985,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 7049,
											"end": 7055,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7044,
											"end": 7047,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6985,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 6985,
											"end": 7056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6985,
											"end": 7056,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 6985,
											"end": 7056,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6978,
											"end": 7056,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6978,
											"end": 7056,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7065,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 7123,
											"end": 7129,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7118,
											"end": 7121,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7111,
											"end": 7115,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7104,
											"end": 7109,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7100,
											"end": 7116,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7065,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 7065,
											"end": 7130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7065,
											"end": 7130,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 7065,
											"end": 7130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7155,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 7177,
											"end": 7183,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7155,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 7155,
											"end": 7184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7155,
											"end": 7184,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 7155,
											"end": 7184,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7150,
											"end": 7153,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7146,
											"end": 7185,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7139,
											"end": 7185,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7139,
											"end": 7185,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 7191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 7191,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 7191,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 7191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 7191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 7191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7197,
											"end": 7510,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 7197,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7310,
											"end": 7314,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7350,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7337,
											"end": 7346,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7333,
											"end": 7351,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7325,
											"end": 7351,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7325,
											"end": 7351,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7397,
											"end": 7406,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7391,
											"end": 7395,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7387,
											"end": 7407,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7383,
											"end": 7384,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7381,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7408,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7425,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 7498,
											"end": 7502,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7489,
											"end": 7495,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7425,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 7425,
											"end": 7503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7425,
											"end": 7503,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 7425,
											"end": 7503,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7417,
											"end": 7503,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7417,
											"end": 7503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7197,
											"end": 7510,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7197,
											"end": 7510,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7197,
											"end": 7510,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7197,
											"end": 7510,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7197,
											"end": 7510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 7827,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 7516,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7593,
											"end": 7597,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7683,
											"end": 7701,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7675,
											"end": 7681,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7672,
											"end": 7702,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7669,
											"end": 7725,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7669,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 7669,
											"end": 7725,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7705,
											"end": 7723,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 7705,
											"end": 7723,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 7705,
											"end": 7723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7705,
											"end": 7723,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 7705,
											"end": 7723,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7669,
											"end": 7725,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 7669,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7755,
											"end": 7759,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7747,
											"end": 7753,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7743,
											"end": 7760,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7735,
											"end": 7760,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7735,
											"end": 7760,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7815,
											"end": 7819,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7809,
											"end": 7813,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7805,
											"end": 7820,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7797,
											"end": 7820,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7797,
											"end": 7820,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 7827,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 7827,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 7827,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 7827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7833,
											"end": 7950,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 7833,
											"end": 7950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7942,
											"end": 7943,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7939,
											"end": 7940,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7932,
											"end": 7944,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7973,
											"end": 8683,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 7973,
											"end": 8683,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8069,
											"end": 8074,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8094,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 8110,
											"end": 8174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 8167,
											"end": 8173,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8110,
											"end": 8174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 8110,
											"end": 8174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8110,
											"end": 8174,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 8110,
											"end": 8174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8094,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 8094,
											"end": 8175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8094,
											"end": 8175,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 8094,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8085,
											"end": 8175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8085,
											"end": 8175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8195,
											"end": 8200,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8224,
											"end": 8230,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8217,
											"end": 8222,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8210,
											"end": 8231,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8258,
											"end": 8262,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8251,
											"end": 8256,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8247,
											"end": 8263,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8240,
											"end": 8263,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8240,
											"end": 8263,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8311,
											"end": 8315,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8303,
											"end": 8309,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8299,
											"end": 8316,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 8291,
											"end": 8297,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8287,
											"end": 8317,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8340,
											"end": 8343,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8332,
											"end": 8338,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8329,
											"end": 8344,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8326,
											"end": 8448,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8326,
											"end": 8448,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 8326,
											"end": 8448,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8359,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 8359,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 8359,
											"end": 8438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8359,
											"end": 8438,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 8359,
											"end": 8438,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8326,
											"end": 8448,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 8326,
											"end": 8448,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8474,
											"end": 8480,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8457,
											"end": 8677,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 8457,
											"end": 8677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8491,
											"end": 8497,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8486,
											"end": 8489,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8483,
											"end": 8498,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8457,
											"end": 8677,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8457,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 8457,
											"end": 8677,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8566,
											"end": 8569,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8595,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 8628,
											"end": 8631,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8616,
											"end": 8626,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8595,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 8595,
											"end": 8632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8595,
											"end": 8632,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 8595,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8590,
											"end": 8593,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8583,
											"end": 8633,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8662,
											"end": 8666,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8657,
											"end": 8660,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8653,
											"end": 8667,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8646,
											"end": 8667,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8646,
											"end": 8667,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8533,
											"end": 8677,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8517,
											"end": 8521,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8512,
											"end": 8515,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8508,
											"end": 8522,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8501,
											"end": 8522,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8501,
											"end": 8522,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8457,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 8457,
											"end": 8677,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8457,
											"end": 8677,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 8457,
											"end": 8677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8461,
											"end": 8482,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8075,
											"end": 8683,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8075,
											"end": 8683,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7973,
											"end": 8683,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7973,
											"end": 8683,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7973,
											"end": 8683,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7973,
											"end": 8683,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7973,
											"end": 8683,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7973,
											"end": 8683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8706,
											"end": 9076,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 8706,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8777,
											"end": 8782,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8826,
											"end": 8829,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8819,
											"end": 8823,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 8811,
											"end": 8817,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8807,
											"end": 8824,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8803,
											"end": 8830,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8793,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 8793,
											"end": 8915,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8834,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 8834,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 8834,
											"end": 8913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8834,
											"end": 8913,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 8834,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8793,
											"end": 8915,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 8793,
											"end": 8915,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8951,
											"end": 8957,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8938,
											"end": 8958,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8976,
											"end": 9070,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 9066,
											"end": 9069,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9058,
											"end": 9064,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9051,
											"end": 9055,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9043,
											"end": 9049,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9039,
											"end": 9056,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8976,
											"end": 9070,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 8976,
											"end": 9070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8976,
											"end": 9070,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 8976,
											"end": 9070,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8967,
											"end": 9070,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8967,
											"end": 9070,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8783,
											"end": 9076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8706,
											"end": 9076,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8706,
											"end": 9076,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8706,
											"end": 9076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8706,
											"end": 9076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8706,
											"end": 9076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9082,
											"end": 9389,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 9082,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9143,
											"end": 9147,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9233,
											"end": 9251,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9225,
											"end": 9231,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9222,
											"end": 9252,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9219,
											"end": 9275,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9219,
											"end": 9275,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 9219,
											"end": 9275,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9255,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 9255,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 9255,
											"end": 9273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9255,
											"end": 9273,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 9255,
											"end": 9273,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9219,
											"end": 9275,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 9219,
											"end": 9275,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9293,
											"end": 9322,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 9315,
											"end": 9321,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9293,
											"end": 9322,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 9293,
											"end": 9322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9293,
											"end": 9322,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 9293,
											"end": 9322,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9285,
											"end": 9322,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9285,
											"end": 9322,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9377,
											"end": 9381,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9371,
											"end": 9375,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9367,
											"end": 9382,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9359,
											"end": 9382,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9359,
											"end": 9382,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9082,
											"end": 9389,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9082,
											"end": 9389,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9082,
											"end": 9389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9082,
											"end": 9389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9395,
											"end": 9818,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 9395,
											"end": 9818,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9472,
											"end": 9477,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9562,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 9513,
											"end": 9561,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 9554,
											"end": 9560,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9513,
											"end": 9561,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 9513,
											"end": 9561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9513,
											"end": 9561,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 9513,
											"end": 9561,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9497,
											"end": 9562,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 9497,
											"end": 9562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9497,
											"end": 9562,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 9497,
											"end": 9562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9488,
											"end": 9562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9488,
											"end": 9562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9585,
											"end": 9591,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9578,
											"end": 9583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9571,
											"end": 9592,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9623,
											"end": 9627,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9616,
											"end": 9621,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9612,
											"end": 9628,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9661,
											"end": 9664,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9652,
											"end": 9658,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9647,
											"end": 9650,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9643,
											"end": 9659,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9640,
											"end": 9665,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9637,
											"end": 9749,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9637,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 9637,
											"end": 9749,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9668,
											"end": 9747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 9668,
											"end": 9747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 9668,
											"end": 9747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9668,
											"end": 9747,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 9668,
											"end": 9747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9637,
											"end": 9749,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 9637,
											"end": 9749,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9758,
											"end": 9812,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9800,
											"end": 9803,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9795,
											"end": 9798,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9758,
											"end": 9812,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 9758,
											"end": 9812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9758,
											"end": 9812,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 9758,
											"end": 9812,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9478,
											"end": 9818,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9395,
											"end": 9818,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9395,
											"end": 9818,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9395,
											"end": 9818,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9395,
											"end": 9818,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9395,
											"end": 9818,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9395,
											"end": 9818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9837,
											"end": 10175,
											"name": "tag",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 9837,
											"end": 10175,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9892,
											"end": 9897,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9941,
											"end": 9944,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9934,
											"end": 9938,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 9926,
											"end": 9932,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9922,
											"end": 9939,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9918,
											"end": 9945,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9908,
											"end": 10030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 9908,
											"end": 10030,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9949,
											"end": 10028,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 9949,
											"end": 10028,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 9949,
											"end": 10028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9949,
											"end": 10028,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 9949,
											"end": 10028,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9908,
											"end": 10030,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 9908,
											"end": 10030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10066,
											"end": 10072,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10053,
											"end": 10073,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 10091,
											"end": 10169,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 10165,
											"end": 10168,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10157,
											"end": 10163,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10150,
											"end": 10154,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10142,
											"end": 10148,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10138,
											"end": 10155,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10091,
											"end": 10169,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 10091,
											"end": 10169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10091,
											"end": 10169,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 10091,
											"end": 10169,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10082,
											"end": 10169,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10082,
											"end": 10169,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9898,
											"end": 10175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9837,
											"end": 10175,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9837,
											"end": 10175,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9837,
											"end": 10175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9837,
											"end": 10175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9837,
											"end": 10175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10181,
											"end": 11544,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 10181,
											"end": 11544,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10326,
											"end": 10332,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10334,
											"end": 10340,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10342,
											"end": 10348,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10350,
											"end": 10356,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10402,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 10387,
											"end": 10396,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10378,
											"end": 10385,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 10374,
											"end": 10397,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10370,
											"end": 10403,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10367,
											"end": 10487,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10367,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 10367,
											"end": 10487,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10406,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 10406,
											"end": 10485,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 10406,
											"end": 10485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10406,
											"end": 10485,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 10406,
											"end": 10485,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10367,
											"end": 10487,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 10367,
											"end": 10487,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10526,
											"end": 10527,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10551,
											"end": 10604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 10596,
											"end": 10603,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 10587,
											"end": 10593,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10576,
											"end": 10585,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10572,
											"end": 10594,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10551,
											"end": 10604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 10551,
											"end": 10604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10551,
											"end": 10604,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 10551,
											"end": 10604,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10541,
											"end": 10604,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 10541,
											"end": 10604,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10497,
											"end": 10614,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10681,
											"end": 10683,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10670,
											"end": 10679,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10666,
											"end": 10684,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10653,
											"end": 10685,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 10712,
											"end": 10730,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10704,
											"end": 10710,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10701,
											"end": 10731,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10698,
											"end": 10815,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10698,
											"end": 10815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 10698,
											"end": 10815,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10734,
											"end": 10813,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 10734,
											"end": 10813,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 10734,
											"end": 10813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10734,
											"end": 10813,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 10734,
											"end": 10813,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10698,
											"end": 10815,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 10698,
											"end": 10815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10839,
											"end": 10917,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 10909,
											"end": 10916,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 10900,
											"end": 10906,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10889,
											"end": 10898,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10885,
											"end": 10907,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10839,
											"end": 10917,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 10839,
											"end": 10917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10839,
											"end": 10917,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 10839,
											"end": 10917,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10829,
											"end": 10917,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10829,
											"end": 10917,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10624,
											"end": 10927,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10994,
											"end": 10996,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10983,
											"end": 10992,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10979,
											"end": 10997,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10966,
											"end": 10998,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 11025,
											"end": 11043,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11017,
											"end": 11023,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11014,
											"end": 11044,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11011,
											"end": 11128,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11011,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 11011,
											"end": 11128,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11047,
											"end": 11126,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 11047,
											"end": 11126,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 11047,
											"end": 11126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11047,
											"end": 11126,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 11047,
											"end": 11126,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11011,
											"end": 11128,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 11011,
											"end": 11128,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11152,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11213,
											"end": 11219,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11202,
											"end": 11211,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11198,
											"end": 11220,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11152,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 11152,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11152,
											"end": 11230,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 11152,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11142,
											"end": 11230,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11142,
											"end": 11230,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10937,
											"end": 11240,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11307,
											"end": 11309,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11296,
											"end": 11305,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11292,
											"end": 11310,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11279,
											"end": 11311,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 11338,
											"end": 11356,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11330,
											"end": 11336,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11327,
											"end": 11357,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11324,
											"end": 11441,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11324,
											"end": 11441,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 11324,
											"end": 11441,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11360,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 11360,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 11360,
											"end": 11439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11360,
											"end": 11439,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 11360,
											"end": 11439,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11324,
											"end": 11441,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 11324,
											"end": 11441,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11465,
											"end": 11527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 11519,
											"end": 11526,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11510,
											"end": 11516,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11499,
											"end": 11508,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11495,
											"end": 11517,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11465,
											"end": 11527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 11465,
											"end": 11527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11465,
											"end": 11527,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 11465,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11455,
											"end": 11527,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11455,
											"end": 11527,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11250,
											"end": 11537,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10181,
											"end": 11544,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10181,
											"end": 11544,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 10181,
											"end": 11544,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10181,
											"end": 11544,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 10181,
											"end": 11544,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10181,
											"end": 11544,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10181,
											"end": 11544,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10181,
											"end": 11544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11550,
											"end": 13059,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 11550,
											"end": 13059,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11704,
											"end": 11710,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11712,
											"end": 11718,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11720,
											"end": 11726,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11728,
											"end": 11734,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11736,
											"end": 11742,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11785,
											"end": 11788,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 11773,
											"end": 11782,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11764,
											"end": 11771,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11760,
											"end": 11783,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11756,
											"end": 11789,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11753,
											"end": 11873,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11753,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 11753,
											"end": 11873,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11792,
											"end": 11871,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 11792,
											"end": 11871,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 11792,
											"end": 11871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11792,
											"end": 11871,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 11792,
											"end": 11871,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11753,
											"end": 11873,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 11753,
											"end": 11873,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11912,
											"end": 11913,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11937,
											"end": 11990,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 11982,
											"end": 11989,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11973,
											"end": 11979,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11962,
											"end": 11971,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 11958,
											"end": 11980,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11937,
											"end": 11990,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 11937,
											"end": 11990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11937,
											"end": 11990,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 11937,
											"end": 11990,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11927,
											"end": 11990,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 11927,
											"end": 11990,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11883,
											"end": 12000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12039,
											"end": 12041,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12065,
											"end": 12118,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 12110,
											"end": 12117,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12101,
											"end": 12107,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12090,
											"end": 12099,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 12086,
											"end": 12108,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12065,
											"end": 12118,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 12065,
											"end": 12118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12065,
											"end": 12118,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 12065,
											"end": 12118,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12055,
											"end": 12118,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 12055,
											"end": 12118,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12010,
											"end": 12128,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12195,
											"end": 12197,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12184,
											"end": 12193,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12180,
											"end": 12198,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12167,
											"end": 12199,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 12226,
											"end": 12244,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12218,
											"end": 12224,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12215,
											"end": 12245,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12212,
											"end": 12329,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12212,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 12212,
											"end": 12329,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12248,
											"end": 12327,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 12248,
											"end": 12327,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 12248,
											"end": 12327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12248,
											"end": 12327,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 12248,
											"end": 12327,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12212,
											"end": 12329,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 12212,
											"end": 12329,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12353,
											"end": 12431,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 12423,
											"end": 12430,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12414,
											"end": 12420,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12403,
											"end": 12412,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 12399,
											"end": 12421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12353,
											"end": 12431,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 12353,
											"end": 12431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12353,
											"end": 12431,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 12353,
											"end": 12431,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12343,
											"end": 12431,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12343,
											"end": 12431,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12138,
											"end": 12441,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12508,
											"end": 12510,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 12497,
											"end": 12506,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12493,
											"end": 12511,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12480,
											"end": 12512,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12531,
											"end": 12537,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12528,
											"end": 12558,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12525,
											"end": 12642,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12525,
											"end": 12642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 12525,
											"end": 12642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12561,
											"end": 12640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 12561,
											"end": 12640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 12561,
											"end": 12640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12561,
											"end": 12640,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 12561,
											"end": 12640,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12525,
											"end": 12642,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 12525,
											"end": 12642,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12666,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 12736,
											"end": 12743,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12727,
											"end": 12733,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12716,
											"end": 12725,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 12712,
											"end": 12734,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12666,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 12666,
											"end": 12744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12666,
											"end": 12744,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 12666,
											"end": 12744,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12656,
											"end": 12744,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12656,
											"end": 12744,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12451,
											"end": 12754,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12821,
											"end": 12824,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 12810,
											"end": 12819,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12806,
											"end": 12825,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12793,
											"end": 12826,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 12853,
											"end": 12871,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12845,
											"end": 12851,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12842,
											"end": 12872,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12956,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 12839,
											"end": 12956,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12875,
											"end": 12954,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 12875,
											"end": 12954,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 12875,
											"end": 12954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12875,
											"end": 12954,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 12875,
											"end": 12954,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12956,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 12839,
											"end": 12956,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12980,
											"end": 13042,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 13034,
											"end": 13041,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 13025,
											"end": 13031,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13014,
											"end": 13023,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 13010,
											"end": 13032,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12980,
											"end": 13042,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 12980,
											"end": 13042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12980,
											"end": 13042,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 12980,
											"end": 13042,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12970,
											"end": 13042,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12970,
											"end": 13042,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12764,
											"end": 13052,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11550,
											"end": 13059,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11550,
											"end": 13059,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 11550,
											"end": 13059,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11550,
											"end": 13059,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11550,
											"end": 13059,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 11550,
											"end": 13059,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11550,
											"end": 13059,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11550,
											"end": 13059,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11550,
											"end": 13059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13065,
											"end": 13376,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 13065,
											"end": 13376,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13142,
											"end": 13146,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13232,
											"end": 13250,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13224,
											"end": 13230,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13221,
											"end": 13251,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 13218,
											"end": 13274,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13218,
											"end": 13274,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 13218,
											"end": 13274,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13254,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 13254,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 13254,
											"end": 13272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13254,
											"end": 13272,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 13254,
											"end": 13272,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13218,
											"end": 13274,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 13218,
											"end": 13274,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13304,
											"end": 13308,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13296,
											"end": 13302,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13292,
											"end": 13309,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 13284,
											"end": 13309,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13284,
											"end": 13309,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13364,
											"end": 13368,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13358,
											"end": 13362,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13354,
											"end": 13369,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13346,
											"end": 13369,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13346,
											"end": 13369,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13065,
											"end": 13376,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13065,
											"end": 13376,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13065,
											"end": 13376,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13065,
											"end": 13376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 14109,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 13399,
											"end": 14109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13495,
											"end": 13500,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13520,
											"end": 13601,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 13536,
											"end": 13600,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 13593,
											"end": 13599,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13536,
											"end": 13600,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 13536,
											"end": 13600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13536,
											"end": 13600,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 13536,
											"end": 13600,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13520,
											"end": 13601,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 13520,
											"end": 13601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13520,
											"end": 13601,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 13520,
											"end": 13601,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13511,
											"end": 13601,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13511,
											"end": 13601,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13621,
											"end": 13626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13650,
											"end": 13656,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13643,
											"end": 13648,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13636,
											"end": 13657,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13684,
											"end": 13688,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13677,
											"end": 13682,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13673,
											"end": 13689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13666,
											"end": 13689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13666,
											"end": 13689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13737,
											"end": 13741,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13729,
											"end": 13735,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13725,
											"end": 13742,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 13717,
											"end": 13723,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13713,
											"end": 13743,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13766,
											"end": 13769,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13758,
											"end": 13764,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13755,
											"end": 13770,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 13752,
											"end": 13874,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13752,
											"end": 13874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 13752,
											"end": 13874,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13785,
											"end": 13864,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 13785,
											"end": 13864,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 13785,
											"end": 13864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13785,
											"end": 13864,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 13785,
											"end": 13864,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13752,
											"end": 13874,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 13752,
											"end": 13874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13900,
											"end": 13906,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13883,
											"end": 14103,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 13883,
											"end": 14103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13917,
											"end": 13923,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13912,
											"end": 13915,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13909,
											"end": 13924,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13883,
											"end": 14103,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13883,
											"end": 14103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 13883,
											"end": 14103,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13992,
											"end": 13995,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14021,
											"end": 14058,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 14054,
											"end": 14057,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 14042,
											"end": 14052,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14021,
											"end": 14058,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 14021,
											"end": 14058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14021,
											"end": 14058,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 14021,
											"end": 14058,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14016,
											"end": 14019,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14009,
											"end": 14059,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14088,
											"end": 14092,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14083,
											"end": 14086,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14079,
											"end": 14093,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14072,
											"end": 14093,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14072,
											"end": 14093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13959,
											"end": 14103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13943,
											"end": 13947,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13938,
											"end": 13941,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13934,
											"end": 13948,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13927,
											"end": 13948,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13927,
											"end": 13948,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13883,
											"end": 14103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 13883,
											"end": 14103,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13883,
											"end": 14103,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 13883,
											"end": 14103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13887,
											"end": 13908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13501,
											"end": 14109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13501,
											"end": 14109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 14109,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 14109,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 14109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 14109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 14109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 14109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14132,
											"end": 14502,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 14132,
											"end": 14502,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14203,
											"end": 14208,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14252,
											"end": 14255,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14245,
											"end": 14249,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 14237,
											"end": 14243,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14233,
											"end": 14250,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14229,
											"end": 14256,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 14219,
											"end": 14341,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 14219,
											"end": 14341,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14260,
											"end": 14339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 14260,
											"end": 14339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 14260,
											"end": 14339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14260,
											"end": 14339,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 14260,
											"end": 14339,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14219,
											"end": 14341,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 14219,
											"end": 14341,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14377,
											"end": 14383,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14364,
											"end": 14384,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 14402,
											"end": 14496,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 14492,
											"end": 14495,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14484,
											"end": 14490,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14477,
											"end": 14481,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14469,
											"end": 14475,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14465,
											"end": 14482,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14402,
											"end": 14496,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 14402,
											"end": 14496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14402,
											"end": 14496,
											"name": "tag",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 14402,
											"end": 14496,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14393,
											"end": 14496,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14393,
											"end": 14496,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14209,
											"end": 14502,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14132,
											"end": 14502,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14132,
											"end": 14502,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14132,
											"end": 14502,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14132,
											"end": 14502,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14132,
											"end": 14502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14508,
											"end": 15402,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 14508,
											"end": 15402,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14626,
											"end": 14632,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14634,
											"end": 14640,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14683,
											"end": 14685,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14671,
											"end": 14680,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14662,
											"end": 14669,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14658,
											"end": 14681,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14654,
											"end": 14686,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 14651,
											"end": 14770,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14651,
											"end": 14770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 14651,
											"end": 14770,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14689,
											"end": 14768,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 14689,
											"end": 14768,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 14689,
											"end": 14768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14689,
											"end": 14768,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 14689,
											"end": 14768,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14651,
											"end": 14770,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 14651,
											"end": 14770,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14837,
											"end": 14838,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14826,
											"end": 14835,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14822,
											"end": 14839,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14809,
											"end": 14840,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 14867,
											"end": 14885,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14859,
											"end": 14865,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14856,
											"end": 14886,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14853,
											"end": 14970,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14853,
											"end": 14970,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 14853,
											"end": 14970,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14889,
											"end": 14968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 14889,
											"end": 14968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 14889,
											"end": 14968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14889,
											"end": 14968,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 14889,
											"end": 14968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14853,
											"end": 14970,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 14853,
											"end": 14970,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14994,
											"end": 15072,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 15064,
											"end": 15071,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15055,
											"end": 15061,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15044,
											"end": 15053,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 15040,
											"end": 15062,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14994,
											"end": 15072,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 14994,
											"end": 15072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14994,
											"end": 15072,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 14994,
											"end": 15072,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14984,
											"end": 15072,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14984,
											"end": 15072,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14780,
											"end": 15082,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15149,
											"end": 15151,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15138,
											"end": 15147,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15134,
											"end": 15152,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15121,
											"end": 15153,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 15180,
											"end": 15198,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15172,
											"end": 15178,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15169,
											"end": 15199,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 15166,
											"end": 15283,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15166,
											"end": 15283,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 15166,
											"end": 15283,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15202,
											"end": 15281,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 15202,
											"end": 15281,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 15202,
											"end": 15281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15202,
											"end": 15281,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 15202,
											"end": 15281,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15166,
											"end": 15283,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 15166,
											"end": 15283,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15307,
											"end": 15385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 15377,
											"end": 15384,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15368,
											"end": 15374,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15357,
											"end": 15366,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 15353,
											"end": 15375,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15307,
											"end": 15385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 15307,
											"end": 15385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15307,
											"end": 15385,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 15307,
											"end": 15385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15297,
											"end": 15385,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15297,
											"end": 15385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15092,
											"end": 15395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14508,
											"end": 15402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14508,
											"end": 15402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14508,
											"end": 15402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14508,
											"end": 15402,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14508,
											"end": 15402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14508,
											"end": 15402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15408,
											"end": 15522,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 15408,
											"end": 15522,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15475,
											"end": 15481,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15509,
											"end": 15514,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15503,
											"end": 15515,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 15493,
											"end": 15515,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15493,
											"end": 15515,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15408,
											"end": 15522,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15408,
											"end": 15522,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15408,
											"end": 15522,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15408,
											"end": 15522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15528,
											"end": 15712,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 15528,
											"end": 15712,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15627,
											"end": 15638,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15661,
											"end": 15667,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15656,
											"end": 15659,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15649,
											"end": 15668,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15701,
											"end": 15705,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15696,
											"end": 15699,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15692,
											"end": 15706,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15677,
											"end": 15706,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15677,
											"end": 15706,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15528,
											"end": 15712,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15528,
											"end": 15712,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15528,
											"end": 15712,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15528,
											"end": 15712,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15528,
											"end": 15712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15718,
											"end": 15850,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 15718,
											"end": 15850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15785,
											"end": 15789,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15808,
											"end": 15811,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15800,
											"end": 15811,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15800,
											"end": 15811,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15838,
											"end": 15842,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15833,
											"end": 15836,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15829,
											"end": 15843,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15821,
											"end": 15843,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15821,
											"end": 15843,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15718,
											"end": 15850,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15718,
											"end": 15850,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15718,
											"end": 15850,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15718,
											"end": 15850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15856,
											"end": 15964,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 15856,
											"end": 15964,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15933,
											"end": 15957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 15951,
											"end": 15956,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15933,
											"end": 15957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 15933,
											"end": 15957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15933,
											"end": 15957,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 15933,
											"end": 15957,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15928,
											"end": 15931,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15921,
											"end": 15958,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15856,
											"end": 15964,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15856,
											"end": 15964,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15856,
											"end": 15964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15970,
											"end": 16149,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 15970,
											"end": 16149,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16039,
											"end": 16049,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16060,
											"end": 16106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 16102,
											"end": 16105,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16094,
											"end": 16100,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16060,
											"end": 16106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 16060,
											"end": 16106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16060,
											"end": 16106,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 16060,
											"end": 16106,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16138,
											"end": 16142,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16133,
											"end": 16136,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16129,
											"end": 16143,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16115,
											"end": 16143,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16115,
											"end": 16143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15970,
											"end": 16149,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15970,
											"end": 16149,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15970,
											"end": 16149,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15970,
											"end": 16149,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15970,
											"end": 16149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16155,
											"end": 16268,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 16155,
											"end": 16268,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16225,
											"end": 16229,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16257,
											"end": 16261,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16252,
											"end": 16255,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16248,
											"end": 16262,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16240,
											"end": 16262,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16240,
											"end": 16262,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16155,
											"end": 16268,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16155,
											"end": 16268,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16155,
											"end": 16268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16155,
											"end": 16268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16304,
											"end": 17036,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 16304,
											"end": 17036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16423,
											"end": 16426,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16452,
											"end": 16506,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 16500,
											"end": 16505,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16452,
											"end": 16506,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 16452,
											"end": 16506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16452,
											"end": 16506,
											"name": "tag",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 16452,
											"end": 16506,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16522,
											"end": 16608,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 16601,
											"end": 16607,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16596,
											"end": 16599,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16522,
											"end": 16608,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 16522,
											"end": 16608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16522,
											"end": 16608,
											"name": "tag",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 16522,
											"end": 16608,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16515,
											"end": 16608,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 16515,
											"end": 16608,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16632,
											"end": 16688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 16682,
											"end": 16687,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16632,
											"end": 16688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 16632,
											"end": 16688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16632,
											"end": 16688,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 16632,
											"end": 16688,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16711,
											"end": 16718,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16742,
											"end": 16743,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16727,
											"end": 17011,
											"name": "tag",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 16727,
											"end": 17011,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16752,
											"end": 16758,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16749,
											"end": 16750,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16746,
											"end": 16759,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 16727,
											"end": 17011,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16727,
											"end": 17011,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 16727,
											"end": 17011,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16828,
											"end": 16834,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16822,
											"end": 16835,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16855,
											"end": 16918,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 16914,
											"end": 16917,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 16899,
											"end": 16912,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16855,
											"end": 16918,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 16855,
											"end": 16918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16855,
											"end": 16918,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 16855,
											"end": 16918,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16848,
											"end": 16918,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 16848,
											"end": 16918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16941,
											"end": 17001,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 16994,
											"end": 17000,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16941,
											"end": 17001,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 16941,
											"end": 17001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16941,
											"end": 17001,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 16941,
											"end": 17001,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16931,
											"end": 17001,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16931,
											"end": 17001,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16787,
											"end": 17011,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16774,
											"end": 16775,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 16771,
											"end": 16772,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16767,
											"end": 16776,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16762,
											"end": 16776,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16762,
											"end": 16776,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16727,
											"end": 17011,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 16727,
											"end": 17011,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16727,
											"end": 17011,
											"name": "tag",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 16727,
											"end": 17011,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16731,
											"end": 16745,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17027,
											"end": 17030,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 17020,
											"end": 17030,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16428,
											"end": 17036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16428,
											"end": 17036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16428,
											"end": 17036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16304,
											"end": 17036,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16304,
											"end": 17036,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16304,
											"end": 17036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16304,
											"end": 17036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16304,
											"end": 17036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17042,
											"end": 17415,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 17042,
											"end": 17415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17185,
											"end": 17189,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17223,
											"end": 17225,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17212,
											"end": 17221,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17208,
											"end": 17226,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17200,
											"end": 17226,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17200,
											"end": 17226,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17272,
											"end": 17281,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17266,
											"end": 17270,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17262,
											"end": 17282,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17258,
											"end": 17259,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17247,
											"end": 17256,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17243,
											"end": 17260,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17236,
											"end": 17283,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17300,
											"end": 17408,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 17403,
											"end": 17407,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17394,
											"end": 17400,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17300,
											"end": 17408,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 17300,
											"end": 17408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17300,
											"end": 17408,
											"name": "tag",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 17300,
											"end": 17408,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17292,
											"end": 17408,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17292,
											"end": 17408,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17042,
											"end": 17415,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17042,
											"end": 17415,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17042,
											"end": 17415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17042,
											"end": 17415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17042,
											"end": 17415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17421,
											"end": 18364,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 17421,
											"end": 18364,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17516,
											"end": 17522,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17524,
											"end": 17530,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17532,
											"end": 17538,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17540,
											"end": 17546,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17589,
											"end": 17592,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 17577,
											"end": 17586,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17568,
											"end": 17575,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 17564,
											"end": 17587,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17560,
											"end": 17593,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 17557,
											"end": 17677,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17557,
											"end": 17677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 17557,
											"end": 17677,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17596,
											"end": 17675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 17596,
											"end": 17675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 17596,
											"end": 17675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17596,
											"end": 17675,
											"name": "tag",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 17596,
											"end": 17675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17557,
											"end": 17677,
											"name": "tag",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 17557,
											"end": 17677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17716,
											"end": 17717,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17741,
											"end": 17794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 17786,
											"end": 17793,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 17777,
											"end": 17783,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17766,
											"end": 17775,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 17762,
											"end": 17784,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17741,
											"end": 17794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 17741,
											"end": 17794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17741,
											"end": 17794,
											"name": "tag",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 17741,
											"end": 17794,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17731,
											"end": 17794,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 17731,
											"end": 17794,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17687,
											"end": 17804,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17843,
											"end": 17845,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17869,
											"end": 17922,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 17914,
											"end": 17921,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 17905,
											"end": 17911,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17894,
											"end": 17903,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 17890,
											"end": 17912,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17869,
											"end": 17922,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 17869,
											"end": 17922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17869,
											"end": 17922,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 17869,
											"end": 17922,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17859,
											"end": 17922,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 17859,
											"end": 17922,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17814,
											"end": 17932,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17971,
											"end": 17973,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17997,
											"end": 18050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 18042,
											"end": 18049,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 18033,
											"end": 18039,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18022,
											"end": 18031,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 18018,
											"end": 18040,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17997,
											"end": 18050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 17997,
											"end": 18050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17997,
											"end": 18050,
											"name": "tag",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 17997,
											"end": 18050,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17987,
											"end": 18050,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17987,
											"end": 18050,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17942,
											"end": 18060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18127,
											"end": 18129,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 18116,
											"end": 18125,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18112,
											"end": 18130,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18099,
											"end": 18131,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 18158,
											"end": 18176,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18150,
											"end": 18156,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18147,
											"end": 18177,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 18144,
											"end": 18261,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 18144,
											"end": 18261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 18144,
											"end": 18261,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18180,
											"end": 18259,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 18180,
											"end": 18259,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 18180,
											"end": 18259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18180,
											"end": 18259,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 18180,
											"end": 18259,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18144,
											"end": 18261,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 18144,
											"end": 18261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18285,
											"end": 18347,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 18339,
											"end": 18346,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 18330,
											"end": 18336,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18319,
											"end": 18328,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 18315,
											"end": 18337,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18285,
											"end": 18347,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 18285,
											"end": 18347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18285,
											"end": 18347,
											"name": "tag",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 18285,
											"end": 18347,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18275,
											"end": 18347,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18275,
											"end": 18347,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18070,
											"end": 18357,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17421,
											"end": 18364,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17421,
											"end": 18364,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 17421,
											"end": 18364,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17421,
											"end": 18364,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 17421,
											"end": 18364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17421,
											"end": 18364,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17421,
											"end": 18364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17421,
											"end": 18364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18370,
											"end": 18488,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 18370,
											"end": 18488,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18457,
											"end": 18481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 18475,
											"end": 18480,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18457,
											"end": 18481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 18457,
											"end": 18481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18457,
											"end": 18481,
											"name": "tag",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 18457,
											"end": 18481,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18452,
											"end": 18455,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18445,
											"end": 18482,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18370,
											"end": 18488,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18370,
											"end": 18488,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18370,
											"end": 18488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18494,
											"end": 18716,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 18494,
											"end": 18716,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18587,
											"end": 18591,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18625,
											"end": 18627,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18614,
											"end": 18623,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18610,
											"end": 18628,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18602,
											"end": 18628,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18602,
											"end": 18628,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18638,
											"end": 18709,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 18706,
											"end": 18707,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18695,
											"end": 18704,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18691,
											"end": 18708,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18682,
											"end": 18688,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18638,
											"end": 18709,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 18638,
											"end": 18709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18638,
											"end": 18709,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 18638,
											"end": 18709,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18494,
											"end": 18716,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18494,
											"end": 18716,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18494,
											"end": 18716,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18494,
											"end": 18716,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18494,
											"end": 18716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18722,
											"end": 18838,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 18722,
											"end": 18838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18792,
											"end": 18813,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 18807,
											"end": 18812,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18792,
											"end": 18813,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 18792,
											"end": 18813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18792,
											"end": 18813,
											"name": "tag",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 18792,
											"end": 18813,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18785,
											"end": 18790,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18782,
											"end": 18814,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 18772,
											"end": 18832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 18772,
											"end": 18832,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18828,
											"end": 18829,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18825,
											"end": 18826,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 18818,
											"end": 18830,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 18772,
											"end": 18832,
											"name": "tag",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 18772,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18722,
											"end": 18838,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18722,
											"end": 18838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18844,
											"end": 18977,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 18844,
											"end": 18977,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18887,
											"end": 18892,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18925,
											"end": 18931,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18912,
											"end": 18932,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 18903,
											"end": 18932,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18903,
											"end": 18932,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18941,
											"end": 18971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 18965,
											"end": 18970,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18941,
											"end": 18971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 18941,
											"end": 18971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18941,
											"end": 18971,
											"name": "tag",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 18941,
											"end": 18971,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18844,
											"end": 18977,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18844,
											"end": 18977,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18844,
											"end": 18977,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18844,
											"end": 18977,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18844,
											"end": 18977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18983,
											"end": 19451,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 18983,
											"end": 19451,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19048,
											"end": 19054,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19056,
											"end": 19062,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 19105,
											"end": 19107,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19093,
											"end": 19102,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19084,
											"end": 19091,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19080,
											"end": 19103,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19076,
											"end": 19108,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 19073,
											"end": 19192,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19073,
											"end": 19192,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 19073,
											"end": 19192,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19111,
											"end": 19190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 19111,
											"end": 19190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 19111,
											"end": 19190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19111,
											"end": 19190,
											"name": "tag",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 19111,
											"end": 19190,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19073,
											"end": 19192,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 19073,
											"end": 19192,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19231,
											"end": 19232,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19256,
											"end": 19309,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 19301,
											"end": 19308,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19292,
											"end": 19298,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19281,
											"end": 19290,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 19277,
											"end": 19299,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19256,
											"end": 19309,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 19256,
											"end": 19309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19256,
											"end": 19309,
											"name": "tag",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 19256,
											"end": 19309,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19246,
											"end": 19309,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19246,
											"end": 19309,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19202,
											"end": 19319,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19358,
											"end": 19360,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19384,
											"end": 19434,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 19426,
											"end": 19433,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19417,
											"end": 19423,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19406,
											"end": 19415,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 19402,
											"end": 19424,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19384,
											"end": 19434,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 19384,
											"end": 19434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19384,
											"end": 19434,
											"name": "tag",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 19384,
											"end": 19434,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19374,
											"end": 19434,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19374,
											"end": 19434,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19329,
											"end": 19444,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18983,
											"end": 19451,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18983,
											"end": 19451,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18983,
											"end": 19451,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18983,
											"end": 19451,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18983,
											"end": 19451,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18983,
											"end": 19451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19457,
											"end": 19931,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 19457,
											"end": 19931,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19525,
											"end": 19531,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19533,
											"end": 19539,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 19582,
											"end": 19584,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19570,
											"end": 19579,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19561,
											"end": 19568,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19557,
											"end": 19580,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19553,
											"end": 19585,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 19550,
											"end": 19669,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19550,
											"end": 19669,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 19550,
											"end": 19669,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19588,
											"end": 19667,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 19588,
											"end": 19667,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 19588,
											"end": 19667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19588,
											"end": 19667,
											"name": "tag",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 19588,
											"end": 19667,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19550,
											"end": 19669,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 19550,
											"end": 19669,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19708,
											"end": 19709,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19733,
											"end": 19786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 19778,
											"end": 19785,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19769,
											"end": 19775,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19758,
											"end": 19767,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 19754,
											"end": 19776,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19733,
											"end": 19786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 19733,
											"end": 19786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19733,
											"end": 19786,
											"name": "tag",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 19733,
											"end": 19786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19723,
											"end": 19786,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19723,
											"end": 19786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19679,
											"end": 19796,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19835,
											"end": 19837,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19861,
											"end": 19914,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 19906,
											"end": 19913,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19897,
											"end": 19903,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19886,
											"end": 19895,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 19882,
											"end": 19904,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19861,
											"end": 19914,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 19861,
											"end": 19914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19861,
											"end": 19914,
											"name": "tag",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 19861,
											"end": 19914,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19851,
											"end": 19914,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19851,
											"end": 19914,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19806,
											"end": 19924,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19457,
											"end": 19931,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19457,
											"end": 19931,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19457,
											"end": 19931,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19457,
											"end": 19931,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19457,
											"end": 19931,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19457,
											"end": 19931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19937,
											"end": 21026,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 19937,
											"end": 21026,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20041,
											"end": 20047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20049,
											"end": 20055,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 20057,
											"end": 20063,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20065,
											"end": 20071,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 20073,
											"end": 20079,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20122,
											"end": 20125,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 20110,
											"end": 20119,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 20101,
											"end": 20108,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 20097,
											"end": 20120,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20093,
											"end": 20126,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 20090,
											"end": 20210,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 20090,
											"end": 20210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 20090,
											"end": 20210,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20129,
											"end": 20208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 20129,
											"end": 20208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 20129,
											"end": 20208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20129,
											"end": 20208,
											"name": "tag",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 20129,
											"end": 20208,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20090,
											"end": 20210,
											"name": "tag",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 20090,
											"end": 20210,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20249,
											"end": 20250,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20274,
											"end": 20327,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 20319,
											"end": 20326,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 20310,
											"end": 20316,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20299,
											"end": 20308,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 20295,
											"end": 20317,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20274,
											"end": 20327,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 20274,
											"end": 20327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20274,
											"end": 20327,
											"name": "tag",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 20274,
											"end": 20327,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20264,
											"end": 20327,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 20264,
											"end": 20327,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20220,
											"end": 20337,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20376,
											"end": 20378,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20402,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 20447,
											"end": 20454,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 20438,
											"end": 20444,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20427,
											"end": 20436,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 20423,
											"end": 20445,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20402,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 20402,
											"end": 20455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20402,
											"end": 20455,
											"name": "tag",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 20402,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20392,
											"end": 20455,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 20392,
											"end": 20455,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20347,
											"end": 20465,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20504,
											"end": 20506,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 20530,
											"end": 20583,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 20575,
											"end": 20582,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 20566,
											"end": 20572,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20555,
											"end": 20564,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 20551,
											"end": 20573,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20530,
											"end": 20583,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 20530,
											"end": 20583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20530,
											"end": 20583,
											"name": "tag",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 20530,
											"end": 20583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20520,
											"end": 20583,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 20520,
											"end": 20583,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20475,
											"end": 20593,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20632,
											"end": 20634,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 20658,
											"end": 20711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 20703,
											"end": 20710,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 20694,
											"end": 20700,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20683,
											"end": 20692,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 20679,
											"end": 20701,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20658,
											"end": 20711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 20658,
											"end": 20711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20658,
											"end": 20711,
											"name": "tag",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 20658,
											"end": 20711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20648,
											"end": 20711,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20648,
											"end": 20711,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20603,
											"end": 20721,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20788,
											"end": 20791,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 20777,
											"end": 20786,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 20773,
											"end": 20792,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20760,
											"end": 20793,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 20820,
											"end": 20838,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20812,
											"end": 20818,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20809,
											"end": 20839,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 20806,
											"end": 20923,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 20806,
											"end": 20923,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 20806,
											"end": 20923,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20842,
											"end": 20921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 20842,
											"end": 20921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 20842,
											"end": 20921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20842,
											"end": 20921,
											"name": "tag",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 20842,
											"end": 20921,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20806,
											"end": 20923,
											"name": "tag",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 20806,
											"end": 20923,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20947,
											"end": 21009,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 21001,
											"end": 21008,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 20992,
											"end": 20998,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20981,
											"end": 20990,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 20977,
											"end": 20999,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20947,
											"end": 21009,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 20947,
											"end": 21009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20947,
											"end": 21009,
											"name": "tag",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 20947,
											"end": 21009,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20937,
											"end": 21009,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20937,
											"end": 21009,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20731,
											"end": 21019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19937,
											"end": 21026,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19937,
											"end": 21026,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 19937,
											"end": 21026,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19937,
											"end": 21026,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19937,
											"end": 21026,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 19937,
											"end": 21026,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19937,
											"end": 21026,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 19937,
											"end": 21026,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19937,
											"end": 21026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21032,
											"end": 21361,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 21032,
											"end": 21361,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21091,
											"end": 21097,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21140,
											"end": 21142,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21128,
											"end": 21137,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21119,
											"end": 21126,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21115,
											"end": 21138,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21111,
											"end": 21143,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 21108,
											"end": 21227,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 21108,
											"end": 21227,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 21108,
											"end": 21227,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 21146,
											"end": 21225,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 21146,
											"end": 21225,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 21146,
											"end": 21225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21146,
											"end": 21225,
											"name": "tag",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 21146,
											"end": 21225,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21108,
											"end": 21227,
											"name": "tag",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 21108,
											"end": 21227,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21266,
											"end": 21267,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21291,
											"end": 21344,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 21336,
											"end": 21343,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21327,
											"end": 21333,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21316,
											"end": 21325,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 21312,
											"end": 21334,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21291,
											"end": 21344,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 21291,
											"end": 21344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21291,
											"end": 21344,
											"name": "tag",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 21291,
											"end": 21344,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21281,
											"end": 21344,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21281,
											"end": 21344,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21237,
											"end": 21354,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21032,
											"end": 21361,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21032,
											"end": 21361,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21032,
											"end": 21361,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21032,
											"end": 21361,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21032,
											"end": 21361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21367,
											"end": 21547,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 21367,
											"end": 21547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21415,
											"end": 21492,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21412,
											"end": 21413,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21405,
											"end": 21493,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21512,
											"end": 21516,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 21509,
											"end": 21510,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 21502,
											"end": 21517,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21536,
											"end": 21540,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 21533,
											"end": 21534,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21526,
											"end": 21541,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 21553,
											"end": 21873,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 21553,
											"end": 21873,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21597,
											"end": 21603,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21634,
											"end": 21635,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 21628,
											"end": 21632,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21624,
											"end": 21636,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 21614,
											"end": 21636,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21614,
											"end": 21636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21681,
											"end": 21682,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 21675,
											"end": 21679,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21671,
											"end": 21683,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 21702,
											"end": 21720,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 21692,
											"end": 21773,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 21692,
											"end": 21773,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 21758,
											"end": 21762,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 21750,
											"end": 21756,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21746,
											"end": 21763,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 21736,
											"end": 21763,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21736,
											"end": 21763,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21692,
											"end": 21773,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 21692,
											"end": 21773,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21820,
											"end": 21822,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21812,
											"end": 21818,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21809,
											"end": 21823,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 21789,
											"end": 21807,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21786,
											"end": 21824,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21783,
											"end": 21867,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 21783,
											"end": 21867,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 21839,
											"end": 21857,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 21839,
											"end": 21857,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 21839,
											"end": 21857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21839,
											"end": 21857,
											"name": "tag",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 21839,
											"end": 21857,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21783,
											"end": 21867,
											"name": "tag",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 21783,
											"end": 21867,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21604,
											"end": 21873,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21553,
											"end": 21873,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21553,
											"end": 21873,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21553,
											"end": 21873,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21553,
											"end": 21873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21879,
											"end": 22211,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 21879,
											"end": 22211,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22000,
											"end": 22004,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22038,
											"end": 22040,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 22027,
											"end": 22036,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22023,
											"end": 22041,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22015,
											"end": 22041,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22015,
											"end": 22041,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22051,
											"end": 22122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 22119,
											"end": 22120,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22108,
											"end": 22117,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22104,
											"end": 22121,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22095,
											"end": 22101,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 22051,
											"end": 22122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 22051,
											"end": 22122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22051,
											"end": 22122,
											"name": "tag",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 22051,
											"end": 22122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22132,
											"end": 22204,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 22200,
											"end": 22202,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22189,
											"end": 22198,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22185,
											"end": 22203,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22176,
											"end": 22182,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22132,
											"end": 22204,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 22132,
											"end": 22204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22132,
											"end": 22204,
											"name": "tag",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 22132,
											"end": 22204,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21879,
											"end": 22211,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 21879,
											"end": 22211,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21879,
											"end": 22211,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21879,
											"end": 22211,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21879,
											"end": 22211,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21879,
											"end": 22211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22217,
											"end": 22549,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 22217,
											"end": 22549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22338,
											"end": 22342,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22376,
											"end": 22378,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 22365,
											"end": 22374,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22361,
											"end": 22379,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22353,
											"end": 22379,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22353,
											"end": 22379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22389,
											"end": 22460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 22457,
											"end": 22458,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22446,
											"end": 22455,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22442,
											"end": 22459,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22433,
											"end": 22439,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 22389,
											"end": 22460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 22389,
											"end": 22460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22389,
											"end": 22460,
											"name": "tag",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 22389,
											"end": 22460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22470,
											"end": 22542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 22538,
											"end": 22540,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22527,
											"end": 22536,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22523,
											"end": 22541,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22514,
											"end": 22520,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22470,
											"end": 22542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 22470,
											"end": 22542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22470,
											"end": 22542,
											"name": "tag",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 22470,
											"end": 22542,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22217,
											"end": 22549,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 22217,
											"end": 22549,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22217,
											"end": 22549,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22217,
											"end": 22549,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22217,
											"end": 22549,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22217,
											"end": 22549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22555,
											"end": 22735,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 22555,
											"end": 22735,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22603,
											"end": 22680,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22600,
											"end": 22601,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22593,
											"end": 22681,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22700,
											"end": 22704,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 22697,
											"end": 22698,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 22690,
											"end": 22705,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22724,
											"end": 22728,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 22721,
											"end": 22722,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22714,
											"end": 22729,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 22741,
											"end": 22921,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 22741,
											"end": 22921,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22789,
											"end": 22866,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22786,
											"end": 22787,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22779,
											"end": 22867,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22886,
											"end": 22890,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 22883,
											"end": 22884,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 22876,
											"end": 22891,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22910,
											"end": 22914,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 22907,
											"end": 22908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22900,
											"end": 22915,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 22927,
											"end": 23160,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 22927,
											"end": 23160,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22966,
											"end": 22969,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22989,
											"end": 23013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 23007,
											"end": 23012,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22989,
											"end": 23013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 22989,
											"end": 23013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22989,
											"end": 23013,
											"name": "tag",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 22989,
											"end": 23013,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22980,
											"end": 23013,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22980,
											"end": 23013,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23035,
											"end": 23101,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23028,
											"end": 23033,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23025,
											"end": 23102,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 23022,
											"end": 23125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 23022,
											"end": 23125,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 23105,
											"end": 23123,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 23105,
											"end": 23123,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 23105,
											"end": 23123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23105,
											"end": 23123,
											"name": "tag",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 23105,
											"end": 23123,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23022,
											"end": 23125,
											"name": "tag",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 23022,
											"end": 23125,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23152,
											"end": 23153,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 23145,
											"end": 23150,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23141,
											"end": 23154,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23134,
											"end": 23154,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23134,
											"end": 23154,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22927,
											"end": 23160,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22927,
											"end": 23160,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22927,
											"end": 23160,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22927,
											"end": 23160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23166,
											"end": 23307,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 23166,
											"end": 23307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23215,
											"end": 23219,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23238,
											"end": 23241,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23230,
											"end": 23241,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23230,
											"end": 23241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23261,
											"end": 23264,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23258,
											"end": 23259,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23251,
											"end": 23265,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23295,
											"end": 23299,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23292,
											"end": 23293,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23282,
											"end": 23300,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 23274,
											"end": 23300,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23274,
											"end": 23300,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23166,
											"end": 23307,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23166,
											"end": 23307,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23166,
											"end": 23307,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23166,
											"end": 23307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23313,
											"end": 23406,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 23313,
											"end": 23406,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23350,
											"end": 23356,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23397,
											"end": 23399,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23392,
											"end": 23394,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 23385,
											"end": 23390,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23381,
											"end": 23395,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23377,
											"end": 23400,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 23367,
											"end": 23400,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23367,
											"end": 23400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23313,
											"end": 23406,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23313,
											"end": 23406,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23313,
											"end": 23406,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23313,
											"end": 23406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23412,
											"end": 23519,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 23412,
											"end": 23519,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23456,
											"end": 23464,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23506,
											"end": 23511,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23500,
											"end": 23504,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23496,
											"end": 23512,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 23475,
											"end": 23512,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23475,
											"end": 23512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23412,
											"end": 23519,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23412,
											"end": 23519,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23412,
											"end": 23519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23412,
											"end": 23519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23412,
											"end": 23519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23525,
											"end": 23918,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 23525,
											"end": 23918,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23594,
											"end": 23600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23644,
											"end": 23645,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 23632,
											"end": 23642,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23628,
											"end": 23646,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 23667,
											"end": 23764,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "611"
										},
										{
											"begin": 23697,
											"end": 23763,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23686,
											"end": 23695,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23667,
											"end": 23764,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 23667,
											"end": 23764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23667,
											"end": 23764,
											"name": "tag",
											"source": 13,
											"value": "611"
										},
										{
											"begin": 23667,
											"end": 23764,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23785,
											"end": 23824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 23815,
											"end": 23823,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 23804,
											"end": 23813,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23785,
											"end": 23824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 23785,
											"end": 23824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23785,
											"end": 23824,
											"name": "tag",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 23785,
											"end": 23824,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23773,
											"end": 23824,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 23773,
											"end": 23824,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23857,
											"end": 23861,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 23853,
											"end": 23862,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 23846,
											"end": 23851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23842,
											"end": 23863,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 23833,
											"end": 23863,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 23833,
											"end": 23863,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23906,
											"end": 23910,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 23896,
											"end": 23904,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 23892,
											"end": 23911,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 23885,
											"end": 23890,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23882,
											"end": 23912,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 23872,
											"end": 23912,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23872,
											"end": 23912,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23601,
											"end": 23918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23601,
											"end": 23918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23525,
											"end": 23918,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 23525,
											"end": 23918,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23525,
											"end": 23918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23525,
											"end": 23918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23525,
											"end": 23918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23525,
											"end": 23918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23924,
											"end": 23984,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 23924,
											"end": 23984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23952,
											"end": 23955,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23973,
											"end": 23978,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23966,
											"end": 23978,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23966,
											"end": 23978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23924,
											"end": 23984,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23924,
											"end": 23984,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23924,
											"end": 23984,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23924,
											"end": 23984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23990,
											"end": 24132,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 23990,
											"end": 24132,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24040,
											"end": 24049,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24073,
											"end": 24126,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "615"
										},
										{
											"begin": 24091,
											"end": 24125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 24100,
											"end": 24124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 24118,
											"end": 24123,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24100,
											"end": 24124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 24100,
											"end": 24124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24100,
											"end": 24124,
											"name": "tag",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 24100,
											"end": 24124,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24091,
											"end": 24125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 24091,
											"end": 24125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24091,
											"end": 24125,
											"name": "tag",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 24091,
											"end": 24125,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24073,
											"end": 24126,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 24073,
											"end": 24126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24073,
											"end": 24126,
											"name": "tag",
											"source": 13,
											"value": "615"
										},
										{
											"begin": 24073,
											"end": 24126,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24060,
											"end": 24126,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24060,
											"end": 24126,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23990,
											"end": 24132,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23990,
											"end": 24132,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23990,
											"end": 24132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23990,
											"end": 24132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24138,
											"end": 24213,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 24138,
											"end": 24213,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24181,
											"end": 24184,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24202,
											"end": 24207,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24195,
											"end": 24207,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24195,
											"end": 24207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24138,
											"end": 24213,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24138,
											"end": 24213,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24138,
											"end": 24213,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24138,
											"end": 24213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24219,
											"end": 24488,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 24219,
											"end": 24488,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24329,
											"end": 24368,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 24360,
											"end": 24367,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24329,
											"end": 24368,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 24329,
											"end": 24368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24329,
											"end": 24368,
											"name": "tag",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 24329,
											"end": 24368,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24390,
											"end": 24481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 24439,
											"end": 24480,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "622"
										},
										{
											"begin": 24463,
											"end": 24479,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24439,
											"end": 24480,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 24439,
											"end": 24480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24439,
											"end": 24480,
											"name": "tag",
											"source": 13,
											"value": "622"
										},
										{
											"begin": 24439,
											"end": 24480,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24431,
											"end": 24437,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24424,
											"end": 24428,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24418,
											"end": 24429,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 24390,
											"end": 24481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 24390,
											"end": 24481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24390,
											"end": 24481,
											"name": "tag",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 24390,
											"end": 24481,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24384,
											"end": 24388,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24377,
											"end": 24482,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 24295,
											"end": 24488,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24219,
											"end": 24488,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24219,
											"end": 24488,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24219,
											"end": 24488,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24219,
											"end": 24488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24494,
											"end": 24567,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 24494,
											"end": 24567,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24539,
											"end": 24542,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24494,
											"end": 24567,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24494,
											"end": 24567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24573,
											"end": 24762,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 24573,
											"end": 24762,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24650,
											"end": 24682,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 24650,
											"end": 24682,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 24650,
											"end": 24682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24650,
											"end": 24682,
											"name": "tag",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 24650,
											"end": 24682,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24691,
											"end": 24756,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 24749,
											"end": 24755,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24741,
											"end": 24747,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24735,
											"end": 24739,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24691,
											"end": 24756,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 24691,
											"end": 24756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24691,
											"end": 24756,
											"name": "tag",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 24691,
											"end": 24756,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24626,
											"end": 24762,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24573,
											"end": 24762,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24573,
											"end": 24762,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24573,
											"end": 24762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24768,
											"end": 24954,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 24768,
											"end": 24954,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24828,
											"end": 24948,
											"name": "tag",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 24828,
											"end": 24948,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24845,
											"end": 24848,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24838,
											"end": 24843,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24835,
											"end": 24849,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 24828,
											"end": 24948,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 24828,
											"end": 24948,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "630"
										},
										{
											"begin": 24828,
											"end": 24948,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 24899,
											"end": 24938,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "631"
										},
										{
											"begin": 24936,
											"end": 24937,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24929,
											"end": 24934,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24899,
											"end": 24938,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 24899,
											"end": 24938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24899,
											"end": 24938,
											"name": "tag",
											"source": 13,
											"value": "631"
										},
										{
											"begin": 24899,
											"end": 24938,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24872,
											"end": 24873,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 24865,
											"end": 24870,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24861,
											"end": 24874,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24852,
											"end": 24874,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24852,
											"end": 24874,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24828,
											"end": 24948,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 24828,
											"end": 24948,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24828,
											"end": 24948,
											"name": "tag",
											"source": 13,
											"value": "630"
										},
										{
											"begin": 24828,
											"end": 24948,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24768,
											"end": 24954,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24768,
											"end": 24954,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24768,
											"end": 24954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24960,
											"end": 25503,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 24960,
											"end": 25503,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25061,
											"end": 25063,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 25056,
											"end": 25059,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25053,
											"end": 25064,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 25050,
											"end": 25496,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 25050,
											"end": 25496,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 25050,
											"end": 25496,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 25095,
											"end": 25133,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 25127,
											"end": 25132,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25095,
											"end": 25133,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 25095,
											"end": 25133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25095,
											"end": 25133,
											"name": "tag",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 25095,
											"end": 25133,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25179,
											"end": 25208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "635"
										},
										{
											"begin": 25197,
											"end": 25207,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 25179,
											"end": 25208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 25179,
											"end": 25208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25179,
											"end": 25208,
											"name": "tag",
											"source": 13,
											"value": "635"
										},
										{
											"begin": 25179,
											"end": 25208,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25169,
											"end": 25177,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25165,
											"end": 25209,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25362,
											"end": 25364,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 25350,
											"end": 25360,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 25347,
											"end": 25365,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 25344,
											"end": 25393,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 25344,
											"end": 25393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "636"
										},
										{
											"begin": 25344,
											"end": 25393,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 25383,
											"end": 25391,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25368,
											"end": 25391,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25368,
											"end": 25391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25344,
											"end": 25393,
											"name": "tag",
											"source": 13,
											"value": "636"
										},
										{
											"begin": 25344,
											"end": 25393,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25406,
											"end": 25486,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 25462,
											"end": 25484,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 25480,
											"end": 25483,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 25462,
											"end": 25484,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 25462,
											"end": 25484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25462,
											"end": 25484,
											"name": "tag",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 25462,
											"end": 25484,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25452,
											"end": 25460,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25448,
											"end": 25485,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25435,
											"end": 25446,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25406,
											"end": 25486,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 25406,
											"end": 25486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25406,
											"end": 25486,
											"name": "tag",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 25406,
											"end": 25486,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25065,
											"end": 25496,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25065,
											"end": 25496,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25050,
											"end": 25496,
											"name": "tag",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 25050,
											"end": 25496,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24960,
											"end": 25503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24960,
											"end": 25503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24960,
											"end": 25503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24960,
											"end": 25503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25509,
											"end": 25626,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 25509,
											"end": 25626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25563,
											"end": 25571,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25613,
											"end": 25618,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25607,
											"end": 25611,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25603,
											"end": 25619,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 25582,
											"end": 25619,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25582,
											"end": 25619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25509,
											"end": 25626,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 25509,
											"end": 25626,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25509,
											"end": 25626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25509,
											"end": 25626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25509,
											"end": 25626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25632,
											"end": 25801,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 25632,
											"end": 25801,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25676,
											"end": 25682,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25709,
											"end": 25760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "641"
										},
										{
											"begin": 25757,
											"end": 25758,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25753,
											"end": 25759,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 25745,
											"end": 25750,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 25742,
											"end": 25743,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 25738,
											"end": 25751,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 25709,
											"end": 25760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 25709,
											"end": 25760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25709,
											"end": 25760,
											"name": "tag",
											"source": 13,
											"value": "641"
										},
										{
											"begin": 25709,
											"end": 25760,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25705,
											"end": 25761,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 25790,
											"end": 25794,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 25784,
											"end": 25788,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25780,
											"end": 25795,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25683,
											"end": 25801,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25632,
											"end": 25801,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 25632,
											"end": 25801,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25632,
											"end": 25801,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25632,
											"end": 25801,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25632,
											"end": 25801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25806,
											"end": 26101,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 25806,
											"end": 26101,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25882,
											"end": 25886,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26028,
											"end": 26057,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 26053,
											"end": 26056,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26047,
											"end": 26051,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26028,
											"end": 26057,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 26028,
											"end": 26057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26028,
											"end": 26057,
											"name": "tag",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 26028,
											"end": 26057,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26020,
											"end": 26057,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26020,
											"end": 26057,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26090,
											"end": 26093,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26087,
											"end": 26088,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 26083,
											"end": 26094,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 26077,
											"end": 26081,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26074,
											"end": 26095,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 26066,
											"end": 26095,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26066,
											"end": 26095,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25806,
											"end": 26101,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 25806,
											"end": 26101,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25806,
											"end": 26101,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25806,
											"end": 26101,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25806,
											"end": 26101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26106,
											"end": 27501,
											"name": "tag",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 26106,
											"end": 27501,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26223,
											"end": 26260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 26256,
											"end": 26259,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26223,
											"end": 26260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 26223,
											"end": 26260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26223,
											"end": 26260,
											"name": "tag",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 26223,
											"end": 26260,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26325,
											"end": 26343,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26317,
											"end": 26323,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26314,
											"end": 26344,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 26311,
											"end": 26367,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 26311,
											"end": 26367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "646"
										},
										{
											"begin": 26311,
											"end": 26367,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 26347,
											"end": 26365,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "647"
										},
										{
											"begin": 26347,
											"end": 26365,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 26347,
											"end": 26365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26347,
											"end": 26365,
											"name": "tag",
											"source": 13,
											"value": "647"
										},
										{
											"begin": 26347,
											"end": 26365,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26311,
											"end": 26367,
											"name": "tag",
											"source": 13,
											"value": "646"
										},
										{
											"begin": 26311,
											"end": 26367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26391,
											"end": 26429,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "648"
										},
										{
											"begin": 26423,
											"end": 26427,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26417,
											"end": 26428,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 26391,
											"end": 26429,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 26391,
											"end": 26429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26391,
											"end": 26429,
											"name": "tag",
											"source": 13,
											"value": "648"
										},
										{
											"begin": 26391,
											"end": 26429,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26476,
											"end": 26543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 26536,
											"end": 26542,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26528,
											"end": 26534,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26522,
											"end": 26526,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 26476,
											"end": 26543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 26476,
											"end": 26543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26476,
											"end": 26543,
											"name": "tag",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 26476,
											"end": 26543,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26570,
											"end": 26571,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26594,
											"end": 26598,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 26581,
											"end": 26598,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26581,
											"end": 26598,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26626,
											"end": 26628,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 26618,
											"end": 26624,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26615,
											"end": 26629,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 26643,
											"end": 26644,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 26638,
											"end": 27256,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26638,
											"end": 27256,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 26638,
											"end": 27256,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 26638,
											"end": 27256,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 27300,
											"end": 27301,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27317,
											"end": 27323,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 27314,
											"end": 27391,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 27314,
											"end": 27391,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "652"
										},
										{
											"begin": 27314,
											"end": 27391,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 27366,
											"end": 27375,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27361,
											"end": 27364,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 27357,
											"end": 27376,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27351,
											"end": 27377,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 27342,
											"end": 27377,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27342,
											"end": 27377,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27314,
											"end": 27391,
											"name": "tag",
											"source": 13,
											"value": "652"
										},
										{
											"begin": 27314,
											"end": 27391,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27417,
											"end": 27484,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "653"
										},
										{
											"begin": 27477,
											"end": 27483,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 27470,
											"end": 27475,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27417,
											"end": 27484,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 27417,
											"end": 27484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27417,
											"end": 27484,
											"name": "tag",
											"source": 13,
											"value": "653"
										},
										{
											"begin": 27417,
											"end": 27484,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27411,
											"end": 27415,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 27404,
											"end": 27485,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 27273,
											"end": 27495,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26608,
											"end": 27495,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "650"
										},
										{
											"begin": 26608,
											"end": 27495,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26638,
											"end": 27256,
											"name": "tag",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 26638,
											"end": 27256,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26690,
											"end": 26694,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 26686,
											"end": 26695,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 26678,
											"end": 26684,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 26674,
											"end": 26696,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 26724,
											"end": 26761,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "654"
										},
										{
											"begin": 26756,
											"end": 26760,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 26724,
											"end": 26761,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 26724,
											"end": 26761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26724,
											"end": 26761,
											"name": "tag",
											"source": 13,
											"value": "654"
										},
										{
											"begin": 26724,
											"end": 26761,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26783,
											"end": 26784,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26797,
											"end": 27005,
											"name": "tag",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 26797,
											"end": 27005,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26811,
											"end": 26818,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26808,
											"end": 26809,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26805,
											"end": 26819,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 26797,
											"end": 27005,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 26797,
											"end": 27005,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "657"
										},
										{
											"begin": 26797,
											"end": 27005,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 26890,
											"end": 26899,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 26885,
											"end": 26888,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 26881,
											"end": 26900,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26875,
											"end": 26901,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 26867,
											"end": 26873,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26860,
											"end": 26902,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 26941,
											"end": 26942,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 26933,
											"end": 26939,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26929,
											"end": 26943,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26919,
											"end": 26943,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26919,
											"end": 26943,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26988,
											"end": 26990,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 26977,
											"end": 26986,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 26973,
											"end": 26991,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26960,
											"end": 26991,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 26960,
											"end": 26991,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26834,
											"end": 26838,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 26831,
											"end": 26832,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26827,
											"end": 26839,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26822,
											"end": 26839,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26822,
											"end": 26839,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26797,
											"end": 27005,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 26797,
											"end": 27005,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26797,
											"end": 27005,
											"name": "tag",
											"source": 13,
											"value": "657"
										},
										{
											"begin": 26797,
											"end": 27005,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27033,
											"end": 27039,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 27024,
											"end": 27031,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27021,
											"end": 27040,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 27018,
											"end": 27197,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 27018,
											"end": 27197,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 27018,
											"end": 27197,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 27091,
											"end": 27100,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 27086,
											"end": 27089,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 27082,
											"end": 27101,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27076,
											"end": 27102,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 27134,
											"end": 27182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "659"
										},
										{
											"begin": 27176,
											"end": 27180,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 27168,
											"end": 27174,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 27164,
											"end": 27181,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 27153,
											"end": 27162,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27134,
											"end": 27182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 27134,
											"end": 27182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27134,
											"end": 27182,
											"name": "tag",
											"source": 13,
											"value": "659"
										},
										{
											"begin": 27134,
											"end": 27182,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27126,
											"end": 27132,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27119,
											"end": 27183,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 27041,
											"end": 27197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27018,
											"end": 27197,
											"name": "tag",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 27018,
											"end": 27197,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27243,
											"end": 27244,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 27239,
											"end": 27240,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 27231,
											"end": 27237,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 27227,
											"end": 27241,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 27223,
											"end": 27245,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27217,
											"end": 27221,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 27210,
											"end": 27246,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 26645,
											"end": 27256,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26645,
											"end": 27256,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26645,
											"end": 27256,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26608,
											"end": 27495,
											"name": "tag",
											"source": 13,
											"value": "650"
										},
										{
											"begin": 26608,
											"end": 27495,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26608,
											"end": 27495,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26198,
											"end": 27501,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26198,
											"end": 27501,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26198,
											"end": 27501,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26106,
											"end": 27501,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26106,
											"end": 27501,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26106,
											"end": 27501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27507,
											"end": 28060,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 27507,
											"end": 28060,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27684,
											"end": 27688,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27722,
											"end": 27725,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 27711,
											"end": 27720,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27707,
											"end": 27726,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27699,
											"end": 27726,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27699,
											"end": 27726,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27736,
											"end": 27807,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 27804,
											"end": 27805,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27793,
											"end": 27802,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27789,
											"end": 27806,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27780,
											"end": 27786,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 27736,
											"end": 27807,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 27736,
											"end": 27807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27736,
											"end": 27807,
											"name": "tag",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 27736,
											"end": 27807,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27817,
											"end": 27889,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 27885,
											"end": 27887,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 27874,
											"end": 27883,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27870,
											"end": 27888,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27861,
											"end": 27867,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 27817,
											"end": 27889,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 27817,
											"end": 27889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27817,
											"end": 27889,
											"name": "tag",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 27817,
											"end": 27889,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27899,
											"end": 27971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "663"
										},
										{
											"begin": 27967,
											"end": 27969,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 27956,
											"end": 27965,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27952,
											"end": 27970,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27943,
											"end": 27949,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 27899,
											"end": 27971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 27899,
											"end": 27971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27899,
											"end": 27971,
											"name": "tag",
											"source": 13,
											"value": "663"
										},
										{
											"begin": 27899,
											"end": 27971,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27981,
											"end": 28053,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "664"
										},
										{
											"begin": 28049,
											"end": 28051,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 28038,
											"end": 28047,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 28034,
											"end": 28052,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28025,
											"end": 28031,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 27981,
											"end": 28053,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 27981,
											"end": 28053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27981,
											"end": 28053,
											"name": "tag",
											"source": 13,
											"value": "664"
										},
										{
											"begin": 27981,
											"end": 28053,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27507,
											"end": 28060,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 27507,
											"end": 28060,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 27507,
											"end": 28060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27507,
											"end": 28060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27507,
											"end": 28060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27507,
											"end": 28060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27507,
											"end": 28060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27507,
											"end": 28060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28066,
											"end": 28257,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 28066,
											"end": 28257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28106,
											"end": 28109,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28125,
											"end": 28145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "666"
										},
										{
											"begin": 28143,
											"end": 28144,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28125,
											"end": 28145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 28125,
											"end": 28145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28125,
											"end": 28145,
											"name": "tag",
											"source": 13,
											"value": "666"
										},
										{
											"begin": 28125,
											"end": 28145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28120,
											"end": 28145,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 28120,
											"end": 28145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28159,
											"end": 28179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "667"
										},
										{
											"begin": 28177,
											"end": 28178,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 28159,
											"end": 28179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 28159,
											"end": 28179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28159,
											"end": 28179,
											"name": "tag",
											"source": 13,
											"value": "667"
										},
										{
											"begin": 28159,
											"end": 28179,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28154,
											"end": 28179,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 28154,
											"end": 28179,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28202,
											"end": 28203,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28199,
											"end": 28200,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28195,
											"end": 28204,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28188,
											"end": 28204,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28188,
											"end": 28204,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28223,
											"end": 28226,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 28220,
											"end": 28221,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28217,
											"end": 28227,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 28214,
											"end": 28250,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 28214,
											"end": 28250,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "668"
										},
										{
											"begin": 28214,
											"end": 28250,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 28230,
											"end": 28248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "669"
										},
										{
											"begin": 28230,
											"end": 28248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 28230,
											"end": 28248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28230,
											"end": 28248,
											"name": "tag",
											"source": 13,
											"value": "669"
										},
										{
											"begin": 28230,
											"end": 28248,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28214,
											"end": 28250,
											"name": "tag",
											"source": 13,
											"value": "668"
										},
										{
											"begin": 28214,
											"end": 28250,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28066,
											"end": 28257,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 28066,
											"end": 28257,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 28066,
											"end": 28257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28066,
											"end": 28257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28066,
											"end": 28257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28263,
											"end": 28897,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 28263,
											"end": 28897,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28484,
											"end": 28488,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28522,
											"end": 28524,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 28511,
											"end": 28520,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28507,
											"end": 28525,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28499,
											"end": 28525,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28499,
											"end": 28525,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28571,
											"end": 28580,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28565,
											"end": 28569,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28561,
											"end": 28581,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 28557,
											"end": 28558,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28546,
											"end": 28555,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 28542,
											"end": 28559,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28535,
											"end": 28582,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 28599,
											"end": 28707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "671"
										},
										{
											"begin": 28702,
											"end": 28706,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28693,
											"end": 28699,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 28599,
											"end": 28707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 28599,
											"end": 28707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28599,
											"end": 28707,
											"name": "tag",
											"source": 13,
											"value": "671"
										},
										{
											"begin": 28599,
											"end": 28707,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28591,
											"end": 28707,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28591,
											"end": 28707,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28754,
											"end": 28763,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28748,
											"end": 28752,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28744,
											"end": 28764,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 28739,
											"end": 28741,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 28728,
											"end": 28737,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 28724,
											"end": 28742,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28717,
											"end": 28765,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 28782,
											"end": 28890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "672"
										},
										{
											"begin": 28885,
											"end": 28889,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28876,
											"end": 28882,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 28782,
											"end": 28890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 28782,
											"end": 28890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28782,
											"end": 28890,
											"name": "tag",
											"source": 13,
											"value": "672"
										},
										{
											"begin": 28782,
											"end": 28890,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28774,
											"end": 28890,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28774,
											"end": 28890,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28263,
											"end": 28897,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 28263,
											"end": 28897,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 28263,
											"end": 28897,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28263,
											"end": 28897,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28263,
											"end": 28897,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28263,
											"end": 28897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28903,
											"end": 29001,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 28903,
											"end": 29001,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28954,
											"end": 28960,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28988,
											"end": 28993,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28982,
											"end": 28994,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 28972,
											"end": 28994,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28972,
											"end": 28994,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28903,
											"end": 29001,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 28903,
											"end": 29001,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28903,
											"end": 29001,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28903,
											"end": 29001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29007,
											"end": 29175,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 29007,
											"end": 29175,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29090,
											"end": 29101,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 29124,
											"end": 29130,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 29119,
											"end": 29122,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 29112,
											"end": 29131,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 29164,
											"end": 29168,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 29159,
											"end": 29162,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 29155,
											"end": 29169,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29140,
											"end": 29169,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 29140,
											"end": 29169,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29007,
											"end": 29175,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 29007,
											"end": 29175,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 29007,
											"end": 29175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29007,
											"end": 29175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29007,
											"end": 29175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29181,
											"end": 29554,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 29181,
											"end": 29554,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29267,
											"end": 29270,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 29295,
											"end": 29333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "676"
										},
										{
											"begin": 29327,
											"end": 29332,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 29295,
											"end": 29333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 29295,
											"end": 29333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29295,
											"end": 29333,
											"name": "tag",
											"source": 13,
											"value": "676"
										},
										{
											"begin": 29295,
											"end": 29333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29349,
											"end": 29419,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "677"
										},
										{
											"begin": 29412,
											"end": 29418,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 29407,
											"end": 29410,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 29349,
											"end": 29419,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 29349,
											"end": 29419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29349,
											"end": 29419,
											"name": "tag",
											"source": 13,
											"value": "677"
										},
										{
											"begin": 29349,
											"end": 29419,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29342,
											"end": 29419,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 29342,
											"end": 29419,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29428,
											"end": 29493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "678"
										},
										{
											"begin": 29486,
											"end": 29492,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 29481,
											"end": 29484,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 29474,
											"end": 29478,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 29467,
											"end": 29472,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 29463,
											"end": 29479,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29428,
											"end": 29493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 29428,
											"end": 29493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29428,
											"end": 29493,
											"name": "tag",
											"source": 13,
											"value": "678"
										},
										{
											"begin": 29428,
											"end": 29493,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29518,
											"end": 29547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "679"
										},
										{
											"begin": 29540,
											"end": 29546,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 29518,
											"end": 29547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 29518,
											"end": 29547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29518,
											"end": 29547,
											"name": "tag",
											"source": 13,
											"value": "679"
										},
										{
											"begin": 29518,
											"end": 29547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29513,
											"end": 29516,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 29509,
											"end": 29548,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29502,
											"end": 29548,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 29502,
											"end": 29548,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29271,
											"end": 29554,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29181,
											"end": 29554,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 29181,
											"end": 29554,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 29181,
											"end": 29554,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29181,
											"end": 29554,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29181,
											"end": 29554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29560,
											"end": 30311,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 29560,
											"end": 30311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29783,
											"end": 29787,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 29821,
											"end": 29824,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 29810,
											"end": 29819,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 29806,
											"end": 29825,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29798,
											"end": 29825,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 29798,
											"end": 29825,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29835,
											"end": 29906,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "681"
										},
										{
											"begin": 29903,
											"end": 29904,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 29892,
											"end": 29901,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 29888,
											"end": 29905,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29879,
											"end": 29885,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 29835,
											"end": 29906,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 29835,
											"end": 29906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29835,
											"end": 29906,
											"name": "tag",
											"source": 13,
											"value": "681"
										},
										{
											"begin": 29835,
											"end": 29906,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29916,
											"end": 29988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "682"
										},
										{
											"begin": 29984,
											"end": 29986,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 29973,
											"end": 29982,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 29969,
											"end": 29987,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29960,
											"end": 29966,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 29916,
											"end": 29988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 29916,
											"end": 29988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29916,
											"end": 29988,
											"name": "tag",
											"source": 13,
											"value": "682"
										},
										{
											"begin": 29916,
											"end": 29988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29998,
											"end": 30070,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "683"
										},
										{
											"begin": 30066,
											"end": 30068,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 30055,
											"end": 30064,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 30051,
											"end": 30069,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 30042,
											"end": 30048,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 29998,
											"end": 30070,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 29998,
											"end": 30070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29998,
											"end": 30070,
											"name": "tag",
											"source": 13,
											"value": "683"
										},
										{
											"begin": 29998,
											"end": 30070,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30080,
											"end": 30152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "684"
										},
										{
											"begin": 30148,
											"end": 30150,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 30137,
											"end": 30146,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 30133,
											"end": 30151,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 30124,
											"end": 30130,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 30080,
											"end": 30152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 30080,
											"end": 30152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30080,
											"end": 30152,
											"name": "tag",
											"source": 13,
											"value": "684"
										},
										{
											"begin": 30080,
											"end": 30152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30200,
											"end": 30209,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 30194,
											"end": 30198,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 30190,
											"end": 30210,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 30184,
											"end": 30187,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 30173,
											"end": 30182,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 30169,
											"end": 30188,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 30162,
											"end": 30211,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 30228,
											"end": 30304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "685"
										},
										{
											"begin": 30299,
											"end": 30303,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 30290,
											"end": 30296,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 30228,
											"end": 30304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 30228,
											"end": 30304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30228,
											"end": 30304,
											"name": "tag",
											"source": 13,
											"value": "685"
										},
										{
											"begin": 30228,
											"end": 30304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30220,
											"end": 30304,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 30220,
											"end": 30304,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29560,
											"end": 30311,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 29560,
											"end": 30311,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 29560,
											"end": 30311,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29560,
											"end": 30311,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29560,
											"end": 30311,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29560,
											"end": 30311,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29560,
											"end": 30311,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29560,
											"end": 30311,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29560,
											"end": 30311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30317,
											"end": 30458,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 30317,
											"end": 30458,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30373,
											"end": 30378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 30404,
											"end": 30410,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 30398,
											"end": 30411,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 30389,
											"end": 30411,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 30389,
											"end": 30411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30420,
											"end": 30452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "687"
										},
										{
											"begin": 30446,
											"end": 30451,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 30420,
											"end": 30452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 30420,
											"end": 30452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30420,
											"end": 30452,
											"name": "tag",
											"source": 13,
											"value": "687"
										},
										{
											"begin": 30420,
											"end": 30452,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30317,
											"end": 30458,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 30317,
											"end": 30458,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 30317,
											"end": 30458,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30317,
											"end": 30458,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30317,
											"end": 30458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30464,
											"end": 30813,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 30464,
											"end": 30813,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30533,
											"end": 30539,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 30582,
											"end": 30584,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 30570,
											"end": 30579,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 30561,
											"end": 30568,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 30557,
											"end": 30580,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 30553,
											"end": 30585,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 30550,
											"end": 30669,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 30550,
											"end": 30669,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "689"
										},
										{
											"begin": 30550,
											"end": 30669,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 30588,
											"end": 30667,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "690"
										},
										{
											"begin": 30588,
											"end": 30667,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 30588,
											"end": 30667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30588,
											"end": 30667,
											"name": "tag",
											"source": 13,
											"value": "690"
										},
										{
											"begin": 30588,
											"end": 30667,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30550,
											"end": 30669,
											"name": "tag",
											"source": 13,
											"value": "689"
										},
										{
											"begin": 30550,
											"end": 30669,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30708,
											"end": 30709,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 30733,
											"end": 30796,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "691"
										},
										{
											"begin": 30788,
											"end": 30795,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 30779,
											"end": 30785,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 30768,
											"end": 30777,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 30764,
											"end": 30786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 30733,
											"end": 30796,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 30733,
											"end": 30796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30733,
											"end": 30796,
											"name": "tag",
											"source": 13,
											"value": "691"
										},
										{
											"begin": 30733,
											"end": 30796,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30723,
											"end": 30796,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 30723,
											"end": 30796,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30679,
											"end": 30806,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30464,
											"end": 30813,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 30464,
											"end": 30813,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 30464,
											"end": 30813,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30464,
											"end": 30813,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30464,
											"end": 30813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30819,
											"end": 31872,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 30819,
											"end": 31872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31142,
											"end": 31146,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 31180,
											"end": 31183,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 31169,
											"end": 31178,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 31165,
											"end": 31184,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 31157,
											"end": 31184,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 31157,
											"end": 31184,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31194,
											"end": 31265,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "693"
										},
										{
											"begin": 31262,
											"end": 31263,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 31251,
											"end": 31260,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 31247,
											"end": 31264,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 31238,
											"end": 31244,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 31194,
											"end": 31265,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 31194,
											"end": 31265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 31194,
											"end": 31265,
											"name": "tag",
											"source": 13,
											"value": "693"
										},
										{
											"begin": 31194,
											"end": 31265,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31275,
											"end": 31347,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "694"
										},
										{
											"begin": 31343,
											"end": 31345,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 31332,
											"end": 31341,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 31328,
											"end": 31346,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 31319,
											"end": 31325,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 31275,
											"end": 31347,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 31275,
											"end": 31347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 31275,
											"end": 31347,
											"name": "tag",
											"source": 13,
											"value": "694"
										},
										{
											"begin": 31275,
											"end": 31347,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31394,
											"end": 31403,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31388,
											"end": 31392,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31384,
											"end": 31404,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 31379,
											"end": 31381,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 31368,
											"end": 31377,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 31364,
											"end": 31382,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 31357,
											"end": 31405,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 31422,
											"end": 31530,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "695"
										},
										{
											"begin": 31525,
											"end": 31529,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31516,
											"end": 31522,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 31422,
											"end": 31530,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 31422,
											"end": 31530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 31422,
											"end": 31530,
											"name": "tag",
											"source": 13,
											"value": "695"
										},
										{
											"begin": 31422,
											"end": 31530,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31414,
											"end": 31530,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 31414,
											"end": 31530,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31577,
											"end": 31586,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31571,
											"end": 31575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31567,
											"end": 31587,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 31562,
											"end": 31564,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 31551,
											"end": 31560,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 31547,
											"end": 31565,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 31540,
											"end": 31588,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 31605,
											"end": 31713,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "696"
										},
										{
											"begin": 31708,
											"end": 31712,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31699,
											"end": 31705,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 31605,
											"end": 31713,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 31605,
											"end": 31713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 31605,
											"end": 31713,
											"name": "tag",
											"source": 13,
											"value": "696"
										},
										{
											"begin": 31605,
											"end": 31713,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31597,
											"end": 31713,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 31597,
											"end": 31713,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31761,
											"end": 31770,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31755,
											"end": 31759,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31751,
											"end": 31771,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 31745,
											"end": 31748,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 31734,
											"end": 31743,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 31730,
											"end": 31749,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 31723,
											"end": 31772,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 31789,
											"end": 31865,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "697"
										},
										{
											"begin": 31860,
											"end": 31864,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31851,
											"end": 31857,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 31789,
											"end": 31865,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 31789,
											"end": 31865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 31789,
											"end": 31865,
											"name": "tag",
											"source": 13,
											"value": "697"
										},
										{
											"begin": 31789,
											"end": 31865,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31781,
											"end": 31865,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 31781,
											"end": 31865,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30819,
											"end": 31872,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 30819,
											"end": 31872,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 30819,
											"end": 31872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30819,
											"end": 31872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30819,
											"end": 31872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30819,
											"end": 31872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30819,
											"end": 31872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30819,
											"end": 31872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30819,
											"end": 31872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								},
								"CC14D9D152288110BB6CD8F00736A77DBD45E58D117A5B7D4A7AB6BD571D2C8C": "697066733a2f2f6261666b7265696632747268626f7467613278336d7271356478617661363279706771703379636f67673435726a677772797a6665626c6a6d7261"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"MNFT1155.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256,bytes)": "731133e9",
							"mintBatch(address,uint256[],uint256[],bytes)": "1f7fdffa",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setURI(string)": "02fe5305",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MNFT1155.sol\":\"MALLU\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xde13f6ab310a659b9732f7f7ea3eed7c4d9925cc72e77e6554b2126563a143f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2176f1c5e871613bd6502558cc98d268e92167dcd546d15941587a670a48d4eb\",\"dweb:/ipfs/QmboYR7jbENha8ahFbWeHu2pHr5jjA9PuDzRDJHLvGDCBh\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbb8e61c91d4c2998ab2728541b5b0648f1c2887adc40320d05f2e59dfcd7b26f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17e87f4d08a4d91ed894c5dfd908c6940c2676456e1ca5f273e3bb2626b3949f\",\"dweb:/ipfs/QmbxfRXFKBGKEqQZjKX3MbKgQHjZBftUASUiAgBcak4W6p\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x4b01e5dda0585f12f87c0832f259078ddbecc3d1fccb372ee17a0aef431a8423\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35bcc49c756ba8bd1a5029791e6c852d6e06e2d9667b6317445dcd90bc7e9dee\",\"dweb:/ipfs/QmUerWRdmHbBosZp8TURCRXFc4CCfiQwiW1h3VkC2DV18y\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcf709f69ba9bcb754b1c075cee2d875fd4eede97e15968a5d0af9c697341f36d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd5ad29a99bf7b77b574bf5466d33ca7c91753af314c0d9102115cd6cde64c21\",\"dweb:/ipfs/QmefzzUWwik2ZA8TL5rV5UvPKf6Za2Mi75UzmKBkgeQhQY\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x65bb381eb6529ac00a25f48f349778c80465b73f56c38a43500afccd1494aa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab0e6ae5c2e53c529054848ca65df1e99ac0c134281af8c51c0b63c022774df6\",\"dweb:/ipfs/QmVaycMAorQKbDRFwfsz8w2g6o1mxpHUHQRWyoEq3E3pfV\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xb29e63233239db7dac21a98aaa7432409ea1269ed31a9725e84f012969db2fdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://deff3fb0cad4fc8413db0cbaf98a1cdf3f36a1f1d66421f946a2031f070959e6\",\"dweb:/ipfs/QmV4VdBfHEiwmgcqPZvsgHM48KjvA4RguvVak55yVMRTwa\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa368f899e8943d6f020eddbbb9435e3d9d6dd56fb0487bb61e013948ec2d52f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20e3c5aa3aa36029db3fa3286788c1172f5022ba82a802e2de8561bd417de8ec\",\"dweb:/ipfs/Qmb2AF47tJqfDSWEL2aqLo31EDdHheAL8BkVoXAdy4sc89\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x32f1faf405d9d68f67d407d817ef8f4262be6e21223c04fa371b8c7a63762890\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e15ded8a8dfeaf5d5f6ab45c2520910f2f98381bc3136d64fc76894e0db49d1\",\"dweb:/ipfs/QmTYQqvbNnAjTB4hfQHMgnj3u9kNqkykfdCBY5TkXe6zp1\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x0f53fe356d9a5d9132fadafe1a03d4bfb7479e620abd8aed625df70fea571761\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e64683fd28348b991a0a5759707171f52b7a6528ee43f656b8702d6fc1b65ab\",\"dweb:/ipfs/QmPvC87n9737NsDfzCELjjqP6XxcQK2Jb4czveAomoGRU7\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xce4e0bf91fc3bc1fb74403096ed7b80777df28e03154c9f64b049a862cef6557\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d8897ef365caecb89711a78a510a283a0faa56980e3048234c70ea8e43993ab\",\"dweb:/ipfs/QmZqX4RzBFMyJGYSTpDB5b2Fi2qzyicKTRNL2ozYi212Hb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xbc6690e09b5c0729776d3af9161cebf6e92fd7e7e1396ce9d542f69c8f04282c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d0ba319335c98b76bf697a19c59134284cc48c7e2b2d95bd958352b5955b566\",\"dweb:/ipfs/QmXxCoGxsEN4oAVjNtoD6LosFMSJGifVcSzVH5pKV6ushD\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x9c9194a1f6fbb7b8a837dc16686626b2093a9c6e46c812e14b0b09c8497b0213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542cb8cbe77cbb740d42beef23fe7a496711879c5ec843b89a8738e200a38e0b\",\"dweb:/ipfs/QmVpxj9wyTThYJWpoTc9mLWieiWj453h6b8mkLn8w2MdPG\"]},\"MNFT1155.sol\":{\"keccak256\":\"0x6cce2572ab5bb8c721877e0bd07365bb7f2d2578270d6317b7c9bbae0c316d5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddabefffdf44ff985d0c8bea0991a64dc0c8c7601a932a132f6fd1161588a2cc\",\"dweb:/ipfs/QmYcjSE71yf7ZphJoUGGd5wfe6hJrGkrbNuMBAH6qqE2Po\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 326,
								"contract": "MNFT1155.sol:MALLU",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "MNFT1155.sol:MALLU",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 334,
								"contract": "MNFT1155.sol:MALLU",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "MNFT1155.sol:MALLU",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1729
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1730,
							"src": "127:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1729,
										"src": "135:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"691:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1729,
										"src": "691:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "691:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "174:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1729
							],
							"name": "Ownable",
							"nameLocation": "680:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "721:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "705:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "705:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "734:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "830:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "865:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "857:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "857:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:17:0"
									},
									"src": "824:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "880:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "973:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1001:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "993:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:15:0"
									},
									"src": "967:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1020:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1057:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1041:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1088:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1072:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1072:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1040:57:0"
									},
									"src": "1014:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1258:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1272:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1296:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1288:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1288:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1288:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1272:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1268:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1300:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1349:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1341:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1341:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1341:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1321:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1321:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1314:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1391:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1372:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1372:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1372:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1104:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1244:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1236:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1235:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1258:0:0"
									},
									"scope": 147,
									"src": "1224:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1520:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1530:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1530:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1530:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1553:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1417:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1508:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1517:2:0"
									},
									"src": "1499:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1692:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1709:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1702:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1567:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1646:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1651:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1683:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:9:0"
									},
									"scope": 147,
									"src": "1637:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1840:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1854:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1854:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "1865:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1865:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1854:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1850:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1879:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1711,
																			"src": "1927:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1927:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1900:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1900:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1893:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1728:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1804:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1815:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1840:0:0"
									},
									"scope": 147,
									"src": "1795:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2346:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2383:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2375:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2375:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2375:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2356:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2356:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1963:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2336:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2336:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2336:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2301:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2318:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2346:0:0"
									},
									"scope": 147,
									"src": "2292:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2612:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2626:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2646:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2638:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2638:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2638:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2626:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2622:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2650:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2699:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2691:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2691:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2691:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2671:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2671:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2664:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2741:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2722:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2722:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2722:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2399:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2602:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2602:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2602:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2551:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2577:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2569:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2569:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2568:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2612:0:0"
									},
									"scope": 147,
									"src": "2542:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2974:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2992:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2984:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2984:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3003:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2984:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3019:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3028:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3019:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3019:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3072:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3082:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3051:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3051:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3046:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2763:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2920:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2947:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2939:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2939:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2938:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2974:0:0"
									},
									"scope": 147,
									"src": "2911:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "662:2438:0",
							"usedErrors": [
								13,
								18
							]
						}
					],
					"src": "102:2999:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "137:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "287:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "306:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "626:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "659:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "651:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "675:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "667:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "692:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "684:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:49:1"
									},
									"src": "620:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "706:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "869:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "896:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "888:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:16:1"
									},
									"src": "863:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "910:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1080:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1109:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1101:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1101:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1100:18:1"
									},
									"src": "1074:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1125:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1481:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1516:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1508:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1508:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1533:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1525:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1525:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1552:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1544:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1507:52:1"
									},
									"src": "1475:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1566:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1751:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1780:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1772:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1772:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1771:18:1"
									},
									"src": "1745:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1796:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2002:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2021:17:1"
									},
									"src": "1996:43:1"
								}
							],
							"scope": 285,
							"src": "277:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2043:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2195:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2215:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2445:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2472:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2464:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2464:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:15:1"
									},
									"src": "2439:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2485:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2628:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2659:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2651:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2651:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2650:17:1"
									},
									"src": "2622:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2674:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2974:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3003:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2995:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2995:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3019:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3011:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3011:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3036:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3028:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3028:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2994:48:1"
									},
									"src": "2968:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3049:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3212:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3240:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3232:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3232:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3231:16:1"
									},
									"src": "3206:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3254:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3424:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3454:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3446:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:18:1"
									},
									"src": "3418:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3470:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3728:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3763:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3755:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3755:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3781:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3773:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3773:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3754:35:1"
									},
									"src": "3722:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3796:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3981:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4011:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4003:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4003:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4002:18:1"
									},
									"src": "3975:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4027:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4235:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4265:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4257:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4257:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4256:18:1"
									},
									"src": "4229:46:1"
								}
							],
							"scope": 285,
							"src": "2185:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4279:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4433:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4454:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4826:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4861:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4853:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4877:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4869:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4869:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4894:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4886:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4886:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4910:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4902:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4902:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4852:66:1"
									},
									"src": "4820:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4925:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5088:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5117:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5109:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5109:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5108:16:1"
									},
									"src": "5082:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5131:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5301:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5332:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5324:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5324:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5323:18:1"
									},
									"src": "5295:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5348:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5615:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5652:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5644:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5644:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5670:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5662:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5662:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5643:33:1"
									},
									"src": "5609:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5683:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5868:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5899:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5891:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5890:18:1"
									},
									"src": "5862:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5915:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6123:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6154:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6146:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6146:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6145:18:1"
									},
									"src": "6117:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6170:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6461:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6495:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6487:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6487:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6514:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6506:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6506:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6486:41:1"
									},
									"src": "6455:73:1"
								}
							],
							"scope": 285,
							"src": "4423:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							]
						}
					],
					"src": "112:6419:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Arrays": [
							1699
						],
						"Context": [
							1729
						],
						"ERC1155": [
							1335
						],
						"ERC165": [
							1863
						],
						"IERC1155": [
							1458
						],
						"IERC1155Errors": [
							284
						],
						"IERC1155MetadataURI": [
							1516
						],
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							1875
						]
					},
					"id": 1336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1459,
							"src": "134:40:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1458,
										"src": "142:8:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1501,
							"src": "175:56:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC1155Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1500,
										"src": "183:16:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1517,
							"src": "232:73:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "IERC1155MetadataURI",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1516,
										"src": "240:19:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1730,
							"src": "306:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1729,
										"src": "314:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 297,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1864,
							"src": "355:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 295,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1875,
										"src": "363:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 296,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1863,
										"src": "372:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
							"file": "../../utils/Arrays.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1700,
							"src": "425:46:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 298,
										"name": "Arrays",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1699,
										"src": "433:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 285,
							"src": "472:67:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 300,
										"name": "IERC1155Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 284,
										"src": "480:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 303,
										"name": "Context",
										"nameLocations": [
											"755:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1729,
										"src": "755:7:2"
									},
									"id": 304,
									"nodeType": "InheritanceSpecifier",
									"src": "755:7:2"
								},
								{
									"baseName": {
										"id": 305,
										"name": "ERC165",
										"nameLocations": [
											"764:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1863,
										"src": "764:6:2"
									},
									"id": 306,
									"nodeType": "InheritanceSpecifier",
									"src": "764:6:2"
								},
								{
									"baseName": {
										"id": 307,
										"name": "IERC1155",
										"nameLocations": [
											"772:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1458,
										"src": "772:8:2"
									},
									"id": 308,
									"nodeType": "InheritanceSpecifier",
									"src": "772:8:2"
								},
								{
									"baseName": {
										"id": 309,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"782:19:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1516,
										"src": "782:19:2"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "782:19:2"
								},
								{
									"baseName": {
										"id": 311,
										"name": "IERC1155Errors",
										"nameLocations": [
											"803:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 284,
										"src": "803:14:2"
									},
									"id": 312,
									"nodeType": "InheritanceSpecifier",
									"src": "803:14:2"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 302,
								"nodeType": "StructuredDocumentation",
								"src": "541:184:2",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"
							},
							"fullyImplemented": true,
							"id": 1335,
							"linearizedBaseContracts": [
								1335,
								284,
								1516,
								1458,
								1863,
								1875,
								1729
							],
							"name": "ERC1155",
							"nameLocation": "744:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 316,
									"libraryName": {
										"id": 313,
										"name": "Arrays",
										"nameLocations": [
											"830:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1699,
										"src": "830:6:2"
									},
									"nodeType": "UsingForDirective",
									"src": "824:27:2",
									"typeName": {
										"baseType": {
											"id": 314,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "841:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 315,
										"nodeType": "ArrayTypeName",
										"src": "841:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 320,
									"libraryName": {
										"id": 317,
										"name": "Arrays",
										"nameLocations": [
											"862:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1699,
										"src": "862:6:2"
									},
									"nodeType": "UsingForDirective",
									"src": "856:27:2",
									"typeName": {
										"baseType": {
											"id": 318,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "873:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 319,
										"nodeType": "ArrayTypeName",
										"src": "873:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"constant": false,
									"id": 326,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "956:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "889:76:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 325,
										"keyName": "id",
										"keyNameLocation": "905:2:2",
										"keyType": {
											"id": 321,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "897:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "889:58:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 324,
											"keyName": "account",
											"keyNameLocation": "927:7:2",
											"keyType": {
												"id": 322,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "919:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "911:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 323,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "938:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 332,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1042:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "972:88:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 331,
										"keyName": "account",
										"keyNameLocation": "988:7:2",
										"keyType": {
											"id": 327,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "980:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "972:61:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 330,
											"keyName": "operator",
											"keyNameLocation": "1015:8:2",
											"keyType": {
												"id": 328,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1007:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "999:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 329,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1027:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 334,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1196:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "1181:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 333,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1181:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1282:30:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 341,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "1300:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 340,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "1292:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1292:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "1292:13:2"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "1207:38:2",
										"text": " @dev See {_setURI}."
									},
									"id": 345,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1276:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1262:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1262:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1261:20:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1282:0:2"
									},
									"scope": 1335,
									"src": "1250:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1862,
										1874
									],
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "1487:197:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 356,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1516:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 358,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "1536:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1458_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1458_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 357,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1531:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1531:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1458",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1546:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1531:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1516:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 362,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1573:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 364,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1516,
																			"src": "1593:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1516_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1516_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 363,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1588:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1588:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1516",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1614:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1588:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1573:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1516:109:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 371,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1665:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 369,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1641:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1335_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1647:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1862,
															"src": "1641:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1641:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1516:161:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 355,
												"id": 374,
												"nodeType": "Return",
												"src": "1497:180:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1318:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1388:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 352,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 350,
												"name": "ERC165",
												"nameLocations": [
													"1455:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1863,
												"src": "1455:6:2"
											},
											{
												"id": 351,
												"name": "IERC165",
												"nameLocations": [
													"1463:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1875,
												"src": "1463:7:2"
											}
										],
										"src": "1446:25:2"
									},
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1413:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1406:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 347,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1406:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1405:20:2"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1481:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1481:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:6:2"
									},
									"scope": 1335,
									"src": "1379:305:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1515
									],
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "2158:28:2",
										"statements": [
											{
												"expression": {
													"id": 384,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 334,
													"src": "2175:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 383,
												"id": 385,
												"nodeType": "Return",
												"src": "2168:11:2"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "1690:388:2",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "2092:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2096:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2096:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:18:2"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2143:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2143:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2142:15:2"
									},
									"scope": 1335,
									"src": "2083:103:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1396
									],
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "2332:46:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 397,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "2349:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 399,
														"indexExpression": {
															"id": 398,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "2359:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2349:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 401,
													"indexExpression": {
														"id": 400,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "2363:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2349:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 396,
												"id": 402,
												"nodeType": "Return",
												"src": "2342:29:2"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "2192:49:2",
										"text": " @dev See {IERC1155-balanceOf}."
									},
									"functionSelector": "00fdd58e",
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2255:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2273:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2265:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2265:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2290:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2282:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2282:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2264:29:2"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2323:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2323:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:9:2"
									},
									"scope": 1335,
									"src": "2246:132:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1409
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "2677:410:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 417,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "2691:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2700:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2691:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 419,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "2710:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2714:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2710:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2691:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 430,
												"nodeType": "IfStatement",
												"src": "2687:121:2",
												"trueBody": {
													"id": 429,
													"nodeType": "Block",
													"src": "2722:86:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 423,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "2769:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2773:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2769:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 425,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 408,
																			"src": "2781:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2790:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2781:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 422,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "2743:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:54:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 428,
															"nodeType": "RevertStatement",
															"src": "2736:61:2"
														}
													]
												}
											},
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2835:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "2818:30:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 433,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2818:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 434,
															"nodeType": "ArrayTypeName",
															"src": "2818:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 439,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "2865:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2874:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2865:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2851:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 436,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2855:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 437,
															"nodeType": "ArrayTypeName",
															"src": "2855:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2851:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2818:63:2"
											},
											{
												"body": {
													"id": 469,
													"nodeType": "Block",
													"src": "2938:112:2",
													"statements": [
														{
															"expression": {
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 454,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "2952:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 456,
																	"indexExpression": {
																		"id": 455,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 444,
																		"src": "2966:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2952:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 460,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 444,
																					"src": "3009:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 458,
																					"name": "accounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 408,
																					"src": "2981:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2990:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1698,
																				"src": "2981:27:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address[] memory,uint256) pure returns (address)"
																				}
																			},
																			"id": 461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2981:30:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 464,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 444,
																					"src": "3036:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 462,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 411,
																					"src": "3013:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3017:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1685,
																				"src": "3013:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3013:25:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 457,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "2971:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2971:68:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2952:87:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 468,
															"nodeType": "ExpressionStatement",
															"src": "2952:87:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 447,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "2912:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 448,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "2916:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2925:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2916:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2912:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 470,
												"initializationExpression": {
													"assignments": [
														444
													],
													"declarations": [
														{
															"constant": false,
															"id": 444,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2905:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 470,
															"src": "2897:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 443,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2897:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 446,
													"initialValue": {
														"hexValue": "30",
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2909:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2897:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2933:3:2",
														"subExpression": {
															"id": 451,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "2935:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 453,
													"nodeType": "ExpressionStatement",
													"src": "2933:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2892:158:2"
											},
											{
												"expression": {
													"id": 471,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 435,
													"src": "3067:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 416,
												"id": 472,
												"nodeType": "Return",
												"src": "3060:20:2"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "2384:146:2",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2544:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2585:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2568:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 406,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2568:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 407,
													"nodeType": "ArrayTypeName",
													"src": "2568:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2620:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2603:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 409,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2603:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 410,
													"nodeType": "ArrayTypeName",
													"src": "2603:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:71:2"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2659:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 413,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2659:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 414,
													"nodeType": "ArrayTypeName",
													"src": "2659:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2658:18:2"
									},
									"scope": 1335,
									"src": "2535:552:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1417
									],
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "3230:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 483,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1711,
																"src": "3259:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3259:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3273:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "3283:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 482,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "3240:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3240:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "3240:52:2"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3093:57:2",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3164:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3190:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "3182:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3182:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3205:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "3200:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 478,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3200:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3181:33:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3230:0:2"
									},
									"scope": 1335,
									"src": "3155:144:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1427
									],
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "3462:61:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 500,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "3479:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 502,
														"indexExpression": {
															"id": 501,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "3498:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3479:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 504,
													"indexExpression": {
														"id": 503,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "3507:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3479:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 499,
												"id": 505,
												"nodeType": "Return",
												"src": "3472:44:2"
											}
										]
									},
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "3305:56:2",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3375:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3400:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3392:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3392:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3417:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3409:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3409:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3391:35:2"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3456:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3456:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3455:6:2"
									},
									"scope": 1335,
									"src": "3366:157:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "3703:238:2",
										"statements": [
											{
												"assignments": [
													522
												],
												"declarations": [
													{
														"constant": false,
														"id": 522,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3721:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "3713:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 521,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3713:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 525,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 523,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "3730:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3730:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3713:29:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 526,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "3756:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 527,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "3764:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3756:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3774:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 530,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "3792:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 531,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "3798:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 529,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "3775:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3775:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3756:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 541,
												"nodeType": "IfStatement",
												"src": "3752:129:2",
												"trueBody": {
													"id": 540,
													"nodeType": "Block",
													"src": "3807:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 536,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "3857:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 537,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "3865:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 535,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "3828:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3828:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 539,
															"nodeType": "RevertStatement",
															"src": "3821:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "3908:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "3914:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "3918:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 546,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "3922:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 547,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "3929:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "3890:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "3890:44:2"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "3529:56:2",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3599:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3624:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3616:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3616:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3638:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3630:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3630:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3650:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3642:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3642:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3662:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3654:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3654:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3682:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3669:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 517,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3669:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3615:72:2"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3703:0:2"
									},
									"scope": 1335,
									"src": "3590:351:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1457
									],
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "4197:245:2",
										"statements": [
											{
												"assignments": [
													568
												],
												"declarations": [
													{
														"constant": false,
														"id": 568,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4215:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 596,
														"src": "4207:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 567,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4207:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 571,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 569,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "4224:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4224:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4207:29:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4250:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 573,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "4258:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4250:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4268:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 576,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "4286:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 577,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "4292:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 575,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "4269:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4269:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4250:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 587,
												"nodeType": "IfStatement",
												"src": "4246:129:2",
												"trueBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "4301:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 568,
																		"src": "4351:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 583,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "4359:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 581,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "4322:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4322:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 585,
															"nodeType": "RevertStatement",
															"src": "4315:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 589,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4407:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "4413:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "4417:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 592,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4422:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 593,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "4430:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 588,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "4384:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4384:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "4384:51:2"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "3947:61:2",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4022:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4061:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4053:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4053:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4112:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4095:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 557,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4095:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 558,
													"nodeType": "ArrayTypeName",
													"src": "4095:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4142:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4125:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 560,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4125:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 561,
													"nodeType": "ArrayTypeName",
													"src": "4125:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4171:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4158:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4158:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4043:138:2"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4197:0:2"
									},
									"scope": 1335,
									"src": "4013:429:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "5250:1174:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 611,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "5264:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5268:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5264:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 613,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "5278:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5285:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5278:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5264:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 624,
												"nodeType": "IfStatement",
												"src": "5260:117:2",
												"trueBody": {
													"id": 623,
													"nodeType": "Block",
													"src": "5293:84:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 617,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 605,
																			"src": "5340:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5344:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5340:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 619,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 608,
																			"src": "5352:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5359:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5352:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 616,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "5314:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5314:52:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 622,
															"nodeType": "RevertStatement",
															"src": "5307:59:2"
														}
													]
												}
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5395:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 749,
														"src": "5387:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 625,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5387:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 627,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "5406:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5406:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5387:31:2"
											},
											{
												"body": {
													"id": 710,
													"nodeType": "Block",
													"src": "5470:650:2",
													"statements": [
														{
															"assignments": [
																642
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 642,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "5492:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 710,
																	"src": "5484:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 641,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5484:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 647,
															"initialValue": {
																"arguments": [
																	{
																		"id": 645,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5520:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 643,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "5497:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5501:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1685,
																	"src": "5497:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5497:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5484:38:2"
														},
														{
															"assignments": [
																649
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 649,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "5544:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 710,
																	"src": "5536:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 648,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5536:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 654,
															"initialValue": {
																"arguments": [
																	{
																		"id": 652,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5578:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 650,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "5552:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5559:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1685,
																	"src": "5552:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5552:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5536:44:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 655,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "5599:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5615:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5607:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 656,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5607:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5607:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5599:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 693,
															"nodeType": "IfStatement",
															"src": "5595:420:2",
															"trueBody": {
																"id": 692,
																"nodeType": "Block",
																"src": "5619:396:2",
																"statements": [
																	{
																		"assignments": [
																			662
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 662,
																				"mutability": "mutable",
																				"name": "fromBalance",
																				"nameLocation": "5645:11:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 692,
																				"src": "5637:19:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 661,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5637:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 668,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 663,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 326,
																					"src": "5659:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 665,
																				"indexExpression": {
																					"id": 664,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "5669:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5659:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 667,
																			"indexExpression": {
																				"id": 666,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 600,
																				"src": "5673:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5659:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5637:41:2"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 669,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 662,
																				"src": "5700:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 670,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 649,
																				"src": "5714:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5700:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 680,
																		"nodeType": "IfStatement",
																		"src": "5696:129:2",
																		"trueBody": {
																			"id": 679,
																			"nodeType": "Block",
																			"src": "5721:104:2",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 673,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 600,
																								"src": "5777:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 674,
																								"name": "fromBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 662,
																								"src": "5783:11:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 675,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 649,
																								"src": "5796:5:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 676,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 642,
																								"src": "5803:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 672,
																							"name": "ERC1155InsufficientBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 249,
																							"src": "5750:26:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256,uint256,uint256) pure"
																							}
																						},
																						"id": 677,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5750:56:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 678,
																					"nodeType": "RevertStatement",
																					"src": "5743:63:2"
																				}
																			]
																		}
																	},
																	{
																		"id": 691,
																		"nodeType": "UncheckedBlock",
																		"src": "5842:159:2",
																		"statements": [
																			{
																				"expression": {
																					"id": 689,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 681,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 326,
																								"src": "5941:9:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 684,
																							"indexExpression": {
																								"id": 682,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 642,
																								"src": "5951:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5941:13:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 685,
																						"indexExpression": {
																							"id": 683,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 600,
																							"src": "5955:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "5941:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 688,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 686,
																							"name": "fromBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 662,
																							"src": "5963:11:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 687,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 649,
																							"src": "5977:5:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5963:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5941:41:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 690,
																				"nodeType": "ExpressionStatement",
																				"src": "5941:41:2"
																			}
																		]
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 694,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "6033:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6047:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6039:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 695,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6039:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6039:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6033:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 709,
															"nodeType": "IfStatement",
															"src": "6029:81:2",
															"trueBody": {
																"id": 708,
																"nodeType": "Block",
																"src": "6051:59:2",
																"statements": [
																	{
																		"expression": {
																			"id": 706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 700,
																						"name": "_balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 326,
																						"src": "6069:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 703,
																					"indexExpression": {
																						"id": 701,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 642,
																						"src": "6079:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6069:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 704,
																				"indexExpression": {
																					"id": 702,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 602,
																					"src": "6083:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6069:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 705,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 649,
																				"src": "6090:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6069:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 707,
																		"nodeType": "ExpressionStatement",
																		"src": "6069:26:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 634,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "5449:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 635,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "5453:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5457:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5453:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5449:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 711,
												"initializationExpression": {
													"assignments": [
														631
													],
													"declarations": [
														{
															"constant": false,
															"id": 631,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5442:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 711,
															"src": "5434:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 630,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5434:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 633,
													"initialValue": {
														"hexValue": "30",
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5446:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5434:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5465:3:2",
														"subExpression": {
															"id": 638,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "5467:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 640,
													"nodeType": "ExpressionStatement",
													"src": "5465:3:2"
												},
												"nodeType": "ForStatement",
												"src": "5429:691:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 712,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "6134:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6138:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6134:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6148:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6134:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "6342:76:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 740,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6375:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 741,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "6385:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 742,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "6391:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "6395:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 744,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "6400:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 739,
																	"name": "TransferBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1370,
																	"src": "6361:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6361:46:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "6356:51:2"
														}
													]
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "6130:288:2",
												"trueBody": {
													"id": 738,
													"nodeType": "Block",
													"src": "6151:185:2",
													"statements": [
														{
															"assignments": [
																717
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 717,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6173:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 738,
																	"src": "6165:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 716,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6165:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 722,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6201:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 718,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "6178:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6182:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1685,
																	"src": "6178:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6178:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6165:38:2"
														},
														{
															"assignments": [
																724
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 724,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "6225:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 738,
																	"src": "6217:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 723,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6217:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 729,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6259:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 725,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "6233:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6240:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1685,
																	"src": "6233:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6233:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6217:44:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 731,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6295:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 732,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "6305:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 733,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "6311:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 734,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "6315:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 735,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "6319:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 730,
																	"name": "TransferSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1355,
																	"src": "6280:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256)"
																	}
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6280:45:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 737,
															"nodeType": "EmitStatement",
															"src": "6275:50:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "4448:690:2",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5152:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5168:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5160:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5160:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5182:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5174:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5174:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5203:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5186:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 603,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5186:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 604,
													"nodeType": "ArrayTypeName",
													"src": "5186:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "5225:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5208:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 606,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5208:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 607,
													"nodeType": "ArrayTypeName",
													"src": "5208:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5159:73:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5250:0:2"
									},
									"scope": 1335,
									"src": "5143:1281:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "7194:499:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 767,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "7212:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 768,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "7218:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 769,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "7222:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 770,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "7227:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 766,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "7204:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7204:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "7204:30:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 773,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "7248:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7262:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7254:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 774,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7254:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7254:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7248:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "7244:443:2",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "7266:421:2",
													"statements": [
														{
															"assignments": [
																780
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 780,
																	"mutability": "mutable",
																	"name": "operator",
																	"nameLocation": "7288:8:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 823,
																	"src": "7280:16:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 779,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7280:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 783,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 781,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1711,
																	"src": "7299:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7299:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7280:31:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 784,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "7329:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7333:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7329:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7343:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7329:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 821,
																"nodeType": "Block",
																"src": "7570:107:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 813,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "7624:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 814,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "7634:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 815,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "7640:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 816,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 758,
																					"src": "7644:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 817,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "7649:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 818,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "7657:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 812,
																				"name": "_doSafeBatchTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1318,
																				"src": "7588:35:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																				}
																			},
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7588:74:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 820,
																		"nodeType": "ExpressionStatement",
																		"src": "7588:74:2"
																	}
																]
															},
															"id": 822,
															"nodeType": "IfStatement",
															"src": "7325:352:2",
															"trueBody": {
																"id": 811,
																"nodeType": "Block",
																"src": "7346:218:2",
																"statements": [
																	{
																		"assignments": [
																			789
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 789,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "7372:2:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 811,
																				"src": "7364:10:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 788,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7364:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 794,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 792,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7400:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 790,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 758,
																					"src": "7377:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7381:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1685,
																				"src": "7377:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7377:25:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7364:38:2"
																	},
																	{
																		"assignments": [
																			796
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 796,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "7428:5:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 811,
																				"src": "7420:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 795,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7420:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 801,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 799,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7462:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 797,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "7436:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7443:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1685,
																				"src": "7436:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7436:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7420:44:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 803,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "7513:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 804,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "7523:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 805,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "7529:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 806,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 789,
																					"src": "7533:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 807,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 796,
																					"src": "7537:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 808,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "7544:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 802,
																				"name": "_doSafeTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1248,
																				"src": "7482:30:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																				}
																			},
																			"id": 809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7482:67:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 810,
																		"nodeType": "ExpressionStatement",
																		"src": "7482:67:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "6430:568:2",
										"text": " @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateWithAcceptanceCheck",
									"nameLocation": "7012:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7056:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7048:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7048:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7078:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7070:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7070:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "7107:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7090:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 756,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7090:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 757,
													"nodeType": "ArrayTypeName",
													"src": "7090:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "7137:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7120:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 759,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7120:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 760,
													"nodeType": "ArrayTypeName",
													"src": "7120:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7166:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7153:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 762,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7153:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7038:138:2"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7194:0:2"
									},
									"scope": 1335,
									"src": "7003:690:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "8258:355:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 840,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "8272:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8286:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8278:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 841,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8278:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8278:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8272:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 854,
												"nodeType": "IfStatement",
												"src": "8268:88:2",
												"trueBody": {
													"id": 853,
													"nodeType": "Block",
													"src": "8290:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8342:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8334:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 847,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8334:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8334:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 846,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "8311:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8311:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 852,
															"nodeType": "RevertStatement",
															"src": "8304:41:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 855,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "8369:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8385:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8377:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 856,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8377:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8377:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8369:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 869,
												"nodeType": "IfStatement",
												"src": "8365:88:2",
												"trueBody": {
													"id": 868,
													"nodeType": "Block",
													"src": "8389:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8439:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8431:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 862,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8431:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8431:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 861,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "8410:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8410:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 867,
															"nodeType": "RevertStatement",
															"src": "8403:39:2"
														}
													]
												}
											},
											{
												"assignments": [
													874,
													877
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8480:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 891,
														"src": "8463:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 872,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8463:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 873,
															"nodeType": "ArrayTypeName",
															"src": "8463:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 877,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "8502:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 891,
														"src": "8485:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 875,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8485:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 876,
															"nodeType": "ArrayTypeName",
															"src": "8485:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 882,
												"initialValue": {
													"arguments": [
														{
															"id": 879,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "8531:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 880,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "8535:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 878,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "8512:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8512:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8462:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 884,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "8578:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 885,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "8584:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 886,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "8588:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 887,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "8593:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 888,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "8601:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 883,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "8551:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8551:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "8551:55:2"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "7699:446:2",
										"text": " @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "8159:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8185:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8177:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8177:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8199:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8191:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8191:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8211:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8203:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8203:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8223:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8215:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8215:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8243:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8230:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 836,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8230:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8176:72:2"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8258:0:2"
									},
									"scope": 1335,
									"src": "8150:463:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "9193:266:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 908,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "9207:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9221:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9213:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 909,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9213:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9213:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9207:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 922,
												"nodeType": "IfStatement",
												"src": "9203:88:2",
												"trueBody": {
													"id": 921,
													"nodeType": "Block",
													"src": "9225:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 917,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9277:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9269:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 915,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9269:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9269:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 914,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "9246:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9246:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 920,
															"nodeType": "RevertStatement",
															"src": "9239:41:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 923,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "9304:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9320:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9312:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 924,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9312:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9312:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9304:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "9300:88:2",
												"trueBody": {
													"id": 936,
													"nodeType": "Block",
													"src": "9324:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9374:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9366:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 930,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9366:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9366:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 929,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "9345:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9345:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 935,
															"nodeType": "RevertStatement",
															"src": "9338:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 939,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "9424:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "9430:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "9434:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 942,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "9439:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 943,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "9447:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 938,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "9397:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9397:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "9397:55:2"
											}
										]
									},
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "8619:390:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "9023:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9063:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9055:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9055:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9085:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9077:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9077:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9114:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9097:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 898,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9097:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 899,
													"nodeType": "ArrayTypeName",
													"src": "9097:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "9144:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9127:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 901,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9127:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 902,
													"nodeType": "ArrayTypeName",
													"src": "9127:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9173:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9160:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 904,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9160:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9045:138:2"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9193:0:2"
									},
									"scope": 1335,
									"src": "9014:445:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "10337:30:2",
										"statements": [
											{
												"expression": {
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 953,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "10347:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 954,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "10354:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10347:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "10347:13:2"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "9465:811:2",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "10290:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "10312:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "10298:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 949,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10298:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10297:22:2"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10337:0:2"
									},
									"scope": 1335,
									"src": "10281:86:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "10827:264:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 970,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "10841:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10855:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10847:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 971,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10847:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10847:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10841:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 984,
												"nodeType": "IfStatement",
												"src": "10837:88:2",
												"trueBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "10859:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10911:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10903:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 977,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10903:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10903:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 976,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "10880:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10880:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 982,
															"nodeType": "RevertStatement",
															"src": "10873:41:2"
														}
													]
												}
											},
											{
												"assignments": [
													989,
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 989,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10952:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "10935:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 987,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10935:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 988,
															"nodeType": "ArrayTypeName",
															"src": "10935:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "10974:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "10957:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 990,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10957:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 991,
															"nodeType": "ArrayTypeName",
															"src": "10957:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "11003:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 995,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "11007:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 993,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "10984:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10984:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10934:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11058:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11050:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 999,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11050:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11050:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "11062:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "11066:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1005,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "11071:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1006,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "11079:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 998,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "11023:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11023:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "11023:61:2"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "10373:367:2",
										"text": " @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10754:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10768:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10760:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10780:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10772:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10772:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10792:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10784:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10784:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10812:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10799:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10799:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10759:58:2"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10827:0:2"
									},
									"scope": 1335,
									"src": "10745:346:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "11629:175:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1024,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "11643:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11657:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11649:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1025,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11649:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11649:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11643:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1038,
												"nodeType": "IfStatement",
												"src": "11639:88:2",
												"trueBody": {
													"id": 1037,
													"nodeType": "Block",
													"src": "11661:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11713:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11705:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1031,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11705:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11705:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1030,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "11682:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11682:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1036,
															"nodeType": "RevertStatement",
															"src": "11675:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11771:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11763:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1040,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11763:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11763:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "11775:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1045,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "11779:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1046,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "11784:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1047,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "11792:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1039,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "11736:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11736:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "11736:61:2"
											}
										]
									},
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "11097:420:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "11531:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11550:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11542:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11542:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11571:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11554:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1014,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11554:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1015,
													"nodeType": "ArrayTypeName",
													"src": "11554:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "11593:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11576:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1017,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11576:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1018,
													"nodeType": "ArrayTypeName",
													"src": "11576:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11614:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11601:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1020,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11601:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11541:78:2"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11629:0:2"
									},
									"scope": 1335,
									"src": "11522:282:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "12163:264:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1061,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "12177:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12193:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12185:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1062,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12185:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12185:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12177:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1075,
												"nodeType": "IfStatement",
												"src": "12173:88:2",
												"trueBody": {
													"id": 1074,
													"nodeType": "Block",
													"src": "12197:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12247:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12239:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1068,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12239:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12239:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1067,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "12218:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12218:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1073,
															"nodeType": "RevertStatement",
															"src": "12211:39:2"
														}
													]
												}
											},
											{
												"assignments": [
													1080,
													1083
												],
												"declarations": [
													{
														"constant": false,
														"id": 1080,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "12288:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1100,
														"src": "12271:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1078,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12271:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1079,
															"nodeType": "ArrayTypeName",
															"src": "12271:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "12310:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1100,
														"src": "12293:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1081,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12293:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1082,
															"nodeType": "ArrayTypeName",
															"src": "12293:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"initialValue": {
													"arguments": [
														{
															"id": 1085,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "12339:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1086,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "12343:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1084,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "12320:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12320:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12270:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1090,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "12386:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12400:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12392:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1091,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12392:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12392:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1095,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "12404:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1096,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "12409:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12417:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1089,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "12359:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12359:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "12359:61:2"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "11810:283:2",
										"text": " @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "12107:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12121:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12113:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12113:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "12135:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12127:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12127:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12147:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12139:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12139:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12112:41:2"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12163:0:2"
									},
									"scope": 1335,
									"src": "12098:329:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "12873:175:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1113,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "12887:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12903:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12895:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1114,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12895:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12895:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12887:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "12883:88:2",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "12907:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1122,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12957:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12949:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1120,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12949:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12949:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1119,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "12928:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12928:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "RevertStatement",
															"src": "12921:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1129,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "13007:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13021:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13013:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1130,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13013:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13013:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1134,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "13025:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1135,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "13030:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13038:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1128,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "12980:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12980:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "12980:61:2"
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "12433:345:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."
									},
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12792:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12811:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12803:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12834:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12817:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1105,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12817:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1106,
													"nodeType": "ArrayTypeName",
													"src": "12817:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "12856:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12839:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1108,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12839:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1109,
													"nodeType": "ArrayTypeName",
													"src": "12839:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12802:61:2"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12873:0:2"
									},
									"scope": 1335,
									"src": "12783:265:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "13360:222:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1150,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "13374:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13394:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13386:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1151,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13386:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13386:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13374:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1164,
												"nodeType": "IfStatement",
												"src": "13370:94:2",
												"trueBody": {
													"id": 1163,
													"nodeType": "Block",
													"src": "13398:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13450:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13442:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1157,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13442:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13442:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1156,
																	"name": "ERC1155InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "13419:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13419:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1162,
															"nodeType": "RevertStatement",
															"src": "13412:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1165,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "13473:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1168,
															"indexExpression": {
																"id": 1166,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1143,
																"src": "13492:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13473:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1169,
														"indexExpression": {
															"id": 1167,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "13499:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13473:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1170,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "13511:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13473:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "13473:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1174,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "13549:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1175,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "13556:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1176,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "13566:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1173,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "13534:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13534:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1178,
												"nodeType": "EmitStatement",
												"src": "13529:46:2"
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "13054:208:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13276:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13303:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13295:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13295:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13318:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13310:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13328:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13328:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13294:48:2"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13360:0:2"
									},
									"scope": 1335,
									"src": "13267:315:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "13952:782:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1196,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "13966:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13969:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "13966:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13974:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13966:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13983:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13966:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1246,
												"nodeType": "IfStatement",
												"src": "13962:766:2",
												"trueBody": {
													"id": 1245,
													"nodeType": "Block",
													"src": "13986:742:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1225,
																		"nodeType": "Block",
																		"src": "14102:206:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1218,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1214,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1212,
																						"src": "14124:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1215,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1500,
																								"src": "14136:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1216,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14153:17:2",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1481,
																							"src": "14136:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1217,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14171:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14136:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14124:55:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1224,
																				"nodeType": "IfStatement",
																				"src": "14120:174:2",
																				"trueBody": {
																					"id": 1223,
																					"nodeType": "Block",
																					"src": "14181:113:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1220,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1187,
																										"src": "14272:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1219,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "14249:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1221,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14249:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1222,
																							"nodeType": "RevertStatement",
																							"src": "14242:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1226,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1213,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1212,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14092:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1226,
																				"src": "14085:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1211,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14085:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14084:17:2"
																	},
																	"src": "14076:232:2"
																},
																{
																	"block": {
																		"id": 1242,
																		"nodeType": "Block",
																		"src": "14337:381:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1233,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1230,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1228,
																							"src": "14359:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1231,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14366:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14359:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1232,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14376:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14359:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1240,
																					"nodeType": "Block",
																					"src": "14514:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "14600:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "14637:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "14641:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "14633:3:2"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14633:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "14656:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "14650:5:2"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14650:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "14626:6:2"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "14626:38:2"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "14626:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "paris",
																							"externalReferences": [
																								{
																									"declaration": 1228,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14641:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1228,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14656:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1239,
																							"nodeType": "InlineAssembly",
																							"src": "14591:95:2"
																						}
																					]
																				},
																				"id": 1241,
																				"nodeType": "IfStatement",
																				"src": "14355:349:2",
																				"trueBody": {
																					"id": 1238,
																					"nodeType": "Block",
																					"src": "14379:129:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1235,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1187,
																										"src": "14486:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1234,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "14463:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1236,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14463:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1237,
																							"nodeType": "RevertStatement",
																							"src": "14456:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1243,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1229,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1228,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14329:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1243,
																				"src": "14316:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1227,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14316:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14315:21:2"
																	},
																	"src": "14309:409:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1205,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1183,
																		"src": "14043:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1206,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1185,
																		"src": "14053:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1207,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "14059:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1208,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1191,
																		"src": "14063:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1209,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1193,
																		"src": "14070:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1202,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "14021:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1201,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1500,
																			"src": "14004:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14004:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1500",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14025:17:2",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1481,
																	"src": "14004:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14004:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1244,
															"nodeType": "TryStatement",
															"src": "14000:718:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "13588:167:2",
										"text": " @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13769:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13817:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13809:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13809:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13843:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13835:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13835:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13865:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13857:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13857:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13885:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13877:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13877:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13905:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13897:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13897:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13933:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13920:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1192,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13920:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13799:144:2"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13952:0:2"
									},
									"scope": 1335,
									"src": "13760:974:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "15139:824:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1266,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "15153:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15156:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "15153:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15161:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15153:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15170:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15153:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1316,
												"nodeType": "IfStatement",
												"src": "15149:808:2",
												"trueBody": {
													"id": 1315,
													"nodeType": "Block",
													"src": "15173:784:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1295,
																		"nodeType": "Block",
																		"src": "15326:211:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1288,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1284,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1282,
																						"src": "15348:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1285,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1500,
																								"src": "15360:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1286,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "15377:22:2",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1499,
																							"src": "15360:39:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1287,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15400:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15360:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15348:60:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1294,
																				"nodeType": "IfStatement",
																				"src": "15344:179:2",
																				"trueBody": {
																					"id": 1293,
																					"nodeType": "Block",
																					"src": "15410:113:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1290,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1255,
																										"src": "15501:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1289,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "15478:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1291,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15478:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1292,
																							"nodeType": "RevertStatement",
																							"src": "15471:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1296,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1283,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1282,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15303:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1296,
																				"src": "15296:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1281,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15296:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15278:47:2"
																	},
																	"src": "15270:267:2"
																},
																{
																	"block": {
																		"id": 1312,
																		"nodeType": "Block",
																		"src": "15566:381:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1303,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1300,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1298,
																							"src": "15588:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1301,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15595:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15588:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1302,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15605:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15588:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1310,
																					"nodeType": "Block",
																					"src": "15743:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "15829:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "15866:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "15870:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "15862:3:2"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "15862:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "15885:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "15879:5:2"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "15879:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "15855:6:2"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "15855:38:2"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "15855:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "paris",
																							"externalReferences": [
																								{
																									"declaration": 1298,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15870:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1298,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15885:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1309,
																							"nodeType": "InlineAssembly",
																							"src": "15820:95:2"
																						}
																					]
																				},
																				"id": 1311,
																				"nodeType": "IfStatement",
																				"src": "15584:349:2",
																				"trueBody": {
																					"id": 1308,
																					"nodeType": "Block",
																					"src": "15608:129:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1305,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1255,
																										"src": "15715:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1304,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "15692:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1306,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15692:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1307,
																							"nodeType": "RevertStatement",
																							"src": "15685:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1313,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1299,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1298,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15558:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1313,
																				"src": "15545:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1297,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "15545:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15544:21:2"
																	},
																	"src": "15538:409:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1275,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "15235:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1276,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1253,
																		"src": "15245:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1277,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1258,
																		"src": "15251:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1278,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1261,
																		"src": "15256:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1279,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "15264:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1272,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1255,
																				"src": "15208:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1271,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1500,
																			"src": "15191:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15191:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1500",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15212:22:2",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1499,
																	"src": "15191:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15191:78:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1314,
															"nodeType": "TryStatement",
															"src": "15187:760:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "14740:177:2",
										"text": " @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14931:35:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14984:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "14976:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14976:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15010:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15002:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15002:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15032:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15024:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15024:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15061:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15044:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1256,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15044:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1257,
													"nodeType": "ArrayTypeName",
													"src": "15044:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "15091:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15074:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1259,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15074:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1260,
													"nodeType": "ArrayTypeName",
													"src": "15074:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15120:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15107:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15107:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14966:164:2"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15139:0:2"
									},
									"scope": 1335,
									"src": "14922:1041:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "16237:691:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "16299:623:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16357:21:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16373:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16367:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16367:11:2"
															},
															"variableNames": [
																{
																	"name": "array1",
																	"nodeType": "YulIdentifier",
																	"src": "16357:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array1",
																		"nodeType": "YulIdentifier",
																		"src": "16435:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16443:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16428:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16428:17:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16428:17:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array1",
																				"nodeType": "YulIdentifier",
																				"src": "16566:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16574:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16562:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16562:17:2"
																	},
																	{
																		"name": "element1",
																		"nodeType": "YulIdentifier",
																		"src": "16581:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16555:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16555:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16555:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16681:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "array1",
																		"nodeType": "YulIdentifier",
																		"src": "16695:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16703:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16691:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16691:17:2"
															},
															"variableNames": [
																{
																	"name": "array2",
																	"nodeType": "YulIdentifier",
																	"src": "16681:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array2",
																		"nodeType": "YulIdentifier",
																		"src": "16728:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16736:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16721:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16721:17:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16721:17:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nodeType": "YulIdentifier",
																				"src": "16762:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16770:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16758:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16758:17:2"
																	},
																	{
																		"name": "element2",
																		"nodeType": "YulIdentifier",
																		"src": "16777:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16751:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16751:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16751:35:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16888:4:2",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nodeType": "YulIdentifier",
																				"src": "16898:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16906:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16894:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16894:17:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16881:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16881:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16881:31:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16357:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16435:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16566:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16695:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16681:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16728:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16762:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16898:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1321,
														"isOffset": false,
														"isSlot": false,
														"src": "16581:8:2",
														"valueSize": 1
													},
													{
														"declaration": 1323,
														"isOffset": false,
														"isSlot": false,
														"src": "16777:8:2",
														"valueSize": 1
													}
												],
												"id": 1332,
												"nodeType": "InlineAssembly",
												"src": "16290:632:2"
											}
										]
									},
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "15969:105:2",
										"text": " @dev Creates an array in memory with only one value for each of the elements provided."
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArrays",
									"nameLocation": "16088:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "element1",
												"nameLocation": "16124:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16116:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16116:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "element2",
												"nameLocation": "16150:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16142:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16142:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16106:58:2"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "array1",
												"nameLocation": "16204:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16187:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1325,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16187:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1326,
													"nodeType": "ArrayTypeName",
													"src": "16187:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "array2",
												"nameLocation": "16229:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16212:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1328,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16212:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1329,
													"nodeType": "ArrayTypeName",
													"src": "16212:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16186:50:2"
									},
									"scope": 1335,
									"src": "16079:849:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1336,
							"src": "726:16204:2",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							]
						}
					],
					"src": "109:16822:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1458
						],
						"IERC165": [
							1875
						]
					},
					"id": 1459,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1339,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1459,
							"sourceUnit": 1876,
							"src": "135:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1338,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1875,
										"src": "143:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1341,
										"name": "IERC165",
										"nameLocations": [
											"357:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1875,
										"src": "357:7:3"
									},
									"id": 1342,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:3"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1340,
								"nodeType": "StructuredDocumentation",
								"src": "199:135:3",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."
							},
							"fullyImplemented": false,
							"id": 1458,
							"linearizedBaseContracts": [
								1458,
								1875
							],
							"name": "IERC1155",
							"nameLocation": "345:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "371:125:3",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1355,
									"name": "TransferSingle",
									"nameLocation": "507:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "538:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "522:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "564:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "548:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "548:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "586:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "570:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "598:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "590:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "590:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "610:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "602:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:95:3"
									},
									"src": "501:116:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "623:144:3",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1370,
									"name": "TransferBatch",
									"nameLocation": "778:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "817:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "801:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "801:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "851:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "835:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "881:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "865:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "903:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "893:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1363,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "893:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1364,
													"nodeType": "ArrayTypeName",
													"src": "893:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "926:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "916:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1366,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "916:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1367,
													"nodeType": "ArrayTypeName",
													"src": "916:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "791:147:3"
									},
									"src": "772:167:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "945:147:3",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1379,
									"name": "ApprovalForAll",
									"nameLocation": "1103:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1134:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1118:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1159:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1143:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1174:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1169:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1169:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1117:66:3"
									},
									"src": "1097:87:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "1190:343:3",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1386,
									"name": "URI",
									"nameLocation": "1544:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1555:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1548:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1548:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1578:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1562:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1562:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:34:3"
									},
									"src": "1538:44:3"
								},
								{
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "1588:172:3",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1774:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1792:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1784:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1784:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1809:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1801:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1801:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1783:29:3"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1836:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1836:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1835:9:3"
									},
									"scope": 1458,
									"src": "1765:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "1851:188:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2053:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2096:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2077:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1398,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2077:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1399,
													"nodeType": "ArrayTypeName",
													"src": "2077:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2133:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2114:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1401,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2114:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1402,
													"nodeType": "ArrayTypeName",
													"src": "2114:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2067:75:3"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2166:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1405,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2166:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1406,
													"nodeType": "ArrayTypeName",
													"src": "2166:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2165:18:3"
									},
									"scope": 1458,
									"src": "2044:140:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "2190:248:3",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2452:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2478:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2470:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2493:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2488:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2488:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:33:3"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2511:0:3"
									},
									"scope": 1458,
									"src": "2443:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "2518:135:3",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2667:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2692:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2684:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2684:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2709:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2701:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2683:35:3"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2742:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1424,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2742:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2741:6:3"
									},
									"scope": 1458,
									"src": "2658:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "2754:910:3",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3678:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3703:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3695:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3695:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3717:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3709:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3729:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3721:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3721:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3741:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3733:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3733:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3748:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1437,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3748:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3694:74:3"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3777:0:3"
									},
									"scope": 1458,
									"src": "3669:109:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "3784:814:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4612:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4651:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4643:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4643:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4673:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4665:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4665:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4704:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4685:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1447,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4685:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1448,
													"nodeType": "ArrayTypeName",
													"src": "4685:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4736:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4717:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1450,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4717:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1451,
													"nodeType": "ArrayTypeName",
													"src": "4717:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4767:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4752:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4752:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4633:144:3"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4786:0:3"
									},
									"scope": 1458,
									"src": "4603:184:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1459,
							"src": "335:4454:3",
							"usedErrors": []
						}
					],
					"src": "110:4680:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							1875
						]
					},
					"id": 1501,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1460,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1462,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1501,
							"sourceUnit": 1876,
							"src": "143:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1461,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1875,
										"src": "151:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1464,
										"name": "IERC165",
										"nameLocations": [
											"356:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1875,
										"src": "356:7:4"
									},
									"id": 1465,
									"nodeType": "InheritanceSpecifier",
									"src": "356:7:4"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1463,
								"nodeType": "StructuredDocumentation",
								"src": "207:118:4",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 1500,
							"linearizedBaseContracts": [
								1500,
								1875
							],
							"name": "IERC1155Receiver",
							"nameLocation": "336:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "370:826:4",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1210:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1245:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1237:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1271:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1263:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1293:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1285:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1313:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1305:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1305:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1343:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1328:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1328:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:126:4"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1372:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1478,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1372:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1371:8:4"
									},
									"scope": 1500,
									"src": "1201:179:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "1386:994:4",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2394:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2434:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2426:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2460:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2452:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2452:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2493:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2474:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1487,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2474:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1488,
													"nodeType": "ArrayTypeName",
													"src": "2474:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2525:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2506:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1490,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2506:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1491,
													"nodeType": "ArrayTypeName",
													"src": "2506:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2556:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2541:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2541:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2416:150:4"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2585:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1496,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2585:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2584:8:4"
									},
									"scope": 1500,
									"src": "2385:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1501,
							"src": "326:2269:4",
							"usedErrors": []
						}
					],
					"src": "118:2478:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1458
						],
						"IERC1155MetadataURI": [
							1516
						]
					},
					"id": 1517,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1502,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "132:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1504,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1517,
							"sourceUnit": 1459,
							"src": "157:41:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1503,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1458,
										"src": "165:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1506,
										"name": "IERC1155",
										"nameLocations": [
											"398:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1458,
										"src": "398:8:5"
									},
									"id": 1507,
									"nodeType": "InheritanceSpecifier",
									"src": "398:8:5"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1505,
								"nodeType": "StructuredDocumentation",
								"src": "200:164:5",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."
							},
							"fullyImplemented": false,
							"id": 1516,
							"linearizedBaseContracts": [
								1516,
								1458,
								1875
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "375:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1508,
										"nodeType": "StructuredDocumentation",
										"src": "413:192:5",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "619:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "631:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "623:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "622:12:5"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "658:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "658:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "657:15:5"
									},
									"scope": 1516,
									"src": "610:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1517,
							"src": "365:310:5",
							"usedErrors": []
						}
					],
					"src": "132:544:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
					"exportedSymbols": {
						"Arrays": [
							1699
						],
						"Math": [
							2929
						],
						"StorageSlot": [
							1839
						]
					},
					"id": 1700,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1518,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1520,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1700,
							"sourceUnit": 1840,
							"src": "125:46:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1519,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1839,
										"src": "133:11:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1522,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1700,
							"sourceUnit": 2930,
							"src": "172:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1521,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2929,
										"src": "180:4:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1523,
								"nodeType": "StructuredDocumentation",
								"src": "211:63:6",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 1699,
							"linearizedBaseContracts": [
								1699
							],
							"name": "Arrays",
							"nameLocation": "283:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1526,
									"libraryName": {
										"id": 1524,
										"name": "StorageSlot",
										"nameLocations": [
											"302:11:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1839,
										"src": "302:11:6"
									},
									"nodeType": "UsingForDirective",
									"src": "296:30:6",
									"typeName": {
										"id": 1525,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "318:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "842:834:6",
										"statements": [
											{
												"assignments": [
													1538
												],
												"declarations": [
													{
														"constant": false,
														"id": 1538,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "860:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "852:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "852:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1540,
												"initialValue": {
													"hexValue": "30",
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "866:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "852:15:6"
											},
											{
												"assignments": [
													1542
												],
												"declarations": [
													{
														"constant": false,
														"id": 1542,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "885:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "877:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1541,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "877:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1545,
												"initialValue": {
													"expression": {
														"id": 1543,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "892:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "898:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "892:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "877:27:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1546,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "919:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "927:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "919:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1552,
												"nodeType": "IfStatement",
												"src": "915:48:6",
												"trueBody": {
													"id": 1551,
													"nodeType": "Block",
													"src": "930:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "951:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1536,
															"id": 1550,
															"nodeType": "Return",
															"src": "944:8:6"
														}
													]
												}
											},
											{
												"body": {
													"id": 1584,
													"nodeType": "Block",
													"src": "992:423:6",
													"statements": [
														{
															"assignments": [
																1557
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1557,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "1014:3:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1584,
																	"src": "1006:11:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1556,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1006:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1563,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1560,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1538,
																		"src": "1033:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1561,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1542,
																		"src": "1038:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1558,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2929,
																		"src": "1020:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2929_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1025:7:6",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2103,
																	"src": "1020:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1020:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1006:37:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1565,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1530,
																				"src": "1281:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1566,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1557,
																				"src": "1288:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1564,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1630,
																				1651,
																				1672
																			],
																			"referencedDeclaration": 1672,
																			"src": "1268:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1744_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1268:24:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$1744_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1568,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1293:5:6",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1743,
																	"src": "1268:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1569,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "1301:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1268:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1582,
																"nodeType": "Block",
																"src": "1359:46:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1576,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1538,
																				"src": "1377:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1579,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1577,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1557,
																					"src": "1383:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1578,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1389:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1383:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1377:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1581,
																		"nodeType": "ExpressionStatement",
																		"src": "1377:13:6"
																	}
																]
															},
															"id": 1583,
															"nodeType": "IfStatement",
															"src": "1264:141:6",
															"trueBody": {
																"id": 1575,
																"nodeType": "Block",
																"src": "1310:43:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1571,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1542,
																				"src": "1328:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1572,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1557,
																				"src": "1335:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1328:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1574,
																		"nodeType": "ExpressionStatement",
																		"src": "1328:10:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1553,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "980:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1554,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "986:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "980:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1585,
												"nodeType": "WhileStatement",
												"src": "973:442:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1586,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "1532:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1538:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1532:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1590,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1530,
																		"src": "1556:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1591,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "1563:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1569:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1563:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1589,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1630,
																		1651,
																		1672
																	],
																	"referencedDeclaration": 1672,
																	"src": "1543:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1744_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1543:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$1744_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1595,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1572:5:6",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1743,
															"src": "1543:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1596,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "1581:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1543:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1532:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1606,
													"nodeType": "Block",
													"src": "1635:35:6",
													"statements": [
														{
															"expression": {
																"id": 1604,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "1656:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1536,
															"id": 1605,
															"nodeType": "Return",
															"src": "1649:10:6"
														}
													]
												},
												"id": 1607,
												"nodeType": "IfStatement",
												"src": "1528:142:6",
												"trueBody": {
													"id": 1603,
													"nodeType": "Block",
													"src": "1590:39:6",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1599,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1538,
																	"src": "1611:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1617:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1611:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1536,
															"id": 1602,
															"nodeType": "Return",
															"src": "1604:14:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "332:407:6",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."
									},
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "753:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "786:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "768:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1528,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "768:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1529,
													"nodeType": "ArrayTypeName",
													"src": "768:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "801:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "793:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:42:6"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "833:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "832:9:6"
									},
									"scope": 1699,
									"src": "744:932:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1629,
										"nodeType": "Block",
										"src": "1992:459:6",
										"statements": [
											{
												"assignments": [
													1622
												],
												"declarations": [
													{
														"constant": false,
														"id": 1622,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2010:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1629,
														"src": "2002:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1621,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2002:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1623,
												"nodeType": "VariableDeclarationStatement",
												"src": "2002:12:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2315:92:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2336:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "2339:8:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2329:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2329:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2361:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2383:1:6",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2386:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "2373:9:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2373:18:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2393:3:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2369:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2369:28:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "2361:4:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1613,
														"isOffset": false,
														"isSlot": true,
														"src": "2339:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1615,
														"isOffset": false,
														"isSlot": false,
														"src": "2393:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1622,
														"isOffset": false,
														"isSlot": false,
														"src": "2361:4:6",
														"valueSize": 1
													}
												],
												"id": 1624,
												"nodeType": "InlineAssembly",
												"src": "2306:101:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1625,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "2423:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2428:14:6",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1761,
														"src": "2423:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1735_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2423:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1735_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 1620,
												"id": 1628,
												"nodeType": "Return",
												"src": "2416:28:6"
											}
										]
									},
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "1682:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "1887:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "1918:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "1900:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1611,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1900:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1612,
													"nodeType": "ArrayTypeName",
													"src": "1900:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "1931:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "1923:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1899:36:6"
									},
									"returnParameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "1959:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1735_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1618,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1617,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"1959:11:6",
															"1971:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1735,
														"src": "1959:23:6"
													},
													"referencedDeclaration": 1735,
													"src": "1959:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1735_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:33:6"
									},
									"scope": 1699,
									"src": "1878:573:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1650,
										"nodeType": "Block",
										"src": "2767:459:6",
										"statements": [
											{
												"assignments": [
													1643
												],
												"declarations": [
													{
														"constant": false,
														"id": 1643,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2785:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1650,
														"src": "2777:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1642,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2777:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1644,
												"nodeType": "VariableDeclarationStatement",
												"src": "2777:12:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3090:92:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3111:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "3114:8:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3104:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3104:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3104:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3136:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3158:1:6",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3161:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "3148:9:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3148:18:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3168:3:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3144:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3144:28:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "3136:4:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1634,
														"isOffset": false,
														"isSlot": true,
														"src": "3114:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1636,
														"isOffset": false,
														"isSlot": false,
														"src": "3168:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1643,
														"isOffset": false,
														"isSlot": false,
														"src": "3136:4:6",
														"valueSize": 1
													}
												],
												"id": 1645,
												"nodeType": "InlineAssembly",
												"src": "3081:101:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1646,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "3198:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3203:14:6",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1783,
														"src": "3198:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1741_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3198:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1741_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 1641,
												"id": 1649,
												"nodeType": "Return",
												"src": "3191:28:6"
											}
										]
									},
									"documentation": {
										"id": 1631,
										"nodeType": "StructuredDocumentation",
										"src": "2457:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "2662:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "2693:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "2675:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1632,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2675:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1633,
													"nodeType": "ArrayTypeName",
													"src": "2675:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "2706:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "2698:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2698:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:36:6"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "2734:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1741_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1639,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1638,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"2734:11:6",
															"2746:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1741,
														"src": "2734:23:6"
													},
													"referencedDeclaration": 1741,
													"src": "2734:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1741_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2733:33:6"
									},
									"scope": 1699,
									"src": "2653:573:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "3542:459:6",
										"statements": [
											{
												"assignments": [
													1664
												],
												"declarations": [
													{
														"constant": false,
														"id": 1664,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "3560:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1671,
														"src": "3552:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1663,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3552:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1665,
												"nodeType": "VariableDeclarationStatement",
												"src": "3552:12:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3865:92:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3886:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "3889:8:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3879:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3879:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3879:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3911:36:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3933:1:6",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3936:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "3923:9:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3923:18:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3943:3:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3919:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3919:28:6"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "3911:4:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1655,
														"isOffset": false,
														"isSlot": true,
														"src": "3889:8:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1657,
														"isOffset": false,
														"isSlot": false,
														"src": "3943:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1664,
														"isOffset": false,
														"isSlot": false,
														"src": "3911:4:6",
														"valueSize": 1
													}
												],
												"id": 1666,
												"nodeType": "InlineAssembly",
												"src": "3856:101:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1667,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "3973:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3978:14:6",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1794,
														"src": "3973:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1744_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3973:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1744_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 1662,
												"id": 1670,
												"nodeType": "Return",
												"src": "3966:28:6"
											}
										]
									},
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "3232:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "3437:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "3468:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "3450:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1653,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3450:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1654,
													"nodeType": "ArrayTypeName",
													"src": "3450:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "3481:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "3473:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3449:36:6"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "3509:31:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1744_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1660,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1659,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"3509:11:6",
															"3521:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1744,
														"src": "3509:23:6"
													},
													"referencedDeclaration": 1744,
													"src": "3509:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1744_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:33:6"
									},
									"scope": 1699,
									"src": "3428:573:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "4302:98:6",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4321:73:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4335:49:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nodeType": "YulIdentifier",
																						"src": "4356:3:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4361:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4352:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4352:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4372:3:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4377:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:14:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4348:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4348:35:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4342:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:42:6"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nodeType": "YulIdentifier",
																	"src": "4335:3:6"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1676,
														"isOffset": false,
														"isSlot": false,
														"src": "4356:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1678,
														"isOffset": false,
														"isSlot": false,
														"src": "4372:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1681,
														"isOffset": false,
														"isSlot": false,
														"src": "4335:3:6",
														"valueSize": 1
													}
												],
												"id": 1683,
												"nodeType": "InlineAssembly",
												"src": "4312:82:6"
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "4007:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4212:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4248:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "4231:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1674,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4231:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1675,
													"nodeType": "ArrayTypeName",
													"src": "4231:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4261:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "4253:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4253:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4230:35:6"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4297:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "4289:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4289:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4288:13:6"
									},
									"scope": 1699,
									"src": "4203:197:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "4701:98:6",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4720:73:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4734:49:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nodeType": "YulIdentifier",
																						"src": "4755:3:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4760:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4751:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4751:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4771:3:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4776:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4767:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4767:14:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4747:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4747:35:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4741:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4741:42:6"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nodeType": "YulIdentifier",
																	"src": "4734:3:6"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1689,
														"isOffset": false,
														"isSlot": false,
														"src": "4755:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1691,
														"isOffset": false,
														"isSlot": false,
														"src": "4771:3:6",
														"valueSize": 1
													},
													{
														"declaration": 1694,
														"isOffset": false,
														"isSlot": false,
														"src": "4734:3:6",
														"valueSize": 1
													}
												],
												"id": 1696,
												"nodeType": "InlineAssembly",
												"src": "4711:82:6"
											}
										]
									},
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "4406:191:6",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4611:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4647:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "4630:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1687,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4630:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1688,
													"nodeType": "ArrayTypeName",
													"src": "4630:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4660:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "4652:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4629:35:6"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4696:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "4688:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4688:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4687:13:6"
									},
									"scope": 1699,
									"src": "4602:197:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1700,
							"src": "275:4526:6",
							"usedErrors": []
						}
					],
					"src": "100:4702:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1729
						]
					},
					"id": 1730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1701,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1702,
								"nodeType": "StructuredDocumentation",
								"src": "126:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1729,
							"linearizedBaseContracts": [
								1729
							],
							"name": "Context",
							"nameLocation": "641:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1710,
										"nodeType": "Block",
										"src": "717:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1707,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "734:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "738:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "734:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1706,
												"id": 1709,
												"nodeType": "Return",
												"src": "727:17:7"
											}
										]
									},
									"id": 1711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "664:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "674:2:7"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "708:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "707:9:7"
									},
									"scope": 1729,
									"src": "655:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1719,
										"nodeType": "Block",
										"src": "824:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1716,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "841:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "845:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "841:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1715,
												"id": 1718,
												"nodeType": "Return",
												"src": "834:15:7"
											}
										]
									},
									"id": 1720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "766:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "774:2:7"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "808:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "808:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "807:16:7"
									},
									"scope": 1729,
									"src": "757:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1727,
										"nodeType": "Block",
										"src": "934:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "951:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1724,
												"id": 1726,
												"nodeType": "Return",
												"src": "944:8:7"
											}
										]
									},
									"id": 1728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "871:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "891:2:7"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "925:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "924:9:7"
									},
									"scope": 1729,
									"src": "862:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1730,
							"src": "623:338:7",
							"usedErrors": []
						}
					],
					"src": "101:861:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1839
						]
					},
					"id": 1840,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "193:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1732,
								"nodeType": "StructuredDocumentation",
								"src": "218:1025:8",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1839,
							"linearizedBaseContracts": [
								1839
							],
							"name": "StorageSlot",
							"nameLocation": "1252:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1735,
									"members": [
										{
											"constant": false,
											"id": 1734,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1307:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1735,
											"src": "1299:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1733,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1277:11:8",
									"nodeType": "StructDefinition",
									"scope": 1839,
									"src": "1270:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1738,
									"members": [
										{
											"constant": false,
											"id": 1737,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1359:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1738,
											"src": "1354:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1736,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1354:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1332:11:8",
									"nodeType": "StructDefinition",
									"scope": 1839,
									"src": "1325:46:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1741,
									"members": [
										{
											"constant": false,
											"id": 1740,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1414:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1741,
											"src": "1406:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1739,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1406:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1384:11:8",
									"nodeType": "StructDefinition",
									"scope": 1839,
									"src": "1377:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1744,
									"members": [
										{
											"constant": false,
											"id": 1743,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1469:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1744,
											"src": "1461:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1742,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1461:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1439:11:8",
									"nodeType": "StructDefinition",
									"scope": 1839,
									"src": "1432:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1747,
									"members": [
										{
											"constant": false,
											"id": 1746,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1747,
											"src": "1515:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1745,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1515:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1494:10:8",
									"nodeType": "StructDefinition",
									"scope": 1839,
									"src": "1487:47:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1750,
									"members": [
										{
											"constant": false,
											"id": 1749,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1573:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1750,
											"src": "1567:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1748,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1567:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1547:9:8",
									"nodeType": "StructDefinition",
									"scope": 1839,
									"src": "1540:45:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "1767:106:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1829:38:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1843:14:8",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "1853:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1843:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1757,
														"isOffset": false,
														"isSlot": true,
														"src": "1843:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1753,
														"isOffset": false,
														"isSlot": false,
														"src": "1853:4:8",
														"valueSize": 1
													}
												],
												"id": 1759,
												"nodeType": "InlineAssembly",
												"src": "1820:47:8"
											}
										]
									},
									"documentation": {
										"id": 1751,
										"nodeType": "StructuredDocumentation",
										"src": "1591:87:8",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1692:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1715:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "1707:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1752,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1707:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1706:14:8"
									},
									"returnParameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1764:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "1744:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1735_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1756,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1755,
														"name": "AddressSlot",
														"nameLocations": [
															"1744:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1735,
														"src": "1744:11:8"
													},
													"referencedDeclaration": 1735,
													"src": "1744:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1735_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:23:8"
									},
									"scope": 1839,
									"src": "1683:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1771,
										"nodeType": "Block",
										"src": "2055:106:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2117:38:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2131:14:8",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2141:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2131:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1768,
														"isOffset": false,
														"isSlot": true,
														"src": "2131:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1764,
														"isOffset": false,
														"isSlot": false,
														"src": "2141:4:8",
														"valueSize": 1
													}
												],
												"id": 1770,
												"nodeType": "InlineAssembly",
												"src": "2108:47:8"
											}
										]
									},
									"documentation": {
										"id": 1762,
										"nodeType": "StructuredDocumentation",
										"src": "1879:87:8",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1980:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2003:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "1995:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1763,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1994:14:8"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2052:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "2032:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1738_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1767,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1766,
														"name": "BooleanSlot",
														"nameLocations": [
															"2032:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1738,
														"src": "2032:11:8"
													},
													"referencedDeclaration": 1738,
													"src": "2032:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1738_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:23:8"
									},
									"scope": 1839,
									"src": "1971:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "2343:106:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2405:38:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2419:14:8",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2429:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1779,
														"isOffset": false,
														"isSlot": true,
														"src": "2419:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1775,
														"isOffset": false,
														"isSlot": false,
														"src": "2429:4:8",
														"valueSize": 1
													}
												],
												"id": 1781,
												"nodeType": "InlineAssembly",
												"src": "2396:47:8"
											}
										]
									},
									"documentation": {
										"id": 1773,
										"nodeType": "StructuredDocumentation",
										"src": "2167:87:8",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2268:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2291:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "2283:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1774,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2282:14:8"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2340:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "2320:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1741_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1778,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1777,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2320:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1741,
														"src": "2320:11:8"
													},
													"referencedDeclaration": 1741,
													"src": "2320:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1741_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2319:23:8"
									},
									"scope": 1839,
									"src": "2259:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1793,
										"nodeType": "Block",
										"src": "2631:106:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2693:38:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2707:14:8",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2717:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2707:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1790,
														"isOffset": false,
														"isSlot": true,
														"src": "2707:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1786,
														"isOffset": false,
														"isSlot": false,
														"src": "2717:4:8",
														"valueSize": 1
													}
												],
												"id": 1792,
												"nodeType": "InlineAssembly",
												"src": "2684:47:8"
											}
										]
									},
									"documentation": {
										"id": 1784,
										"nodeType": "StructuredDocumentation",
										"src": "2455:87:8",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2556:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2579:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "2571:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1785,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2570:14:8"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2628:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "2608:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1744_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1789,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1788,
														"name": "Uint256Slot",
														"nameLocations": [
															"2608:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1744,
														"src": "2608:11:8"
													},
													"referencedDeclaration": 1744,
													"src": "2608:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1744_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2607:23:8"
									},
									"scope": 1839,
									"src": "2547:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1804,
										"nodeType": "Block",
										"src": "2916:106:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2978:38:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2992:14:8",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3002:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2992:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1801,
														"isOffset": false,
														"isSlot": true,
														"src": "2992:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1797,
														"isOffset": false,
														"isSlot": false,
														"src": "3002:4:8",
														"valueSize": 1
													}
												],
												"id": 1803,
												"nodeType": "InlineAssembly",
												"src": "2969:47:8"
											}
										]
									},
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "2743:86:8",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2843:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2865:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "2857:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1796,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2857:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2856:14:8"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2913:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "2894:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1747_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1800,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1799,
														"name": "StringSlot",
														"nameLocations": [
															"2894:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1747,
														"src": "2894:10:8"
													},
													"referencedDeclaration": 1747,
													"src": "2894:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1747_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2893:22:8"
									},
									"scope": 1839,
									"src": "2834:188:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1815,
										"nodeType": "Block",
										"src": "3224:112:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3286:44:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3300:20:8",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "3310:10:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3300:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1812,
														"isOffset": false,
														"isSlot": true,
														"src": "3300:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1808,
														"isOffset": false,
														"isSlot": true,
														"src": "3310:10:8",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1814,
												"nodeType": "InlineAssembly",
												"src": "3277:53:8"
											}
										]
									},
									"documentation": {
										"id": 1806,
										"nodeType": "StructuredDocumentation",
										"src": "3028:101:8",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3143:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3172:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "3157:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1807,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3157:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3156:22:8"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3221:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "3202:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1747_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1811,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1810,
														"name": "StringSlot",
														"nameLocations": [
															"3202:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1747,
														"src": "3202:10:8"
													},
													"referencedDeclaration": 1747,
													"src": "3202:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1747_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:22:8"
									},
									"scope": 1839,
									"src": "3134:202:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1826,
										"nodeType": "Block",
										"src": "3512:106:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3574:38:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3588:14:8",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3598:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1823,
														"isOffset": false,
														"isSlot": true,
														"src": "3588:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "3598:4:8",
														"valueSize": 1
													}
												],
												"id": 1825,
												"nodeType": "InlineAssembly",
												"src": "3565:47:8"
											}
										]
									},
									"documentation": {
										"id": 1817,
										"nodeType": "StructuredDocumentation",
										"src": "3342:85:8",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3441:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3462:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "3454:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1818,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3454:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3453:14:8"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3509:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "3491:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1750_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1822,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1821,
														"name": "BytesSlot",
														"nameLocations": [
															"3491:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1750,
														"src": "3491:9:8"
													},
													"referencedDeclaration": 1750,
													"src": "3491:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1750_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:21:8"
									},
									"scope": 1839,
									"src": "3432:186:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1837,
										"nodeType": "Block",
										"src": "3815:112:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3877:44:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3891:20:8",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "3901:10:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3891:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1834,
														"isOffset": false,
														"isSlot": true,
														"src": "3891:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1830,
														"isOffset": false,
														"isSlot": true,
														"src": "3901:10:8",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1836,
												"nodeType": "InlineAssembly",
												"src": "3868:53:8"
											}
										]
									},
									"documentation": {
										"id": 1828,
										"nodeType": "StructuredDocumentation",
										"src": "3624:99:8",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3737:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3764:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "3750:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1829,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3749:21:8"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3812:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "3794:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1750_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1833,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1832,
														"name": "BytesSlot",
														"nameLocations": [
															"3794:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1750,
														"src": "3794:9:8"
													},
													"referencedDeclaration": 1750,
													"src": "3794:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1750_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3793:21:8"
									},
									"scope": 1839,
									"src": "3728:199:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1840,
							"src": "1244:2685:8",
							"usedErrors": []
						}
					],
					"src": "193:3737:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1863
						],
						"IERC165": [
							1875
						]
					},
					"id": 1864,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1841,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1843,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1864,
							"sourceUnit": 1876,
							"src": "139:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1842,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1875,
										"src": "147:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1845,
										"name": "IERC165",
										"nameLocations": [
											"686:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1875,
										"src": "686:7:9"
									},
									"id": 1846,
									"nodeType": "InheritanceSpecifier",
									"src": "686:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1844,
								"nodeType": "StructuredDocumentation",
								"src": "179:478:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1863,
							"linearizedBaseContracts": [
								1863,
								1875
							],
							"name": "ERC165",
							"nameLocation": "676:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1874
									],
									"body": {
										"id": 1861,
										"nodeType": "Block",
										"src": "843:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1854,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1849,
														"src": "860:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1856,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1875,
																	"src": "880:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1875_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1875_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1855,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "875:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "875:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1875",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1858,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "889:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "875:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "860:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1853,
												"id": 1860,
												"nodeType": "Return",
												"src": "853:47:9"
											}
										]
									},
									"documentation": {
										"id": 1847,
										"nodeType": "StructuredDocumentation",
										"src": "700:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "770:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "795:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "788:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1848,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:20:9"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "837:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1851,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "837:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:6:9"
									},
									"scope": 1863,
									"src": "761:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1864,
							"src": "658:251:9",
							"usedErrors": []
						}
					],
					"src": "114:796:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1875
						]
					},
					"id": 1876,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1865,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1866,
								"nodeType": "StructuredDocumentation",
								"src": "140:279:10",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1875,
							"linearizedBaseContracts": [
								1875
							],
							"name": "IERC165",
							"nameLocation": "430:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1867,
										"nodeType": "StructuredDocumentation",
										"src": "444:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1874,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "798:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "823:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "816:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1868,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "816:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "815:20:10"
									},
									"returnParameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "859:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1871,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "859:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "858:6:10"
									},
									"scope": 1875,
									"src": "789:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1876,
							"src": "420:447:10",
							"usedErrors": []
						}
					],
					"src": "115:753:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2929
						]
					},
					"id": 2930,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1877,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1878,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:11",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2929,
							"linearizedBaseContracts": [
								2929
							],
							"name": "Math",
							"nameLocation": "210:4:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1879,
										"nodeType": "StructuredDocumentation",
										"src": "221:50:11",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1881,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "282:20:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "302:2:11"
									},
									"src": "276:29:11"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1886,
									"members": [
										{
											"id": 1882,
											"name": "Floor",
											"nameLocation": "335:5:11",
											"nodeType": "EnumValue",
											"src": "335:5:11"
										},
										{
											"id": 1883,
											"name": "Ceil",
											"nameLocation": "378:4:11",
											"nodeType": "EnumValue",
											"src": "378:4:11"
										},
										{
											"id": 1884,
											"name": "Trunc",
											"nameLocation": "420:5:11",
											"nodeType": "EnumValue",
											"src": "420:5:11"
										},
										{
											"id": 1885,
											"name": "Expand",
											"nameLocation": "450:6:11",
											"nodeType": "EnumValue",
											"src": "450:6:11"
										}
									],
									"name": "Rounding",
									"nameLocation": "316:8:11",
									"nodeType": "EnumDefinition",
									"src": "311:169:11"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "660:140:11",
										"statements": [
											{
												"id": 1916,
												"nodeType": "UncheckedBlock",
												"src": "670:124:11",
												"statements": [
													{
														"assignments": [
															1899
														],
														"declarations": [
															{
																"constant": false,
																"id": 1899,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "702:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1916,
																"src": "694:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1898,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "694:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1903,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1900,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "706:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1901,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1891,
																"src": "710:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "706:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "694:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1904,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1899,
																"src": "729:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1905,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "733:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "729:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1911,
														"nodeType": "IfStatement",
														"src": "725:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "744:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "751:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1909,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "743:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1897,
															"id": 1910,
															"nodeType": "Return",
															"src": "736:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "775:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1913,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1899,
																	"src": "781:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1914,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "774:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1897,
														"id": 1915,
														"nodeType": "Return",
														"src": "767:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "486:93:11",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "593:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "608:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "600:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "600:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "619:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "611:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:22:11"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "645:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1893,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "645:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "651:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:15:11"
									},
									"scope": 2929,
									"src": "584:216:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1945,
										"nodeType": "Block",
										"src": "983:113:11",
										"statements": [
											{
												"id": 1944,
												"nodeType": "UncheckedBlock",
												"src": "993:97:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1930,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1923,
																"src": "1021:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1931,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "1025:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1021:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1937,
														"nodeType": "IfStatement",
														"src": "1017:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1036:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1043:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1935,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1035:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1929,
															"id": 1936,
															"nodeType": "Return",
															"src": "1028:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1067:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1939,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1921,
																		"src": "1073:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1940,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1923,
																		"src": "1077:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1073:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1942,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1066:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1929,
														"id": 1943,
														"nodeType": "Return",
														"src": "1059:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "806:96:11",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "916:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "931:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "923:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "942:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "934:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "922:22:11"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "968:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1925,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "968:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "974:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:15:11"
									},
									"scope": 2929,
									"src": "907:189:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1987,
										"nodeType": "Block",
										"src": "1282:417:11",
										"statements": [
											{
												"id": 1986,
												"nodeType": "UncheckedBlock",
												"src": "1292:401:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1958,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1949,
																"src": "1550:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1555:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1550:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1965,
														"nodeType": "IfStatement",
														"src": "1546:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1566:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1572:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1963,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1565:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1957,
															"id": 1964,
															"nodeType": "Return",
															"src": "1558:16:11"
														}
													},
													{
														"assignments": [
															1967
														],
														"declarations": [
															{
																"constant": false,
																"id": 1967,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1596:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1986,
																"src": "1588:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1966,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1588:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1971,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1968,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1949,
																"src": "1600:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1969,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "1604:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1600:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1588:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1972,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1967,
																	"src": "1623:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1973,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1949,
																	"src": "1627:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1623:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1975,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "1632:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1623:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1981,
														"nodeType": "IfStatement",
														"src": "1619:33:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1643:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1650:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1979,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1642:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1957,
															"id": 1980,
															"nodeType": "Return",
															"src": "1635:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1674:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1983,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1967,
																	"src": "1680:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1984,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1673:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1957,
														"id": 1985,
														"nodeType": "Return",
														"src": "1666:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "1102:99:11",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1215:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1230:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "1222:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1241:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "1233:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:22:11"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "1267:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1953,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "1273:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1273:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:15:11"
									},
									"scope": 2929,
									"src": "1206:493:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2015,
										"nodeType": "Block",
										"src": "1886:114:11",
										"statements": [
											{
												"id": 2014,
												"nodeType": "UncheckedBlock",
												"src": "1896:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2000,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1993,
																"src": "1924:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1929:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1924:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2007,
														"nodeType": "IfStatement",
														"src": "1920:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1940:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1947:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2005,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1939:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1999,
															"id": 2006,
															"nodeType": "Return",
															"src": "1932:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1971:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2009,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1991,
																		"src": "1977:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2010,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1993,
																		"src": "1981:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1977:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2012,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1970:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1999,
														"id": 2013,
														"nodeType": "Return",
														"src": "1963:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1989,
										"nodeType": "StructuredDocumentation",
										"src": "1705:100:11",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1819:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1834:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "1826:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1826:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1845:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "1837:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1825:22:11"
									},
									"returnParameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "1871:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1995,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1871:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "1877:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1877:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:15:11"
									},
									"scope": 2929,
									"src": "1810:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2043,
										"nodeType": "Block",
										"src": "2197:114:11",
										"statements": [
											{
												"id": 2042,
												"nodeType": "UncheckedBlock",
												"src": "2207:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2028,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2021,
																"src": "2235:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2240:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2235:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2035,
														"nodeType": "IfStatement",
														"src": "2231:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2251:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2258:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2033,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2250:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2027,
															"id": 2034,
															"nodeType": "Return",
															"src": "2243:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2282:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2037,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2019,
																		"src": "2288:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2038,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2021,
																		"src": "2292:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2288:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2040,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2281:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2027,
														"id": 2041,
														"nodeType": "Return",
														"src": "2274:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2017,
										"nodeType": "StructuredDocumentation",
										"src": "2006:110:11",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2130:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2145:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "2137:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2137:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2156:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "2148:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2136:22:11"
									},
									"returnParameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "2182:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2023,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2182:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "2188:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2188:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2181:15:11"
									},
									"scope": 2929,
									"src": "2121:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2061,
										"nodeType": "Block",
										"src": "2448:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2056,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2054,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2047,
															"src": "2465:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2055,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "2469:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2465:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2058,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2049,
														"src": "2477:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2465:13:11",
													"trueExpression": {
														"id": 2057,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2047,
														"src": "2473:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2053,
												"id": 2060,
												"nodeType": "Return",
												"src": "2458:20:11"
											}
										]
									},
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "2317:59:11",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2390:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2402:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "2394:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2394:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2413:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "2405:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2405:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2393:22:11"
									},
									"returnParameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "2439:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2439:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2438:9:11"
									},
									"scope": 2929,
									"src": "2381:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2079,
										"nodeType": "Block",
										"src": "2623:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2072,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2065,
															"src": "2640:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2073,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2067,
															"src": "2644:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2640:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2076,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2067,
														"src": "2652:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2640:13:11",
													"trueExpression": {
														"id": 2075,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2065,
														"src": "2648:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2071,
												"id": 2078,
												"nodeType": "Return",
												"src": "2633:20:11"
											}
										]
									},
									"documentation": {
										"id": 2063,
										"nodeType": "StructuredDocumentation",
										"src": "2491:60:11",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2565:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2577:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "2569:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2569:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2588:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "2580:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2580:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2568:22:11"
									},
									"returnParameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "2614:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2614:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2613:9:11"
									},
									"scope": 2929,
									"src": "2556:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2102,
										"nodeType": "Block",
										"src": "2844:82:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2090,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2083,
																	"src": "2899:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2091,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2085,
																	"src": "2903:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2899:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2093,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2898:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2094,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2083,
																		"src": "2909:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2095,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2085,
																		"src": "2913:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2909:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2097,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2908:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2918:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2908:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2898:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2089,
												"id": 2101,
												"nodeType": "Return",
												"src": "2891:28:11"
											}
										]
									},
									"documentation": {
										"id": 2081,
										"nodeType": "StructuredDocumentation",
										"src": "2666:102:11",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2782:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2798:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "2790:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2790:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2809:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "2801:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2801:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2789:22:11"
									},
									"returnParameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "2835:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2835:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2834:9:11"
									},
									"scope": 2929,
									"src": "2773:153:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2136,
										"nodeType": "Block",
										"src": "3218:260:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2113,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2108,
														"src": "3232:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3237:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3232:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2121,
												"nodeType": "IfStatement",
												"src": "3228:127:11",
												"trueBody": {
													"id": 2120,
													"nodeType": "Block",
													"src": "3240:115:11",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2116,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2106,
																	"src": "3339:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2117,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2108,
																	"src": "3343:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3339:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2112,
															"id": 2119,
															"nodeType": "Return",
															"src": "3332:12:11"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2122,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2106,
															"src": "3443:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3448:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3443:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2126,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2106,
																			"src": "3457:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3461:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3457:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3456:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2130,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2108,
																"src": "3466:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3456:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3470:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3456:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3443:28:11",
													"trueExpression": {
														"hexValue": "30",
														"id": 2125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3452:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2112,
												"id": 2135,
												"nodeType": "Return",
												"src": "3436:35:11"
											}
										]
									},
									"documentation": {
										"id": 2104,
										"nodeType": "StructuredDocumentation",
										"src": "2932:210:11",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3156:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3172:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "3164:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3164:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3183:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "3175:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3163:22:11"
									},
									"returnParameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "3209:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3209:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3208:9:11"
									},
									"scope": 2929,
									"src": "3147:331:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2262,
										"nodeType": "Block",
										"src": "3900:4018:11",
										"statements": [
											{
												"id": 2261,
												"nodeType": "UncheckedBlock",
												"src": "3910:4002:11",
												"statements": [
													{
														"assignments": [
															2150
														],
														"declarations": [
															{
																"constant": false,
																"id": 2150,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4239:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2261,
																"src": "4231:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2149,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4231:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2154,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2151,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "4247:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2152,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2142,
																"src": "4251:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4247:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4231:21:11"
													},
													{
														"assignments": [
															2156
														],
														"declarations": [
															{
																"constant": false,
																"id": 2156,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4319:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2261,
																"src": "4311:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2155,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4311:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2157,
														"nodeType": "VariableDeclarationStatement",
														"src": "4311:13:11"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4391:122:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4409:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4426:1:11"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4429:1:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4436:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4432:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4432:6:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "4419:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4419:20:11"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "4413:2:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4456:43:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4473:2:11"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4477:5:11"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4469:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4469:14:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4488:2:11"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4492:5:11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4485:2:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4485:13:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4465:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4465:34:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "4456:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 2150,
																"isOffset": false,
																"isSlot": false,
																"src": "4477:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2150,
																"isOffset": false,
																"isSlot": false,
																"src": "4492:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2156,
																"isOffset": false,
																"isSlot": false,
																"src": "4456:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "4426:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2142,
																"isOffset": false,
																"isSlot": false,
																"src": "4429:1:11",
																"valueSize": 1
															}
														],
														"id": 2158,
														"nodeType": "InlineAssembly",
														"src": "4382:131:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2159,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2156,
																"src": "4594:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4603:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4594:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2167,
														"nodeType": "IfStatement",
														"src": "4590:368:11",
														"trueBody": {
															"id": 2166,
															"nodeType": "Block",
															"src": "4606:352:11",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2162,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2150,
																			"src": "4924:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2163,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2144,
																			"src": "4932:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4924:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2148,
																	"id": 2165,
																	"nodeType": "Return",
																	"src": "4917:26:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2168,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2144,
																"src": "5064:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2169,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2156,
																"src": "5079:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5064:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2175,
														"nodeType": "IfStatement",
														"src": "5060:88:11",
														"trueBody": {
															"id": 2174,
															"nodeType": "Block",
															"src": "5086:62:11",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2171,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1881,
																			"src": "5111:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5111:22:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2173,
																	"nodeType": "RevertStatement",
																	"src": "5104:29:11"
																}
															]
														}
													},
													{
														"assignments": [
															2177
														],
														"declarations": [
															{
																"constant": false,
																"id": 2177,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5411:9:11",
																"nodeType": "VariableDeclaration",
																"scope": 2261,
																"src": "5403:17:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2176,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5403:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2178,
														"nodeType": "VariableDeclarationStatement",
														"src": "5403:17:11"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5443:291:11",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5512:38:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5532:1:11"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5535:1:11"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "5538:11:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "5525:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5525:25:11"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "5512:9:11"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5632:41:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "5645:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "5655:9:11"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5666:5:11"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "5652:2:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5652:20:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5641:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5641:32:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "5632:5:11"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5690:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "5703:5:11"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "5710:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5699:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5699:21:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "5690:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "5538:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2150,
																"isOffset": false,
																"isSlot": false,
																"src": "5666:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2150,
																"isOffset": false,
																"isSlot": false,
																"src": "5690:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2150,
																"isOffset": false,
																"isSlot": false,
																"src": "5703:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2156,
																"isOffset": false,
																"isSlot": false,
																"src": "5632:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2156,
																"isOffset": false,
																"isSlot": false,
																"src": "5645:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2177,
																"isOffset": false,
																"isSlot": false,
																"src": "5512:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2177,
																"isOffset": false,
																"isSlot": false,
																"src": "5655:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2177,
																"isOffset": false,
																"isSlot": false,
																"src": "5710:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2140,
																"isOffset": false,
																"isSlot": false,
																"src": "5532:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2142,
																"isOffset": false,
																"isSlot": false,
																"src": "5535:1:11",
																"valueSize": 1
															}
														],
														"id": 2179,
														"nodeType": "InlineAssembly",
														"src": "5434:300:11"
													},
													{
														"assignments": [
															2181
														],
														"declarations": [
															{
																"constant": false,
																"id": 2181,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5946:4:11",
																"nodeType": "VariableDeclaration",
																"scope": 2261,
																"src": "5938:12:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2180,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5938:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2188,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2182,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2144,
																"src": "5953:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5968:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2184,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2144,
																			"src": "5972:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5968:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2186,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5967:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5953:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5938:46:11"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "6007:362:11",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6072:37:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6091:11:11"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6104:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6087:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6087:22:11"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "6072:11:11"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6176:25:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6189:5:11"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6196:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6185:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6185:16:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6176:5:11"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6316:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6336:1:11",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "6339:4:11"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6332:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6332:12:11"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "6346:4:11"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6328:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6328:23:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6353:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6324:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6324:31:11"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "6316:4:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "6072:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2144,
																"isOffset": false,
																"isSlot": false,
																"src": "6091:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2150,
																"isOffset": false,
																"isSlot": false,
																"src": "6176:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2150,
																"isOffset": false,
																"isSlot": false,
																"src": "6189:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2181,
																"isOffset": false,
																"isSlot": false,
																"src": "6104:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2181,
																"isOffset": false,
																"isSlot": false,
																"src": "6196:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2181,
																"isOffset": false,
																"isSlot": false,
																"src": "6316:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2181,
																"isOffset": false,
																"isSlot": false,
																"src": "6339:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2181,
																"isOffset": false,
																"isSlot": false,
																"src": "6346:4:11",
																"valueSize": 1
															}
														],
														"id": 2189,
														"nodeType": "InlineAssembly",
														"src": "5998:371:11"
													},
													{
														"expression": {
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2190,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2150,
																"src": "6435:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2191,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2156,
																	"src": "6444:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2192,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2181,
																	"src": "6452:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6444:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6435:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2195,
														"nodeType": "ExpressionStatement",
														"src": "6435:21:11"
													},
													{
														"assignments": [
															2197
														],
														"declarations": [
															{
																"constant": false,
																"id": 2197,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6782:7:11",
																"nodeType": "VariableDeclaration",
																"scope": 2261,
																"src": "6774:15:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2196,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6774:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2204,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6793:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2199,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2144,
																			"src": "6797:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6793:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2201,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6792:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6812:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6792:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6774:39:11"
													},
													{
														"expression": {
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2205,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "7030:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7041:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2207,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "7045:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2208,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "7059:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7045:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7041:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7030:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2212,
														"nodeType": "ExpressionStatement",
														"src": "7030:36:11"
													},
													{
														"expression": {
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2213,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "7099:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7110:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2215,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "7114:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2216,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "7128:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7114:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7110:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7099:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2220,
														"nodeType": "ExpressionStatement",
														"src": "7099:36:11"
													},
													{
														"expression": {
															"id": 2227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2221,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "7169:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7180:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2223,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "7184:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2224,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "7198:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7184:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7180:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7169:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2228,
														"nodeType": "ExpressionStatement",
														"src": "7169:36:11"
													},
													{
														"expression": {
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2229,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "7239:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7250:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2231,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "7254:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2232,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "7268:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7254:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7250:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7239:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2236,
														"nodeType": "ExpressionStatement",
														"src": "7239:36:11"
													},
													{
														"expression": {
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2237,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "7309:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7320:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2239,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "7324:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2240,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "7338:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7324:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7320:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7309:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2244,
														"nodeType": "ExpressionStatement",
														"src": "7309:36:11"
													},
													{
														"expression": {
															"id": 2251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2245,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "7380:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7391:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2247,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "7395:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2248,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "7409:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7395:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7391:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7380:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2252,
														"nodeType": "ExpressionStatement",
														"src": "7380:36:11"
													},
													{
														"expression": {
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2253,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2147,
																"src": "7850:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2254,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2150,
																	"src": "7859:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2255,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2197,
																	"src": "7867:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7859:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7850:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2258,
														"nodeType": "ExpressionStatement",
														"src": "7850:24:11"
													},
													{
														"expression": {
															"id": 2259,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2147,
															"src": "7895:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2148,
														"id": 2260,
														"nodeType": "Return",
														"src": "7888:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2138,
										"nodeType": "StructuredDocumentation",
										"src": "3484:313:11",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3811:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3826:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "3818:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3818:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3837:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "3829:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3829:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3848:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "3840:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3840:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3817:43:11"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3892:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "3884:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3884:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3883:16:11"
									},
									"scope": 2929,
									"src": "3802:4116:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2305,
										"nodeType": "Block",
										"src": "8160:192:11",
										"statements": [
											{
												"assignments": [
													2279
												],
												"declarations": [
													{
														"constant": false,
														"id": 2279,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8178:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2305,
														"src": "8170:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2278,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8170:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2285,
												"initialValue": {
													"arguments": [
														{
															"id": 2281,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2266,
															"src": "8194:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2282,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2268,
															"src": "8197:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2283,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2270,
															"src": "8200:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2280,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2263,
															2306
														],
														"referencedDeclaration": 2263,
														"src": "8187:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8187:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8170:42:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2287,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2273,
																"src": "8243:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1886",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1886",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2286,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2928,
															"src": "8226:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1886_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8226:26:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2290,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "8263:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2291,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2268,
																	"src": "8266:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2292,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2270,
																	"src": "8269:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2289,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8256:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8256:25:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8284:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8256:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8226:59:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2302,
												"nodeType": "IfStatement",
												"src": "8222:101:11",
												"trueBody": {
													"id": 2301,
													"nodeType": "Block",
													"src": "8287:36:11",
													"statements": [
														{
															"expression": {
																"id": 2299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2297,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2279,
																	"src": "8301:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8311:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8301:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2300,
															"nodeType": "ExpressionStatement",
															"src": "8301:11:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2303,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2279,
													"src": "8339:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2277,
												"id": 2304,
												"nodeType": "Return",
												"src": "8332:13:11"
											}
										]
									},
									"documentation": {
										"id": 2264,
										"nodeType": "StructuredDocumentation",
										"src": "7924:121:11",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8059:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8074:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "8066:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8066:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8085:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "8077:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8077:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8096:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "8088:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8088:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8118:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "8109:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1886",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2272,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2271,
														"name": "Rounding",
														"nameLocations": [
															"8109:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1886,
														"src": "8109:8:11"
													},
													"referencedDeclaration": 1886,
													"src": "8109:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1886",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8065:62:11"
									},
									"returnParameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "8151:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8151:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8150:9:11"
									},
									"scope": 2929,
									"src": "8050:302:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2417,
										"nodeType": "Block",
										"src": "8643:1585:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2314,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2309,
														"src": "8657:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8662:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8657:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2320,
												"nodeType": "IfStatement",
												"src": "8653:45:11",
												"trueBody": {
													"id": 2319,
													"nodeType": "Block",
													"src": "8665:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8686:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2313,
															"id": 2318,
															"nodeType": "Return",
															"src": "8679:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													2322
												],
												"declarations": [
													{
														"constant": false,
														"id": 2322,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9385:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2417,
														"src": "9377:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2321,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9377:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2331,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9394:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2325,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2309,
																			"src": "9405:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2324,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2585,
																			2620
																		],
																		"referencedDeclaration": 2585,
																		"src": "9400:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9400:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9411:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9400:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2329,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9399:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9394:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9377:36:11"
											},
											{
												"id": 2416,
												"nodeType": "UncheckedBlock",
												"src": "9814:408:11",
												"statements": [
													{
														"expression": {
															"id": 2341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2332,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "9838:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2333,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "9848:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2334,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "9857:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2335,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2322,
																					"src": "9861:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9857:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9848:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2338,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9847:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9872:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9847:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9838:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2342,
														"nodeType": "ExpressionStatement",
														"src": "9838:35:11"
													},
													{
														"expression": {
															"id": 2352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2343,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "9887:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2344,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "9897:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2347,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2345,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "9906:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2346,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2322,
																					"src": "9910:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9906:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9897:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2349,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9896:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9921:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9896:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9887:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2353,
														"nodeType": "ExpressionStatement",
														"src": "9887:35:11"
													},
													{
														"expression": {
															"id": 2363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2354,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "9936:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2355,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "9946:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2358,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2356,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "9955:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2357,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2322,
																					"src": "9959:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9955:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9946:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2360,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9945:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9970:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9945:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9936:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2364,
														"nodeType": "ExpressionStatement",
														"src": "9936:35:11"
													},
													{
														"expression": {
															"id": 2374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2365,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "9985:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2366,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "9995:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2369,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2367,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "10004:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2368,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2322,
																					"src": "10008:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10004:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9995:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2371,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9994:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10019:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9994:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9985:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2375,
														"nodeType": "ExpressionStatement",
														"src": "9985:35:11"
													},
													{
														"expression": {
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2376,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "10034:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2377,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "10044:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2380,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2378,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "10053:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2379,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2322,
																					"src": "10057:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10053:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10044:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2382,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10043:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10068:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10043:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10034:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2386,
														"nodeType": "ExpressionStatement",
														"src": "10034:35:11"
													},
													{
														"expression": {
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2387,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "10083:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2388,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "10093:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2389,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "10102:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2390,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2322,
																					"src": "10106:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10102:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10093:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2393,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10092:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10117:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10092:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10083:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2397,
														"nodeType": "ExpressionStatement",
														"src": "10083:35:11"
													},
													{
														"expression": {
															"id": 2407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2398,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2322,
																"src": "10132:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2399,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2322,
																				"src": "10142:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2400,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "10151:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2401,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2322,
																					"src": "10155:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10151:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10142:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2404,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10141:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10166:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10141:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10132:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2408,
														"nodeType": "ExpressionStatement",
														"src": "10132:35:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2410,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2322,
																	"src": "10192:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2411,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2309,
																		"src": "10200:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2412,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2322,
																		"src": "10204:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10200:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2409,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2080,
																"src": "10188:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10188:23:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2313,
														"id": 2415,
														"nodeType": "Return",
														"src": "10181:30:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2307,
										"nodeType": "StructuredDocumentation",
										"src": "8358:223:11",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8595:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8608:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "8600:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8600:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8599:11:11"
									},
									"returnParameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "8634:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8634:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8633:9:11"
									},
									"scope": 2929,
									"src": "8586:1642:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2452,
										"nodeType": "Block",
										"src": "10404:164:11",
										"statements": [
											{
												"id": 2451,
												"nodeType": "UncheckedBlock",
												"src": "10414:148:11",
												"statements": [
													{
														"assignments": [
															2430
														],
														"declarations": [
															{
																"constant": false,
																"id": 2430,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10446:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2451,
																"src": "10438:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2429,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10438:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2434,
														"initialValue": {
															"arguments": [
																{
																	"id": 2432,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2421,
																	"src": "10460:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2431,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2418,
																	2453
																],
																"referencedDeclaration": 2418,
																"src": "10455:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10455:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10438:24:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2435,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2430,
																"src": "10483:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2437,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2424,
																						"src": "10510:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2436,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2928,
																					"src": "10493:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1886_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2438,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10493:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2441,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2439,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2430,
																						"src": "10523:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2440,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2430,
																						"src": "10532:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10523:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2442,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2421,
																					"src": "10541:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10523:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10493:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10549:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10493:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10545:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2448,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10492:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10483:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2428,
														"id": 2450,
														"nodeType": "Return",
														"src": "10476:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2419,
										"nodeType": "StructuredDocumentation",
										"src": "10234:89:11",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10337:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10350:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "10342:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10342:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2424,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10362:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "10353:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1886",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2423,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2422,
														"name": "Rounding",
														"nameLocations": [
															"10353:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1886,
														"src": "10353:8:11"
													},
													"referencedDeclaration": 1886,
													"src": "10353:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1886",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10341:30:11"
									},
									"returnParameters": {
										"id": 2428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "10395:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10395:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10394:9:11"
									},
									"scope": 2929,
									"src": "10328:240:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2584,
										"nodeType": "Block",
										"src": "10759:922:11",
										"statements": [
											{
												"assignments": [
													2462
												],
												"declarations": [
													{
														"constant": false,
														"id": 2462,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10777:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2584,
														"src": "10769:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2461,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10769:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2464,
												"initialValue": {
													"hexValue": "30",
													"id": 2463,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10786:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10769:18:11"
											},
											{
												"id": 2581,
												"nodeType": "UncheckedBlock",
												"src": "10797:855:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2465,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "10825:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10834:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10825:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10840:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10825:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2479,
														"nodeType": "IfStatement",
														"src": "10821:99:11",
														"trueBody": {
															"id": 2478,
															"nodeType": "Block",
															"src": "10843:77:11",
															"statements": [
																{
																	"expression": {
																		"id": 2472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2470,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "10861:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10871:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10861:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2473,
																	"nodeType": "ExpressionStatement",
																	"src": "10861:13:11"
																},
																{
																	"expression": {
																		"id": 2476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2474,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "10892:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10902:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10892:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2477,
																	"nodeType": "ExpressionStatement",
																	"src": "10892:13:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2480,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "10937:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10946:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10937:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10951:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10937:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2494,
														"nodeType": "IfStatement",
														"src": "10933:96:11",
														"trueBody": {
															"id": 2493,
															"nodeType": "Block",
															"src": "10954:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2485,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "10972:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10982:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10972:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2488,
																	"nodeType": "ExpressionStatement",
																	"src": "10972:12:11"
																},
																{
																	"expression": {
																		"id": 2491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2489,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "11002:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11012:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11002:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2492,
																	"nodeType": "ExpressionStatement",
																	"src": "11002:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2495,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "11046:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11055:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11046:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11060:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11046:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2509,
														"nodeType": "IfStatement",
														"src": "11042:96:11",
														"trueBody": {
															"id": 2508,
															"nodeType": "Block",
															"src": "11063:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2500,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "11081:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11091:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11081:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2503,
																	"nodeType": "ExpressionStatement",
																	"src": "11081:12:11"
																},
																{
																	"expression": {
																		"id": 2506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2504,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "11111:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11121:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11111:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2507,
																	"nodeType": "ExpressionStatement",
																	"src": "11111:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2510,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "11155:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11164:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11155:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11169:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11155:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2524,
														"nodeType": "IfStatement",
														"src": "11151:96:11",
														"trueBody": {
															"id": 2523,
															"nodeType": "Block",
															"src": "11172:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2515,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "11190:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11200:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11190:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2518,
																	"nodeType": "ExpressionStatement",
																	"src": "11190:12:11"
																},
																{
																	"expression": {
																		"id": 2521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2519,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "11220:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2520,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11230:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11220:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2522,
																	"nodeType": "ExpressionStatement",
																	"src": "11220:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2525,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "11264:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11273:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11264:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11277:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11264:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2539,
														"nodeType": "IfStatement",
														"src": "11260:93:11",
														"trueBody": {
															"id": 2538,
															"nodeType": "Block",
															"src": "11280:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2530,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "11298:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11308:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11298:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2533,
																	"nodeType": "ExpressionStatement",
																	"src": "11298:11:11"
																},
																{
																	"expression": {
																		"id": 2536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2534,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "11327:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11337:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11327:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2537,
																	"nodeType": "ExpressionStatement",
																	"src": "11327:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2540,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "11370:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11379:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11370:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11383:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11370:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2554,
														"nodeType": "IfStatement",
														"src": "11366:93:11",
														"trueBody": {
															"id": 2553,
															"nodeType": "Block",
															"src": "11386:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2545,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "11404:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11414:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11404:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2548,
																	"nodeType": "ExpressionStatement",
																	"src": "11404:11:11"
																},
																{
																	"expression": {
																		"id": 2551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2549,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "11433:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11443:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11433:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2552,
																	"nodeType": "ExpressionStatement",
																	"src": "11433:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2555,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "11476:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11485:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11476:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11489:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11476:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2569,
														"nodeType": "IfStatement",
														"src": "11472:93:11",
														"trueBody": {
															"id": 2568,
															"nodeType": "Block",
															"src": "11492:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2560,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2456,
																			"src": "11510:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11520:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11510:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2563,
																	"nodeType": "ExpressionStatement",
																	"src": "11510:11:11"
																},
																{
																	"expression": {
																		"id": 2566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2564,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "11539:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11549:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11539:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2567,
																	"nodeType": "ExpressionStatement",
																	"src": "11539:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2570,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "11582:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11591:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11582:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11595:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11582:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2580,
														"nodeType": "IfStatement",
														"src": "11578:64:11",
														"trueBody": {
															"id": 2579,
															"nodeType": "Block",
															"src": "11598:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2575,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "11616:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11626:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11616:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2578,
																	"nodeType": "ExpressionStatement",
																	"src": "11616:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2582,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2462,
													"src": "11668:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2460,
												"id": 2583,
												"nodeType": "Return",
												"src": "11661:13:11"
											}
										]
									},
									"documentation": {
										"id": 2454,
										"nodeType": "StructuredDocumentation",
										"src": "10574:119:11",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10707:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10720:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "10712:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10712:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10711:15:11"
									},
									"returnParameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "10750:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10750:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10749:9:11"
									},
									"scope": 2929,
									"src": "10698:983:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2619,
										"nodeType": "Block",
										"src": "11914:168:11",
										"statements": [
											{
												"id": 2618,
												"nodeType": "UncheckedBlock",
												"src": "11924:152:11",
												"statements": [
													{
														"assignments": [
															2597
														],
														"declarations": [
															{
																"constant": false,
																"id": 2597,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11956:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2618,
																"src": "11948:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2596,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11948:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2601,
														"initialValue": {
															"arguments": [
																{
																	"id": 2599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2588,
																	"src": "11970:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2598,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2585,
																	2620
																],
																"referencedDeclaration": 2585,
																"src": "11965:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11965:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11948:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2602,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2597,
																"src": "11997:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2604,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2591,
																						"src": "12024:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2603,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2928,
																					"src": "12007:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1886_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2605,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12007:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2610,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2608,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2606,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12037:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2607,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2597,
																						"src": "12042:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12037:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2609,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2588,
																					"src": "12051:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12037:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12007:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12063:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12007:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12059:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2615,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12006:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11997:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2595,
														"id": 2617,
														"nodeType": "Return",
														"src": "11990:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2586,
										"nodeType": "StructuredDocumentation",
										"src": "11687:142:11",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11843:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11856:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "11848:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11848:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11872:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "11863:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1886",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2590,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2589,
														"name": "Rounding",
														"nameLocations": [
															"11863:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1886,
														"src": "11863:8:11"
													},
													"referencedDeclaration": 1886,
													"src": "11863:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1886",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11847:34:11"
									},
									"returnParameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "11905:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11905:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11904:9:11"
									},
									"scope": 2929,
									"src": "11834:248:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2748,
										"nodeType": "Block",
										"src": "12275:854:11",
										"statements": [
											{
												"assignments": [
													2629
												],
												"declarations": [
													{
														"constant": false,
														"id": 2629,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12293:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2748,
														"src": "12285:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2628,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12285:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2631,
												"initialValue": {
													"hexValue": "30",
													"id": 2630,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12302:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12285:18:11"
											},
											{
												"id": 2745,
												"nodeType": "UncheckedBlock",
												"src": "12313:787:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2632,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "12341:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12350:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12356:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12350:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12341:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2648,
														"nodeType": "IfStatement",
														"src": "12337:103:11",
														"trueBody": {
															"id": 2647,
															"nodeType": "Block",
															"src": "12360:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2637,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2623,
																			"src": "12378:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2638,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12387:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2639,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12393:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12387:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12378:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2642,
																	"nodeType": "ExpressionStatement",
																	"src": "12378:17:11"
																},
																{
																	"expression": {
																		"id": 2645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2643,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2629,
																			"src": "12413:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12423:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12413:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2646,
																	"nodeType": "ExpressionStatement",
																	"src": "12413:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2649,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "12457:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12466:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12472:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12466:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12457:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2665,
														"nodeType": "IfStatement",
														"src": "12453:103:11",
														"trueBody": {
															"id": 2664,
															"nodeType": "Block",
															"src": "12476:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2654,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2623,
																			"src": "12494:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2655,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12503:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12509:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12503:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12494:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2659,
																	"nodeType": "ExpressionStatement",
																	"src": "12494:17:11"
																},
																{
																	"expression": {
																		"id": 2662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2660,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2629,
																			"src": "12529:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12539:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12529:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2663,
																	"nodeType": "ExpressionStatement",
																	"src": "12529:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2666,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "12573:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12582:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12588:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12582:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12573:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2682,
														"nodeType": "IfStatement",
														"src": "12569:103:11",
														"trueBody": {
															"id": 2681,
															"nodeType": "Block",
															"src": "12592:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2671,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2623,
																			"src": "12610:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2672,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12619:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2673,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12625:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12619:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12610:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2676,
																	"nodeType": "ExpressionStatement",
																	"src": "12610:17:11"
																},
																{
																	"expression": {
																		"id": 2679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2677,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2629,
																			"src": "12645:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12655:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12645:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2680,
																	"nodeType": "ExpressionStatement",
																	"src": "12645:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2683,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "12689:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12698:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12704:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12698:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12689:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2699,
														"nodeType": "IfStatement",
														"src": "12685:100:11",
														"trueBody": {
															"id": 2698,
															"nodeType": "Block",
															"src": "12707:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2688,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2623,
																			"src": "12725:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12734:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12740:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12734:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12725:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2693,
																	"nodeType": "ExpressionStatement",
																	"src": "12725:16:11"
																},
																{
																	"expression": {
																		"id": 2696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2694,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2629,
																			"src": "12759:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12769:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12759:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2697,
																	"nodeType": "ExpressionStatement",
																	"src": "12759:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2700,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "12802:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12811:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12817:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12811:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12802:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2716,
														"nodeType": "IfStatement",
														"src": "12798:100:11",
														"trueBody": {
															"id": 2715,
															"nodeType": "Block",
															"src": "12820:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2705,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2623,
																			"src": "12838:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2706,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12847:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12853:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12847:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12838:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2710,
																	"nodeType": "ExpressionStatement",
																	"src": "12838:16:11"
																},
																{
																	"expression": {
																		"id": 2713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2711,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2629,
																			"src": "12872:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12882:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12872:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2714,
																	"nodeType": "ExpressionStatement",
																	"src": "12872:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2717,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "12915:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12924:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12930:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12924:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12915:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2733,
														"nodeType": "IfStatement",
														"src": "12911:100:11",
														"trueBody": {
															"id": 2732,
															"nodeType": "Block",
															"src": "12933:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2722,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2623,
																			"src": "12951:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2723,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12960:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2724,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12966:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12960:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12951:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2727,
																	"nodeType": "ExpressionStatement",
																	"src": "12951:16:11"
																},
																{
																	"expression": {
																		"id": 2730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2728,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2629,
																			"src": "12985:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12995:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12985:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2731,
																	"nodeType": "ExpressionStatement",
																	"src": "12985:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2734,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "13028:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2737,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13037:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13043:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13037:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13028:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2744,
														"nodeType": "IfStatement",
														"src": "13024:66:11",
														"trueBody": {
															"id": 2743,
															"nodeType": "Block",
															"src": "13046:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2739,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2629,
																			"src": "13064:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13074:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13064:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2742,
																	"nodeType": "ExpressionStatement",
																	"src": "13064:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2746,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2629,
													"src": "13116:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2627,
												"id": 2747,
												"nodeType": "Return",
												"src": "13109:13:11"
											}
										]
									},
									"documentation": {
										"id": 2621,
										"nodeType": "StructuredDocumentation",
										"src": "12088:120:11",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12222:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12236:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2749,
												"src": "12228:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12228:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12227:15:11"
									},
									"returnParameters": {
										"id": 2627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2749,
												"src": "12266:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12266:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12265:9:11"
									},
									"scope": 2929,
									"src": "12213:916:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2783,
										"nodeType": "Block",
										"src": "13364:170:11",
										"statements": [
											{
												"id": 2782,
												"nodeType": "UncheckedBlock",
												"src": "13374:154:11",
												"statements": [
													{
														"assignments": [
															2761
														],
														"declarations": [
															{
																"constant": false,
																"id": 2761,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13406:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2782,
																"src": "13398:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2760,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13398:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2765,
														"initialValue": {
															"arguments": [
																{
																	"id": 2763,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2752,
																	"src": "13421:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2762,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2749,
																	2784
																],
																"referencedDeclaration": 2749,
																"src": "13415:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13415:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13398:29:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2766,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2761,
																"src": "13448:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2768,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2755,
																						"src": "13475:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2767,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2928,
																					"src": "13458:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1886_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13458:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2774,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2772,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2770,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13488:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2771,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2761,
																						"src": "13494:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13488:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2773,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2752,
																					"src": "13503:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13488:20:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13458:50:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13515:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13458:58:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13511:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2779,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13457:60:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13448:69:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2759,
														"id": 2781,
														"nodeType": "Return",
														"src": "13441:76:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2750,
										"nodeType": "StructuredDocumentation",
										"src": "13135:143:11",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13292:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13306:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "13298:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13298:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2755,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13322:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "13313:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1886",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2754,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2753,
														"name": "Rounding",
														"nameLocations": [
															"13313:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1886,
														"src": "13313:8:11"
													},
													"referencedDeclaration": 1886,
													"src": "13313:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1886",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13297:34:11"
									},
									"returnParameters": {
										"id": 2759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "13355:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13355:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13354:9:11"
									},
									"scope": 2929,
									"src": "13283:251:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2870,
										"nodeType": "Block",
										"src": "13854:600:11",
										"statements": [
											{
												"assignments": [
													2793
												],
												"declarations": [
													{
														"constant": false,
														"id": 2793,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13872:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2870,
														"src": "13864:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2792,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13864:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2795,
												"initialValue": {
													"hexValue": "30",
													"id": 2794,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13881:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13864:18:11"
											},
											{
												"id": 2867,
												"nodeType": "UncheckedBlock",
												"src": "13892:533:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2796,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2787,
																	"src": "13920:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13929:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13920:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13935:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13920:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2810,
														"nodeType": "IfStatement",
														"src": "13916:98:11",
														"trueBody": {
															"id": 2809,
															"nodeType": "Block",
															"src": "13938:76:11",
															"statements": [
																{
																	"expression": {
																		"id": 2803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2801,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2787,
																			"src": "13956:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13966:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13956:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2804,
																	"nodeType": "ExpressionStatement",
																	"src": "13956:13:11"
																},
																{
																	"expression": {
																		"id": 2807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2805,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2793,
																			"src": "13987:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13997:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13987:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2808,
																	"nodeType": "ExpressionStatement",
																	"src": "13987:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2811,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2787,
																	"src": "14031:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14040:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14031:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14045:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14031:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2825,
														"nodeType": "IfStatement",
														"src": "14027:95:11",
														"trueBody": {
															"id": 2824,
															"nodeType": "Block",
															"src": "14048:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2816,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2787,
																			"src": "14066:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14076:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14066:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2819,
																	"nodeType": "ExpressionStatement",
																	"src": "14066:12:11"
																},
																{
																	"expression": {
																		"id": 2822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2820,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2793,
																			"src": "14096:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14106:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14096:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2823,
																	"nodeType": "ExpressionStatement",
																	"src": "14096:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2826,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2787,
																	"src": "14139:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14148:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14139:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14153:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14139:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2840,
														"nodeType": "IfStatement",
														"src": "14135:95:11",
														"trueBody": {
															"id": 2839,
															"nodeType": "Block",
															"src": "14156:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2831,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2787,
																			"src": "14174:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14184:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14174:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2834,
																	"nodeType": "ExpressionStatement",
																	"src": "14174:12:11"
																},
																{
																	"expression": {
																		"id": 2837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2835,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2793,
																			"src": "14204:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14214:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14204:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2838,
																	"nodeType": "ExpressionStatement",
																	"src": "14204:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2841,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2787,
																	"src": "14247:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14256:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14247:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14261:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14247:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2855,
														"nodeType": "IfStatement",
														"src": "14243:95:11",
														"trueBody": {
															"id": 2854,
															"nodeType": "Block",
															"src": "14264:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2846,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2787,
																			"src": "14282:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14292:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14282:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2849,
																	"nodeType": "ExpressionStatement",
																	"src": "14282:12:11"
																},
																{
																	"expression": {
																		"id": 2852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2850,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2793,
																			"src": "14312:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14322:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14312:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2853,
																	"nodeType": "ExpressionStatement",
																	"src": "14312:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2856,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2787,
																	"src": "14355:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14364:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14355:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14368:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14355:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2866,
														"nodeType": "IfStatement",
														"src": "14351:64:11",
														"trueBody": {
															"id": 2865,
															"nodeType": "Block",
															"src": "14371:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2861,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2793,
																			"src": "14389:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14399:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14389:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2864,
																	"nodeType": "ExpressionStatement",
																	"src": "14389:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2868,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2793,
													"src": "14441:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2791,
												"id": 2869,
												"nodeType": "Return",
												"src": "14434:13:11"
											}
										]
									},
									"documentation": {
										"id": 2785,
										"nodeType": "StructuredDocumentation",
										"src": "13540:246:11",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13800:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13815:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "13807:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13807:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13806:15:11"
									},
									"returnParameters": {
										"id": 2791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "13845:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13845:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13844:9:11"
									},
									"scope": 2929,
									"src": "13791:663:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2908,
										"nodeType": "Block",
										"src": "14691:177:11",
										"statements": [
											{
												"id": 2907,
												"nodeType": "UncheckedBlock",
												"src": "14701:161:11",
												"statements": [
													{
														"assignments": [
															2883
														],
														"declarations": [
															{
																"constant": false,
																"id": 2883,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14733:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2907,
																"src": "14725:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2882,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14725:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2887,
														"initialValue": {
															"arguments": [
																{
																	"id": 2885,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2874,
																	"src": "14749:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2884,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2871,
																	2909
																],
																"referencedDeclaration": 2871,
																"src": "14742:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14742:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14725:30:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2888,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2883,
																"src": "14776:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2890,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2877,
																						"src": "14803:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1886",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2889,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2928,
																					"src": "14786:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1886_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2891,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14786:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2897,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2892,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14816:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2895,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2893,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2883,
																									"src": "14822:6:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2894,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14832:1:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14822:11:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2896,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14821:13:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14816:18:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2898,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2874,
																					"src": "14837:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14816:26:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14786:56:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14849:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14786:64:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14845:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2904,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14785:66:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14776:75:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2881,
														"id": 2906,
														"nodeType": "Return",
														"src": "14769:82:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2872,
										"nodeType": "StructuredDocumentation",
										"src": "14460:144:11",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14618:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2874,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14633:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2909,
												"src": "14625:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14625:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14649:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2909,
												"src": "14640:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1886",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2876,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2875,
														"name": "Rounding",
														"nameLocations": [
															"14640:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1886,
														"src": "14640:8:11"
													},
													"referencedDeclaration": 1886,
													"src": "14640:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1886",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14624:34:11"
									},
									"returnParameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2909,
												"src": "14682:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14682:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14681:9:11"
									},
									"scope": 2929,
									"src": "14609:259:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2927,
										"nodeType": "Block",
										"src": "15066:48:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2920,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2913,
																	"src": "15089:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1886",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1886",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15083:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2918,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15083:5:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15083:15:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15101:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15083:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2924,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15106:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15083:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2917,
												"id": 2926,
												"nodeType": "Return",
												"src": "15076:31:11"
											}
										]
									},
									"documentation": {
										"id": 2910,
										"nodeType": "StructuredDocumentation",
										"src": "14874:113:11",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15001:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2913,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15027:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "15018:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1886",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2912,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2911,
														"name": "Rounding",
														"nameLocations": [
															"15018:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1886,
														"src": "15018:8:11"
													},
													"referencedDeclaration": 1886,
													"src": "15018:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1886",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15017:19:11"
									},
									"returnParameters": {
										"id": 2917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "15060:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2915,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15060:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15059:6:11"
									},
									"scope": 2929,
									"src": "14992:122:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2930,
							"src": "202:14914:11",
							"usedErrors": [
								1881
							]
						}
					],
					"src": "103:15014:11"
				},
				"id": 11
			},
			"MNFT1155.sol": {
				"ast": {
					"absolutePath": "MNFT1155.sol",
					"exportedSymbols": {
						"Arrays": [
							1699
						],
						"Context": [
							1729
						],
						"ERC1155": [
							1335
						],
						"ERC165": [
							1863
						],
						"IERC1155": [
							1458
						],
						"IERC1155Errors": [
							284
						],
						"IERC1155MetadataURI": [
							1516
						],
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							1875
						],
						"MALLU": [
							3006
						],
						"Ownable": [
							147
						]
					},
					"id": 3007,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2931,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "83:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 2932,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3007,
							"sourceUnit": 1336,
							"src": "110:59:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2933,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3007,
							"sourceUnit": 148,
							"src": "171:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2934,
										"name": "ERC1155",
										"nameLocations": [
											"245:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1335,
										"src": "245:7:12"
									},
									"id": 2935,
									"nodeType": "InheritanceSpecifier",
									"src": "245:7:12"
								},
								{
									"baseName": {
										"id": 2936,
										"name": "Ownable",
										"nameLocations": [
											"254:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "254:7:12"
									},
									"id": 2937,
									"nodeType": "InheritanceSpecifier",
									"src": "254:7:12"
								}
							],
							"canonicalName": "MALLU",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3006,
							"linearizedBaseContracts": [
								3006,
								147,
								1335,
								284,
								1516,
								1458,
								1863,
								1875,
								1729
							],
							"name": "MALLU",
							"nameLocation": "236:5:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2948,
										"nodeType": "Block",
										"src": "426:2:12",
										"statements": []
									},
									"id": 2949,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "697066733a2f2f6261666b7265696632747268626f7467613278336d7271356478617661363279706771703379636f67673435726a677772797a6665626c6a6d7261",
													"id": 2942,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "320:68:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_cc14d9d152288110bb6cd8f00736a77dbd45e58d117a5b7d4a7ab6bd571d2c8c",
														"typeString": "literal_string \"ipfs://bafkreif2trhbotga2x3mrq5dxava62ypgqp3ycogg45rjgwryzfebljmra\""
													},
													"value": "ipfs://bafkreif2trhbotga2x3mrq5dxava62ypgqp3ycogg45rjgwryzfebljmra"
												}
											],
											"id": 2943,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2941,
												"name": "ERC1155",
												"nameLocations": [
													"312:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1335,
												"src": "312:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "312:77:12"
										},
										{
											"arguments": [
												{
													"id": 2945,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2939,
													"src": "407:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2946,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2944,
												"name": "Ownable",
												"nameLocations": [
													"399:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "399:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "399:21:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2939,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "289:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "281:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "281:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "280:22:12"
									},
									"returnParameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "426:0:12"
									},
									"scope": 3006,
									"src": "269:159:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2960,
										"nodeType": "Block",
										"src": "491:34:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2957,
															"name": "newuri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2951,
															"src": "510:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2956,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "502:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 2958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "502:15:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2959,
												"nodeType": "ExpressionStatement",
												"src": "502:15:12"
											}
										]
									},
									"functionSelector": "02fe5305",
									"id": 2961,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2954,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2953,
												"name": "onlyOwner",
												"nameLocations": [
													"481:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "481:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "481:9:12"
										}
									],
									"name": "setURI",
									"nameLocation": "445:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2951,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "466:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "452:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2950,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "452:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "451:22:12"
									},
									"returnParameters": {
										"id": 2955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "491:0:12"
									},
									"scope": 3006,
									"src": "436:89:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2981,
										"nodeType": "Block",
										"src": "651:51:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2975,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2963,
															"src": "668:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2976,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2965,
															"src": "677:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2977,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2967,
															"src": "681:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2978,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2969,
															"src": "689:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2974,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "662:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 2979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "662:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2980,
												"nodeType": "ExpressionStatement",
												"src": "662:32:12"
											}
										]
									},
									"functionSelector": "731133e9",
									"id": 2982,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2972,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2971,
												"name": "onlyOwner",
												"nameLocations": [
													"636:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "636:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "636:9:12"
										}
									],
									"name": "mint",
									"nameLocation": "542:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2963,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "555:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2982,
												"src": "547:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2965,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "572:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2982,
												"src": "564:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "564:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2967,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "584:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2982,
												"src": "576:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "605:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2982,
												"src": "592:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2968,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "592:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:64:12"
									},
									"returnParameters": {
										"id": 2973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "651:0:12"
									},
									"scope": 3006,
									"src": "533:169:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3004,
										"nodeType": "Block",
										"src": "848:53:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2998,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2984,
															"src": "870:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2999,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2987,
															"src": "874:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 3000,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2990,
															"src": "879:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 3001,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2992,
															"src": "888:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2997,
														"name": "_mintBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "859:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 3002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "859:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3003,
												"nodeType": "ExpressionStatement",
												"src": "859:34:12"
											}
										]
									},
									"functionSelector": "1f7fdffa",
									"id": 3005,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2995,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2994,
												"name": "onlyOwner",
												"nameLocations": [
													"833:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "833:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "833:9:12"
										}
									],
									"name": "mintBatch",
									"nameLocation": "719:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2984,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "737:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 3005,
												"src": "729:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2987,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "758:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3005,
												"src": "741:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2985,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "741:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2986,
													"nodeType": "ArrayTypeName",
													"src": "741:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2990,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "780:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 3005,
												"src": "763:24:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2988,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "763:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2989,
													"nodeType": "ArrayTypeName",
													"src": "763:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2992,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "802:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 3005,
												"src": "789:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2991,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "789:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "728:79:12"
									},
									"returnParameters": {
										"id": 2996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "848:0:12"
									},
									"scope": 3006,
									"src": "710:191:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3007,
							"src": "227:677:12",
							"usedErrors": [
								13,
								18,
								249,
								254,
								259,
								266,
								271,
								276,
								283
							]
						}
					],
					"src": "83:821:12"
				},
				"id": 12
			}
		}
	}
}